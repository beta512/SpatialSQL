You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.

In SpatiLite,
	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.
	The function Area( s Surface , 1) returns the area of s, measured in meters.
	The function GLength( c Curve , 1) returns the length of c, measured in meters.
	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.

	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。
	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。

/* Some SQL examples are provided based on similar problems: */
/* Answer the following: 地铁S7号线周边500米范围内有多少家宾馆？ */
Select count(distinct hotels.name) from subways inner join hotels On Distance(subways.Shape, hotels.Location, 1) < 500 where subways.line = 'S7'

/* Answer the following: 南京市各区的地铁线路长度分别是多少？应该计算地铁线路与各区交叠部分的长度。 */
Select districts.name, Sum(GLength(Intersection(districts.Shape, subways.Shape), 1)) from districts inner join subways On Intersects(districts.Shape, subways.Shape) = 1 group by districts.name

/* Answer the following: 2023年GDP最高的省份是哪一个？该省有多少座机场？一个省由多个城市构成。 */
Select cities.province, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 where cities.province = (Select province from GDPs order by year_2023 desc limit 1)

/* Answer the following: 湖北省2010年的星级酒店有多少个？ */
Select Sum(star_hotel_number) from cities inner join tours on cities.name = tours.city where year = 2010 and cities.province = '湖北省'

/* Answer the following: 南京市每条道路的总长度是多少？一条道路由所有名字相同的路段构成。 */
Select name, Sum(length) from roads group by name

/* Given the following database schema: */
CREATE TABLE "cities" (
name TEXT PRIMARY KEY, 
administrative_division_code TEXT NOT NULL, 
administrative_division_category TEXT NOT NULL, 
POP2020 INTEGER NOT NULL, 
POP2010 INTEGER NOT NULL, 
POP2000 INTEGER NOT NULL, 
shape MULTIPOLYGON NOT NULL, 
province TEXT REFERENCES provinces (name), 
Shape_Area DOUBLE, 
Shape_Length DOUBLE)

CREATE TABLE "provinces" (
name TEXT PRIMARY KEY, 
pinyin_name TEXT NOT NULL, 
administrative_division_code TEXT NOT NULL, 
shape MULTIPOLYGON NOT NULL)

CREATE TABLE "universities" (
name TEXT PRIMARY KEY, 
academic_discipline_category TEXT NOT NULL, 
operation_type TEXT NOT NULL, 
educational_level TEXT NOT NULL, 
project_985 INTEGER NOT NULL, 
project_211 INTEGER NOT NULL, 
double_tops INTEGER NOT NULL, 
affiliation TEXT, 
address TEXT, 
location POINT NOT NULL, 
province TEXT REFERENCES provinces (name), 
city TEXT REFERENCES cities (name), 
CONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), 
CONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), 
CONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))


/* Answer the following with no explanation: 我想知道全国重点高校的分布情况。重点高校是指211和985大学；分布情况是指每个省重点高校的数量。 */
SELECT 