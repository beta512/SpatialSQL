[
    {
        "db_id":"tourism",
        "id":"tourism01",
        "sql":"SELECT SUM(Domestic_Tourism_Earnings_Wan_Yuan) FROM tours INNER JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism02",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) FROM tours WHERE city IN (SELECT name FROM cities WHERE province = '湖北省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism03",
        "sql":"SELECT SUM(star_hotel_number) FROM tours WHERE city IN (SELECT name FROM cities WHERE province = '湖北省') AND year = 2010"
    },
    {
        "db_id":"tourism",
        "id":"tourism04",
        "sql":"SELECT cities.name, COUNT(airports.IATA) AS airport_count FROM cities JOIN airports ON Contains(cities.Shape, airports.Location) GROUP BY cities.name ORDER BY airport_count DESC"
    },
    {
        "db_id":"tourism",
        "id":"tourism05",
        "sql":"SELECT name FROM cities WHERE name NOT IN (SELECT Location FROM airports)"
    },
    {
        "db_id":"tourism",
        "id":"tourism06",
        "sql":"SELECT cities.name, COUNT(*) AS FiveA_Spots FROM cities JOIN scenicSpots ON Within(scenicSpots.Location, cities.Shape) = 1 AND scenicSpots.level = '5A' GROUP BY cities.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism07",
        "sql":"SELECT GDPs.province, SUM(Area(cities.Shape, 1)) AS TotalArea FROM cities JOIN GDPs ON cities.province = GDPs.province GROUP BY GDPs.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism08",
        "sql":"SELECT GDPs.province, SUM(Area(cities.Shape, 1)) AS TotalArea FROM cities JOIN GDPs ON cities.province = GDPs.province GROUP BY GDPs.province ORDER BY TotalArea DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism09",
        "sql":"SELECT province FROM cities ORDER BY MbrMinX(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism10",
        "sql":"SELECT province FROM cities ORDER BY MbrMinY(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism11",
        "sql":"SELECT name FROM cities WHERE province = '河南省' ORDER BY MbrMaxY(Shape) DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism12",
        "sql":"SELECT COUNT(scenicSpots.name) FROM scenicSpots INNER JOIN stations ON Distance(scenicSpots.Location, stations.Location, 1) < 10 * 1000 WHERE stations.name = '六安' AND scenicSpots.level >= '3A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism13",
        "sql":"SELECT scenicSpots.name, Distance(stations.Location, scenicSpots.Location, 1) AS distance FROM scenicSpots JOIN stations ON Distance(stations.Location, scenicSpots.Location, 1) < 100 * 1000 WHERE stations.name = '岳阳东' AND scenicSpots.level = '5A' ORDER BY distance"
    },
    {
        "db_id":"tourism",
        "id":"tourism14",
        "sql":"SELECT GDPs.province, COUNT(airports.IATA) AS airport_count FROM GDPs JOIN cities ON GDPs.province = cities.province LEFT JOIN airports ON Within(airports.Location, cities.Shape) = 1 WHERE GDPs.year_2023 = (SELECT MAX(year_2023) FROM GDPs) GROUP BY GDPs.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism15",
        "sql":"SELECT province FROM GDPs ORDER BY year_2023 DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism16",
        "sql":"SELECT city FROM tours WHERE year BETWEEN 2011 AND 2020 ORDER BY international_tourists_number_Wan DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism17",
        "sql":"SELECT COUNT(*) FROM airports WHERE Location IN (SELECT Shape FROM cities WHERE name = '哈尔滨市')"
    },
    {
        "db_id":"tourism",
        "id":"tourism18",
        "sql":"SELECT airports.Name FROM airports JOIN cities ON Contains(cities.Shape, airports.Location) WHERE cities.name = '北京市'"
    },
    {
        "db_id":"tourism",
        "id":"tourism19",
        "sql":"SELECT COUNT(*) FROM scenicSpots INNER JOIN cities ON scenicSpots.address = cities.name WHERE cities.province = '新疆维吾尔自治区' AND scenicSpots.level >= '3A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism20",
        "sql":"SELECT SUM(Area(Shape, 1)) AS Total_Area FROM cities WHERE province = '西藏自治区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism21",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism22",
        "sql":"SELECT SUM(Area(Shape, 1)) FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省')"
    },
    {
        "db_id":"tourism",
        "id":"tourism23",
        "sql":"SELECT province, MAX(Area(Shape, 1)) AS max_area FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省') GROUP BY province ORDER BY max_area DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism24",
        "sql":"SELECT COUNT(*) AS ServicedCities FROM cities WHERE Distance((SELECT Location FROM airports WHERE Name = '大理'), cities.Shape, 1) <= 150000"
    },
    {
        "db_id":"tourism",
        "id":"tourism25",
        "sql":"SELECT s.name, Distance(c.Shape, s.Location, 1) AS distance FROM scenicSpots s, cities c WHERE s.level = '5A' AND c.name = '北京市' AND s.address LIKE '%北京市%' ORDER BY distance DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism26",
        "sql":"SELECT Distance((SELECT Location FROM scenicSpots WHERE name = '北海公园'), (SELECT Location FROM scenicSpots WHERE name = '恭王府'), 1) as Distance_in_meters"
    },
    {
        "db_id":"tourism",
        "id":"tourism27",
        "sql":"SELECT b.name, Distance(a.Location, b.Location, 1) AS distance FROM scenicSpots a JOIN scenicSpots b ON a.name = '八大处公园' AND b.level = '5A' AND b.name != '八大处公园' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism28",
        "sql":"SELECT cities.name FROM cities INNER JOIN airports ON Contains(cities.Shape, airports.Location) WHERE airports.Name = '阿克苏/温宿'"
    },
    {
        "db_id":"tourism",
        "id":"tourism29",
        "sql":"SELECT cities.name FROM scenicSpots JOIN cities ON Contains(cities.Shape, scenicSpots.Location) WHERE scenicSpots.name = '天台山景区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism30",
        "sql":"SELECT t.city, COUNT(ss.name) AS FiveA_Spots FROM tours t JOIN cities c ON t.city = c.name JOIN scenicSpots ss ON ss.address LIKE '%' || c.name || '%' WHERE t.year = 2020 AND ss.level = '5A' GROUP BY t.city ORDER BY t.international_tourists_number_Wan DESC LIMIT 10"
    },
    {
        "db_id":"tourism",
        "id":"tourism31",
        "sql":"SELECT province, Domestic_Tourism_Earnings_Wan_Yuan FROM tours JOIN cities ON tours.city = cities.name WHERE province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism32",
        "sql":"SELECT g.province, SUM(Area(c.Shape, 1)) AS total_area FROM GDPs g JOIN cities c ON g.province = c.province WHERE g.year_2023 > (SELECT year_2023 FROM GDPs WHERE province = '浙江省') GROUP BY g.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism33",
        "sql":"SELECT city, MAX(star_hotel_number) AS max_star_hotels FROM tours WHERE year = 2020 GROUP BY city ORDER BY max_star_hotels DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic01",
        "sql":"SELECT distance FROM buslines WHERE name = '874路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic02",
        "sql":"SELECT name, MAX(distance) AS length FROM buslines GROUP BY name ORDER BY length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic03",
        "sql":"SELECT b.name AS BusLineName, bs1.name AS StartStop, bs2.name AS EndStop, b.distance AS Length FROM buslines b JOIN busstops bs1 ON b.start_stop = bs1.name JOIN busstops bs2 ON b.end_stop = bs2.name ORDER BY b.distance DESC LIMIT 10"
    },
    {
        "db_id":"traffic",
        "id":"traffic04",
        "sql":"SELECT roads.Name, SUM(GLength(roads.Shape, 1)) AS TotalLength FROM roads INNER JOIN districts ON Intersects(roads.Shape, districts.Shape) = 1 WHERE districts.name = '南京市' GROUP BY roads.Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic05",
        "sql":"SELECT Name, SUM(length) AS TotalLength FROM roads WHERE pyname IN (SELECT pyname FROM roads INNER JOIN districts ON Intersects(roads.Shape, districts.Shape) = 1 WHERE districts.name = '南京市') GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic06",
        "sql":"SELECT SUM(g.Shape_Area) AS TotalGreenSpaceArea FROM greenspaces g JOIN districts d ON Intersects(g.Shape, d.Shape) WHERE d.name = '南京市'"
    },
    {
        "db_id":"traffic",
        "id":"traffic07",
        "sql":"SELECT NAME, SUM(Shape_Area) AS Total_Area FROM greenspaces GROUP BY NAME"
    },
    {
        "db_id":"traffic",
        "id":"traffic08",
        "sql":"SELECT NAME, MAX(Shape_Area) AS MaxArea FROM greenspaces JOIN districts ON Within(greenspaces.Shape, districts.Shape) WHERE districts.name = '南京市' GROUP BY greenspaces.NAME ORDER BY MaxArea DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic09",
        "sql":"SELECT SUM(Area(Shape, 1)) AS TotalArea FROM greenspaces WHERE NAME = '玄武湖公园'"
    },
    {
        "db_id":"traffic",
        "id":"traffic10",
        "sql":"SELECT d.name AS DistrictName, SUM(Area(Intersection(g.Shape, d.Shape), 1)) AS GreenSpaceArea FROM districts d JOIN greenspaces g ON Intersects(g.Shape, d.Shape) WHERE d.name LIKE '南京市%' GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic11",
        "sql":"SELECT d.name AS DistrictName, SUM(Area(Intersection(g.Shape, d.Shape), 1)) AS TotalGreenArea FROM districts d JOIN greenspaces g ON Intersects(g.Shape, d.Shape) WHERE d.name LIKE '南京市%' GROUP BY d.name ORDER BY TotalGreenArea DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic12",
        "sql":"SELECT Line, COUNT(*) AS NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic13",
        "sql":"SELECT Line, COUNT(station) AS NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic14",
        "sql":"SELECT name FROM buslines WHERE start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic15",
        "sql":"SELECT hotels.NAME, Distance(busstops.Location, hotels.Location, 1) AS distance FROM busstops JOIN hotels ON Distance(busstops.Location, hotels.Location, 1) < 1000 WHERE busstops.name = '三元巷' ORDER BY distance LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic16",
        "sql":"SELECT subways.Line, COUNT(*) AS StationCount FROM subwaystations JOIN subways ON subwaystations.Line = subways.Line GROUP BY subways.Line ORDER BY StationCount DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic17",
        "sql":"SELECT subways.Line, COUNT(DISTINCT districts.name) AS DistrictCount FROM subways JOIN subwaystations ON subways.Line = subwaystations.Line JOIN districts ON Intersects(subwaystations.Location, districts.Shape) GROUP BY subways.Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic18",
        "sql":"SELECT GLength(Shape, 1) AS LengthInMeters FROM subways WHERE Line = 'line4'"
    },
    {
        "db_id":"traffic",
        "id":"traffic19",
        "sql":"SELECT distinct s.Line FROM subways s JOIN subways s2 ON Intersects(s.Shape, s2.Shape) = 1 WHERE s2.Line = 'line10二期' AND s.Line != 'line10二期'"
    },
    {
        "db_id":"traffic",
        "id":"traffic20",
        "sql":"SELECT SUM(GLength(Shape, 1)) FROM subways WHERE Line IN (SELECT Line FROM subwaystations WHERE address LIKE '%南京%')"
    },
    {
        "db_id":"traffic",
        "id":"traffic21",
        "sql":"SELECT s.station, Distance(a.Location, s.Location, 1) AS distance FROM agencies a JOIN subwaystations s ON a.NAME = '南京市文物局' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic22",
        "sql":"SELECT hotels.NAME, Distance(subwaystations.Location, hotels.Location, 1) AS Distance FROM subwaystations JOIN hotels ON Distance(subwaystations.Location, hotels.Location, 1) < 1000 WHERE subwaystations.Line = 'line4' AND subwaystations.station = '鼓楼' ORDER BY Distance"
    },
    {
        "db_id":"traffic",
        "id":"traffic23",
        "sql":"SELECT s.station, MIN(Distance(i.point, s.Location, 1)) AS distance FROM ( SELECT Intersection(a.Shape, b.Shape) AS point FROM buslines a, buslines b WHERE a.name = '874路' AND b.name = '711路' ) i, subwaystations s ORDER BY Distance(i.point, s.Location, 1) ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic24",
        "sql":"SELECT s.station, MIN(Distance(r.Shape, s.Location, 1)) AS distance FROM roads r, subwaystations s WHERE r.Name IN ('秦淮路', '将军大道') AND Intersects(r.Shape, (SELECT Shape FROM roads WHERE Name = '将军大道')) GROUP BY s.station ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic25",
        "sql":"SELECT rails.Name, SUM(GLength(rails.Shape, 1)) AS TotalLength FROM rails JOIN districts ON Intersects(rails.Shape, districts.Shape) = 1 WHERE districts.name = '南京市' GROUP BY rails.Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic26",
        "sql":"SELECT Name, SUM(GLength(Shape, 1)) AS TotalLength FROM rails GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic27",
        "sql":"SELECT SUM(GLength(Shape, 1)) AS TotalRailwayLength FROM rails JOIN districts ON Intersects(rails.Shape, districts.Shape) WHERE districts.name = '南京市'"
    },
    {
        "db_id":"traffic",
        "id":"traffic28",
        "sql":"SELECT districts.name, COUNT(agencies.NAME) AS NumberOfAgencies FROM districts JOIN agencies ON Within(agencies.Location, districts.Shape) GROUP BY districts.name ORDER BY NumberOfAgencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic29",
        "sql":"SELECT districts.name FROM subwaystations JOIN districts ON Intersects(subwaystations.Location, districts.Shape) WHERE subwaystations.station = '大行宫'"
    },
    {
        "db_id":"traffic",
        "id":"traffic30",
        "sql":"SELECT districts.name FROM agencies JOIN districts ON Contains(districts.Shape, agencies.Location) WHERE agencies.NAME = '江苏省海事局'"
    },
    {
        "db_id":"traffic",
        "id":"traffic31",
        "sql":"SELECT name, Area(Shape, 1) as area FROM districts WHERE name LIKE '%南京%' ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic32",
        "sql":"SELECT name, Area(Shape, 1) AS Area FROM districts WHERE name LIKE '南京市%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic33",
        "sql":"SELECT districts.name, COUNT(DISTINCT subways.Line) AS NumberOfSubwayLines FROM districts JOIN subwaystations ON districts.administrative_division_code = subwaystations.adcode JOIN subways ON subwaystations.Line = subways.Line WHERE districts.name = '南京市' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic34",
        "sql":"SELECT distinct hotels.NAME FROM hotels JOIN roads ON Distance(hotels.Location, roads.Shape, 1) < 1000 WHERE roads.Name = '广州路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic35",
        "sql":"SELECT subwaystations.station, MIN(Distance(agencies.Location, subwaystations.Location, 1)) AS distance FROM agencies JOIN subwaystations ON Intersects(Buffer(agencies.Location, 1000), subwaystations.Location) WHERE agencies.NAME = '南京市房产局' GROUP BY subwaystations.station ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic36",
        "sql":"SELECT COUNT(DISTINCT Line) FROM subways WHERE Intersects(Shape, (SELECT Shape FROM districts WHERE name = '玄武区'))"
    },
    {
        "db_id":"traffic",
        "id":"traffic37",
        "sql":"SELECT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name JOIN districts ON Contains(districts.Shape, busstops.Location) WHERE districts.name = '六合区' AND buslines.start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic38",
        "sql":"SELECT districts.name, buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name JOIN districts ON Contains(districts.Shape, busstops.Location) WHERE buslines.start_time < '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic39",
        "sql":"SELECT s.station, MIN(Distance(b.Shape, s.Location, 1)) AS Distance FROM buslines b JOIN subwaystations s ON b.name = '709路' GROUP BY s.station ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic40",
        "sql":"SELECT h.name, Distance(a.Location, h.Location, 1) AS distance FROM agencies a JOIN hotels h ON Distance(a.Location, h.Location, 1) <= 500 WHERE a.NAME = '南京市文物局' ORDER BY distance ASC LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic41",
        "sql":"SELECT b.name FROM buslines b JOIN roads r ON Intersects(b.Shape, r.Shape) = 1 WHERE r.Name = '建康路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic42",
        "sql":"SELECT districts.name, COUNT(agencies.NAME) AS NumberOfAgencies FROM districts JOIN agencies ON Within(agencies.Location, districts.Shape) GROUP BY districts.name ORDER BY NumberOfAgencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic43",
        "sql":"SELECT hotels.NAME, MIN(Distance(subwaystations.Location, hotels.Location, 1)) AS distance FROM hotels INNER JOIN subwaystations ON subwaystations.station = '南京南站' INNER JOIN districts ON districts.name = '江宁区' WHERE Contains(districts.Shape, hotels.Location) GROUP BY hotels.NAME ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic44",
        "sql":"SELECT d.name AS District, SUM(GLength(Intersection(s.Shape, d.Shape), 1)) AS SubwayLength FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic45",
        "sql":"SELECT d.name AS district, SUM(GLength(Intersection(s.Shape, d.Shape), 1)) AS total_length FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) WHERE d.name LIKE '南京市%' GROUP BY d.name ORDER BY total_length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic46",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN districts ON Intersects(subways.Shape, districts.Shape) = 1 WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic47",
        "sql":"SELECT distinct districts.name FROM districts JOIN rails ON Intersects(districts.Shape, rails.Shape) = 1 WHERE districts.name LIKE '南京市%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic48",
        "sql":"SELECT COUNT(*) FROM hotels JOIN districts ON Contains(districts.Shape, hotels.Location) WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic49",
        "sql":"SELECT COUNT(hotels.NAME) FROM hotels JOIN subways ON Distance(hotels.Location, subways.Shape, 1) < 500 WHERE subways.Line = 'S7'"
    },
    {
        "db_id":"traffic",
        "id":"traffic50",
        "sql":"SELECT DISTINCT districts.name FROM greenspaces INNER JOIN districts ON Intersects(districts.Shape, greenspaces.Shape) = 1 WHERE greenspaces.NAME = '钟山风景区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic51",
        "sql":"SELECT s.station, MIN(Distance(g.Shape, s.Location, 1)) AS Distance FROM greenspaces g JOIN subwaystations s ON g.NAME = '郑和公园' GROUP BY s.station ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic52",
        "sql":"SELECT g.NAME, MIN(Distance(s.Location, g.Shape, 1)) AS Distance FROM subwaystations s, greenspaces g WHERE s.station = '上海路' AND g.NAME LIKE '%公园%' GROUP BY g.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic53",
        "sql":"SELECT SUM(Area(Intersection(districts.Shape, rivers.Shape), 1)) AS TotalArea FROM districts JOIN rivers ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE districts.name = '南京市' AND rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic54",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN rivers ON Intersects(subways.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic55",
        "sql":"SELECT distinct districts.name FROM rivers JOIN districts ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江' AND districts.name LIKE '%南京%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic56",
        "sql":"SELECT districts.name, SUM(Area(Intersection(districts.Shape, rivers.Shape), 1)) AS JiangArea FROM districts INNER JOIN rivers ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic57",
        "sql":"SELECT subwaystations.station FROM subwaystations JOIN rivers ON Distance(rivers.Shape, subwaystations.Location, 1) <= 1000 WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic58",
        "sql":"SELECT DISTINCT buslines.name FROM buslines JOIN rivers ON Intersects(buslines.Shape, rivers.Shape) = 1 WHERE rivers.name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic59",
        "sql":"SELECT hotels.NAME FROM hotels, rivers WHERE rivers.Name = '长江' ORDER BY Distance(hotels.Location, Centroid(rivers.Shape), 1) LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic60",
        "sql":"SELECT hotels.NAME, Distance(agencies.Location, hotels.Location, 1) AS Distance FROM agencies JOIN hotels ON Distance(agencies.Location, hotels.Location, 1) IS NOT NULL WHERE agencies.NAME = '高淳县教育局委员会' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic61",
        "sql":"SELECT g.NAME, MIN(Distance(s.Shape, g.Shape, 1)) AS Distance FROM subways s JOIN greenspaces g ON INSTR(g.NAME, '公园') > 0 WHERE s.Line = 'line1' GROUP BY g.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic62",
        "sql":"SELECT districts.name, COUNT(subwaystations.station) FROM districts JOIN subwaystations ON districts.administrative_division_code = subwaystations.adcode GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic63",
        "sql":"SELECT districts.name, COUNT(*) AS station_count FROM subwaystations JOIN districts ON subwaystations.adcode = districts.administrative_division_code GROUP BY districts.name ORDER BY station_count DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic64",
        "sql":"SELECT Line, GLength(Shape, 1) as Length FROM subways ORDER BY Length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic65",
        "sql":"SELECT distinct r2.pyname FROM roads r1 JOIN roads r2 ON Intersects(r1.Shape, r2.Shape) = 1 WHERE r1.pyname = '东风路' AND r2.pyname != '东风路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic66",
        "sql":"SELECT subwaystations.station, MIN(Distance(hotels.Location, subwaystations.Location, 1)) AS distance FROM hotels INNER JOIN subwaystations ON Distance(hotels.Location, subwaystations.Location, 1) IS NOT NULL WHERE hotels.NAME = '金龙大酒店' GROUP BY hotels.NAME ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic67",
        "sql":"SELECT name, Area(Shape, 1) AS area FROM districts WHERE name IN ('玄武区', '秦淮区')"
    }
]