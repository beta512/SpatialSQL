[
    {
        "db_id":"tourism",
        "id":"tourism01",
        "sql":"SELECT SUM(Domestic_Tourism_Earnings_Wan_Yuan) FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism02",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) FROM tours INNER JOIN cities ON tours.city = cities.name WHERE cities.province = '湖北省' AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism03",
        "sql":"SELECT SUM(star_hotel_number) FROM tours INNER JOIN cities ON tours.city = cities.name WHERE cities.province = '湖北省' AND year = 2010"
    },
    {
        "db_id":"tourism",
        "id":"tourism04",
        "sql":"SELECT cities.name, COUNT(airports.IATA) AS airport_count FROM cities JOIN airports ON Contains(cities.Shape, airports.Location) GROUP BY cities.name ORDER BY airport_count DESC"
    },
    {
        "db_id":"tourism",
        "id":"tourism05",
        "sql":"SELECT cities.name FROM cities LEFT JOIN airports ON Contains(cities.Shape, airports.Location) WHERE airports.IATA IS NULL"
    },
    {
        "db_id":"tourism",
        "id":"tourism06",
        "sql":"SELECT cities.name, COUNT(*) AS FiveA_Spots_Count FROM cities JOIN scenicSpots ON Within(scenicSpots.Location, cities.Shape) = 1 AND scenicSpots.level = '5A' GROUP BY cities.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism07",
        "sql":"SELECT province, SUM(Area(Shape, 1)) AS TotalArea FROM cities GROUP BY province"
    },
    {
        "db_id":"tourism",
        "id":"tourism08",
        "sql":"SELECT province, SUM(Area(Shape, 1)) AS TotalArea FROM cities GROUP BY province ORDER BY TotalArea DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism09",
        "sql":"SELECT province FROM cities ORDER BY MbrMinX(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism10",
        "sql":"SELECT province FROM cities ORDER BY MbrMinY(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism11",
        "sql":"SELECT name FROM cities WHERE province = '河南省' ORDER BY MbrMaxY(Shape) DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism12",
        "sql":"SELECT COUNT(scenicSpots.name) FROM scenicSpots INNER JOIN stations ON Distance(scenicSpots.Location, stations.Location) < 10 * 1000 WHERE stations.name = '六安' AND scenicSpots.level >= '3A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism13",
        "sql":"SELECT scenicSpots.name, Distance(stations.Location, scenicSpots.Location, 1) AS distance FROM scenicSpots JOIN stations ON Distance(stations.Location, scenicSpots.Location, 1) < 100 * 1000 WHERE stations.name = '岳阳东' AND scenicSpots.level = '5A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism14",
        "sql":"SELECT GDPs.province, COUNT(airports.IATA) AS airport_count FROM GDPs JOIN cities ON GDPs.province = cities.province JOIN airports ON Within(airports.Location, cities.Shape) = 1 GROUP BY GDPs.province ORDER BY GDPs.year_2023 DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism15",
        "sql":"SELECT province FROM GDPs ORDER BY year_2023 DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism16",
        "sql":"SELECT city FROM tours WHERE year BETWEEN 2011 AND 2020 ORDER BY international_tourists_number_Wan DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism17",
        "sql":"SELECT COUNT(*) FROM airports WHERE Location IN (SELECT Shape FROM cities WHERE name = '哈尔滨市')"
    },
    {
        "db_id":"tourism",
        "id":"tourism18",
        "sql":"SELECT Name FROM airports WHERE Location IN (SELECT Shape FROM cities WHERE name = '北京市')"
    },
    {
        "db_id":"tourism",
        "id":"tourism19",
        "sql":"SELECT COUNT(*) FROM scenicSpots WHERE level >= '3A' AND address LIKE '%新疆维吾尔自治区%'"
    },
    {
        "db_id":"tourism",
        "id":"tourism20",
        "sql":"SELECT SUM(Area(cities.Shape, 1)) FROM cities WHERE cities.province = '西藏自治区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism21",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) AS Total_International_Tourism_Earnings_2020 FROM tours WHERE year = 2020 AND city IN ( SELECT name FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省') )"
    },
    {
        "db_id":"tourism",
        "id":"tourism22",
        "sql":"SELECT SUM(Area(cities.Shape, 1)) FROM cities WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省')"
    },
    {
        "db_id":"tourism",
        "id":"tourism23",
        "sql":"SELECT name, Area(Shape, 1) as area FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省') GROUP BY province ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism24",
        "sql":"SELECT COUNT(DISTINCT c.name) FROM airports a JOIN cities c ON DistanceSphere(a.Location, c.Shape) <= 150000 WHERE a.Name = '大理'"
    },
    {
        "db_id":"tourism",
        "id":"tourism25",
        "sql":"SELECT s.name, Distance(c.Shape, s.Location) AS Distance FROM scenicSpots s JOIN cities c ON s.address = c.name WHERE c.name = '北京市' AND s.level = '5A' ORDER BY Distance DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism26",
        "sql":"SELECT Distance(scenicSpots.Location, (SELECT Location FROM scenicSpots WHERE name = '恭王府')) AS DistanceInMeters FROM scenicSpots WHERE name = '北海公园'"
    },
    {
        "db_id":"tourism",
        "id":"tourism27",
        "sql":"SELECT scenicSpots.name, Distance(scenicSpots.Location, (SELECT Location FROM scenicSpots WHERE name = '八大处公园')) AS Distance FROM scenicSpots WHERE scenicSpots.level = '5A' AND scenicSpots.name != '八大处公园' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism28",
        "sql":"SELECT cities.name FROM airports INNER JOIN cities ON Contains(cities.Shape, airports.Location) WHERE airports.Name = '阿克苏/温宿'"
    },
    {
        "db_id":"tourism",
        "id":"tourism29",
        "sql":"SELECT address FROM scenicSpots WHERE name = '天台山景区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism30",
        "sql":"SELECT t.city, COUNT(ss.name) AS NumberOf5A_Spots FROM tours t JOIN cities c ON t.city = c.name LEFT JOIN scenicSpots ss ON ss.address LIKE '%' || c.name || '%' AND ss.level = '5A' WHERE t.year = 2020 GROUP BY t.city ORDER BY t.international_tourists_number_Wan DESC LIMIT 10"
    },
    {
        "db_id":"tourism",
        "id":"tourism31",
        "sql":"SELECT c.province, SUM(t.Domestic_Tourism_Earnings_Wan_Yuan) AS Domestic_Tourism_Income FROM tours t JOIN cities c ON t.city = c.name WHERE c.province IN ('辽宁省', '吉林省', '黑龙江省') AND t.year = 2020 GROUP BY c.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism32",
        "sql":"SELECT G.province, C.Shape FROM GDPs G JOIN cities C ON G.province = C.province WHERE G.year_2023 > (SELECT year_2023 FROM GDPs WHERE province = '浙江省') GROUP BY G.province, C.Shape"
    },
    {
        "db_id":"tourism",
        "id":"tourism33",
        "sql":"SELECT city, star_hotel_number FROM tours WHERE year = 2020 ORDER BY star_hotel_number DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic01",
        "sql":"SELECT SUM(GLength(Shape, 1)) FROM buslines WHERE name = '874路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic02",
        "sql":"SELECT name, SUM(GLength(Shape)) AS length FROM buslines GROUP BY name ORDER BY length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic03",
        "sql":"SELECT b.name, b.start_stop, b.end_stop, GLength(b.Shape) AS length FROM buslines b ORDER BY length DESC LIMIT 10"
    },
    {
        "db_id":"traffic",
        "id":"traffic04",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS TotalLength FROM roads GROUP BY Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic05",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS TotalLength FROM roads GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic06",
        "sql":"SELECT SUM(Area(Shape)) FROM greenspaces"
    },
    {
        "db_id":"traffic",
        "id":"traffic07",
        "sql":"SELECT NAME, SUM(Area(Shape)) AS TotalArea FROM greenspaces GROUP BY NAME"
    },
    {
        "db_id":"traffic",
        "id":"traffic08",
        "sql":"SELECT NAME, SUM(Area(Shape)) AS TotalArea FROM greenspaces GROUP BY NAME ORDER BY TotalArea DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic09",
        "sql":"SELECT SUM(Area(Shape)) AS TotalArea FROM greenspaces WHERE NAME = '玄武湖公园'"
    },
    {
        "db_id":"traffic",
        "id":"traffic10",
        "sql":"SELECT districts.name, SUM(Area(Intersection(districts.Shape, greenspaces.Shape))) AS GreenSpaceArea FROM districts JOIN greenspaces ON Intersects(districts.Shape, greenspaces.Shape) GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic11",
        "sql":"SELECT d.name AS district_name, SUM(Area(Intersection(g.Shape, d.Shape))) AS total_green_area FROM greenspaces g, districts d WHERE Intersects(g.Shape, d.Shape) GROUP BY d.name ORDER BY total_green_area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic12",
        "sql":"SELECT Line, COUNT(*) AS StationCount FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic13",
        "sql":"SELECT Line, COUNT(station) AS NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic14",
        "sql":"SELECT buslines.name FROM buslines WHERE buslines.start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic15",
        "sql":"SELECT hotels.NAME, Distance(busstops.Location, hotels.Location) AS distance FROM busstops JOIN hotels ON Distance(busstops.Location, hotels.Location) < 5000 -- Assuming a reasonable search radius in meters WHERE busstops.name = '三元巷' ORDER BY distance LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic16",
        "sql":"SELECT Line, COUNT(*) AS StationCount FROM subwaystations GROUP BY Line ORDER BY StationCount DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic17",
        "sql":"SELECT subways.Line, COUNT(DISTINCT districts.name) FROM subways JOIN districts ON Intersects(subways.Shape, districts.Shape) GROUP BY subways.Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic18",
        "sql":"SELECT GLength(Shape) AS Length FROM subways WHERE Line = 'line4'"
    },
    {
        "db_id":"traffic",
        "id":"traffic19",
        "sql":"SELECT DISTINCT s2.Line FROM subways s1 JOIN subways s2 ON Intersects(s1.Shape, s2.Shape) WHERE s1.Line = 'line10二期' AND s2.Line != 'line10二期'"
    },
    {
        "db_id":"traffic",
        "id":"traffic20",
        "sql":"SELECT SUM(GLength(Shape, 1)) FROM subways"
    },
    {
        "db_id":"traffic",
        "id":"traffic21",
        "sql":"SELECT subwaystations.station, Distance(agencies.Location, subwaystations.Location) AS distance FROM agencies JOIN subwaystations ON agencies.NAME = '南京市文物局' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic22",
        "sql":"SELECT hotels.NAME, Distance(subwaystations.Location, hotels.Location) AS Distance FROM hotels JOIN subwaystations ON Distance(subwaystations.Location, hotels.Location) < 1000 WHERE subwaystations.station = '鼓楼' AND subwaystations.Line = 'line4' ORDER BY Distance"
    },
    {
        "db_id":"traffic",
        "id":"traffic23",
        "sql":"SELECT subwaystations.station FROM subwaystations JOIN ( SELECT Intersection(a.Shape, b.Shape) AS intersection_point FROM buslines AS a, buslines AS b WHERE a.name = '874路' AND b.name = '711路' ) AS intersection ON DWithin(subwaystations.Location, intersection.intersection_point, 1000) ORDER BY Distance(subwaystations.Location, intersection.intersection_point) LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic24",
        "sql":"SELECT subwaystations.station, Distance(Intersection(r1.Shape, r2.Shape), subwaystations.Location) AS distance FROM roads r1, roads r2, subwaystations WHERE r1.Name = '秦淮路' AND r2.Name = '将军大道' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic25",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS Total_Length FROM rails GROUP BY Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic26",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS TotalLength FROM rails GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic27",
        "sql":"SELECT SUM(GLength(Shape, 1)) FROM rails"
    },
    {
        "db_id":"traffic",
        "id":"traffic28",
        "sql":"SELECT d.name, COUNT(a.NAME) AS NumberOfAgencies FROM districts d JOIN agencies a ON Contains(d.Shape, a.Location) GROUP BY d.name ORDER BY NumberOfAgencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic29",
        "sql":"SELECT districts.name FROM districts JOIN subwaystations ON Contains(districts.Shape, subwaystations.Location) WHERE subwaystations.station = '大行宫'"
    },
    {
        "db_id":"traffic",
        "id":"traffic30",
        "sql":"SELECT d.name FROM districts d JOIN agencies a ON Contains(d.Shape, a.Location) WHERE a.NAME = '江苏省海事局'"
    },
    {
        "db_id":"traffic",
        "id":"traffic31",
        "sql":"SELECT name, Area(Shape) as area FROM districts ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic32",
        "sql":"SELECT name, Area(Shape) as area FROM districts"
    },
    {
        "db_id":"traffic",
        "id":"traffic33",
        "sql":"SELECT d.name, COUNT(DISTINCT s.Line) AS NumberOfSubwayLines FROM districts d JOIN subways s ON Intersects(d.Shape, s.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic34",
        "sql":"SELECT hotels.NAME FROM hotels JOIN roads ON Distance(roads.Shape, hotels.Location) < 1000 WHERE roads.Name = '广州路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic35",
        "sql":"SELECT subwaystations.station, MIN(Distance(agencies.Location, subwaystations.Location, 1)) AS distance FROM agencies JOIN subwaystations WHERE agencies.NAME = '南京市房产局' GROUP BY subwaystations.station ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic36",
        "sql":"SELECT COUNT(DISTINCT s.Line) FROM subwaystations ss JOIN subways s ON ss.Line = s.Line JOIN districts d ON Contains(d.Shape, ss.Location) WHERE d.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic37",
        "sql":"SELECT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name JOIN districts ON Contains(districts.Shape, busstops.Location) WHERE districts.name = '六合区' AND buslines.start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic38",
        "sql":"SELECT districts.name, buslines.name FROM districts JOIN buslines ON Contains(districts.Shape, buslines.Shape) WHERE buslines.start_time < '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic39",
        "sql":"SELECT subwaystations.station, MIN(Distance(busstops.Location, subwaystations.Location)) AS Distance FROM buslines JOIN busstops ON buslines.start_stop = busstops.name OR buslines.end_stop = busstops.name JOIN subwaystations WHERE buslines.name = '709路' GROUP BY subwaystations.station ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic40",
        "sql":"SELECT h.NAME, Distance(h.Location, a.Location) AS Distance FROM hotels h, agencies a WHERE a.NAME = '南京市文物局' AND Distance(h.Location, a.Location) <= 500 ORDER BY Distance ASC LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic41",
        "sql":"SELECT b.name FROM buslines b JOIN roads r ON Intersects(b.Shape, r.Shape) WHERE r.Name = '建康路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic42",
        "sql":"SELECT d.name, COUNT(a.NAME) AS NumberOfAgencies FROM districts d JOIN agencies a ON Contains(d.Shape, a.Location) GROUP BY d.name ORDER BY NumberOfAgencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic43",
        "sql":"SELECT hotels.NAME, MIN(Distance(hotels.Location, subwaystations.Location)) AS distance FROM hotels JOIN subwaystations ON subwaystations.station = '南京南站' JOIN districts ON Contains(districts.Shape, hotels.Location) AND districts.name = '江宁区' GROUP BY hotels.NAME ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic44",
        "sql":"SELECT d.name AS District, s.Line AS SubwayLine, SUM(GLength(Intersection(s.Shape, d.Shape))) AS OverlappedLength FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) GROUP BY d.name, s.Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic45",
        "sql":"SELECT d.name AS District, SUM(GLength(Intersection(s.Shape, d.Shape))) AS TotalSubwayLength FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) GROUP BY d.name ORDER BY TotalSubwayLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic46",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN subwaystations ON subways.Line = subwaystations.Line JOIN districts ON Contains(districts.Shape, subwaystations.Location) WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic47",
        "sql":"SELECT DISTINCT districts.name FROM districts JOIN rails ON Intersects(districts.Shape, rails.Shape) = 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic48",
        "sql":"SELECT COUNT(*) FROM hotels INNER JOIN districts ON Contains(districts.Shape, hotels.Location) WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic49",
        "sql":"SELECT COUNT(hotels.NAME) FROM hotels JOIN subways ON DWithin(subways.Shape, hotels.Location, 500) WHERE subways.Line = 'S7'"
    },
    {
        "db_id":"traffic",
        "id":"traffic50",
        "sql":"SELECT DISTINCT districts.name FROM greenspaces INNER JOIN districts ON Intersects(districts.Shape, greenspaces.Shape) = 1 WHERE greenspaces.NAME = '钟山风景区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic51",
        "sql":"SELECT subwaystations.station, Distance(greenspaces.Shape, subwaystations.Location) AS Distance FROM greenspaces JOIN subwaystations WHERE greenspaces.NAME = '郑和公园' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic52",
        "sql":"SELECT greenspaces.NAME, MIN(Distance(subwaystations.Location, greenspaces.Shape)) AS MinDistance FROM subwaystations JOIN greenspaces ON greenspaces.NAME LIKE '%公园%' WHERE subwaystations.station = '上海路' GROUP BY greenspaces.NAME ORDER BY MinDistance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic53",
        "sql":"SELECT SUM(Area(rivers.Shape)) AS TotalArea FROM rivers WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic54",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN rivers ON Intersects(subways.Shape, rivers.Shape) WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic55",
        "sql":"SELECT DISTINCT districts.name FROM rivers JOIN districts ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic56",
        "sql":"SELECT districts.name, SUM(Area(Intersection(districts.Shape, rivers.Shape))) AS YangtzeRiverArea FROM districts JOIN rivers ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic57",
        "sql":"SELECT subwaystations.station FROM subwaystations JOIN rivers ON DWithin(rivers.Shape, subwaystations.Location, 1000) WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic58",
        "sql":"SELECT DISTINCT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name OR buslines.end_stop = busstops.name JOIN rivers ON Intersects(busstops.Location, rivers.Shape) WHERE rivers.name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic59",
        "sql":"SELECT hotels.NAME FROM hotels JOIN rivers ON rivers.Name = '长江' ORDER BY Distance(hotels.Location, rivers.Shape) LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic60",
        "sql":"SELECT hotels.NAME, Distance(agencies.Location, hotels.Location) AS Distance FROM agencies JOIN hotels ON Distance(agencies.Location, hotels.Location) = ( SELECT MIN(Distance(agencies.Location, hotels.Location)) FROM agencies, hotels WHERE agencies.NAME = '高淳县教育局委员会' ) WHERE agencies.NAME = '高淳县教育局委员会' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic61",
        "sql":"SELECT greenspaces.NAME, MIN(Distance(subwaystations.Location, greenspaces.Shape)) AS Distance FROM subwaystations JOIN subways ON subwaystations.Line = subways.Line JOIN greenspaces ON greenspaces.NAME LIKE '%公园%' WHERE subways.Line = 'line1' GROUP BY greenspaces.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic62",
        "sql":"SELECT districts.name, COUNT(subwaystations.station) FROM districts JOIN subwaystations ON Contains(districts.Shape, subwaystations.Location) GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic63",
        "sql":"SELECT districts.name, COUNT(*) AS station_count FROM districts JOIN subwaystations ON Contains(districts.Shape, subwaystations.Location) GROUP BY districts.name ORDER BY station_count DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic64",
        "sql":"SELECT Line, Max(GLength(Shape)) AS LongestLength FROM subways GROUP BY Line ORDER BY LongestLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic65",
        "sql":"SELECT DISTINCT roads.Name FROM roads JOIN roads AS roads2 ON Intersects(roads.Shape, roads2.Shape) WHERE roads2.Name = '东风路' AND roads.Name != '东风路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic66",
        "sql":"SELECT subwaystations.station, MIN(Distance(hotels.Location, subwaystations.Location, 1)) AS distance FROM hotels JOIN subwaystations ON hotels.NAME = '金龙大酒店' GROUP BY hotels.NAME ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic67",
        "sql":"SELECT name, Area(Shape, 1) AS area FROM districts WHERE name IN ('玄武区', '秦淮区')"
    }
]