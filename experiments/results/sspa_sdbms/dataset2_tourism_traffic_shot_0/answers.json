[
    {
        "db_id":"tourism",
        "id":"tourism01",
        "sql":"SELECT SUM(Domestic_Tourism_Earnings_Wan_Yuan) AS Total_Domestic_Tourism_Earnings FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism02",
        "sql":"SELECT international_toursim_earnings_Wan_dollar FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province = '湖北省' AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism03",
        "sql":"SELECT star_hotel_number FROM tours WHERE city = '湖北省' AND year = 2010"
    },
    {
        "db_id":"tourism",
        "id":"tourism04",
        "sql":"SELECT c.name, COUNT(a.IATA) AS airport_count FROM 'cities' c JOIN 'airports' a ON Contains(c.Shape, a.Location) GROUP BY c.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism05",
        "sql":"SELECT c.name FROM 'cities' c LEFT JOIN 'airports' a ON Contains(c.Shape, a.Location) WHERE a.IATA IS NULL"
    },
    {
        "db_id":"tourism",
        "id":"tourism06",
        "sql":"SELECT cities.name AS City, COUNT(scenicSpots.name) AS NumberOf5AScenicSpots FROM cities JOIN scenicSpots ON Contains(cities.Shape, scenicSpots.Location) WHERE scenicSpots.level = '5A' GROUP BY cities.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism07",
        "sql":"SELECT GDPs.province, SUM(Area(cities.Shape)) AS total_area FROM GDPs JOIN cities ON GDPs.province = cities.province GROUP BY GDPs.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism08",
        "sql":"SELECT province, SUM(Area(Shape)) AS total_area FROM cities GROUP BY province ORDER BY total_area DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism09",
        "sql":"SELECT province FROM cities ORDER BY X(Centroid(Shape)) LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism10",
        "sql":"SELECT province FROM cities ORDER BY Y(Centroid(Shape)) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism11",
        "sql":"SELECT name FROM cities WHERE province = '河南省' ORDER BY Y(Centroid(Shape)) DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism12",
        "sql":"SELECT COUNT(*) FROM 'scenicSpots' WHERE level IN ('3A', '4A', '5A') AND DistanceSphere(Location, ( SELECT Location FROM 'stations' WHERE name = '六安' )) <= 10000"
    },
    {
        "db_id":"tourism",
        "id":"tourism13",
        "sql":"SELECT s.name AS StationName, sp.name AS ScenicSpotName, sp.level AS ScenicSpotLevel, Distance(s.Location, sp.Location) AS Distance FROM scenicSpots sp, stations s WHERE s.name = '岳阳东' AND sp.level = '5A' AND DWithin(s.Location, sp.Location, 100000)"
    },
    {
        "db_id":"tourism",
        "id":"tourism14",
        "sql":"SELECT -- First, find the province with the highest GDP in 2023 SELECT province FROM 'GDPs' ORDER BY year_2023 DESC LIMIT 1 -- Assuming the province found above is 'X', find the number of airports in that province SELECT COUNT(*) FROM 'airports' JOIN 'cities' ON Contains(cities.Shape, airports.Location) WHERE cities.province = 'X' Replace `'X'` with the actual province name obtained from the first query when running the second query."
    },
    {
        "db_id":"tourism",
        "id":"tourism15",
        "sql":"SELECT province FROM 'GDPs' ORDER BY year_2023 DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism16",
        "sql":"SELECT city FROM tours WHERE year BETWEEN 2011 AND 2020 ORDER BY international_tourists_number_Wan DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism17",
        "sql":"SELECT COUNT(*) FROM 'airports' WHERE Location = '哈尔滨市'"
    },
    {
        "db_id":"tourism",
        "id":"tourism18",
        "sql":"SELECT Name FROM airports WHERE Location <@ (SELECT Shape FROM cities WHERE name = '北京市')"
    },
    {
        "db_id":"tourism",
        "id":"tourism19",
        "sql":"SELECT COUNT(*) FROM 'scenicSpots' WHERE level >= '3A' AND address LIKE '%新疆维吾尔自治区%'"
    },
    {
        "db_id":"tourism",
        "id":"tourism20",
        "sql":"SELECT Area(Shape) FROM cities WHERE province = '西藏自治区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism21",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) AS Total_International_Tourism_Earnings FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism22",
        "sql":"SELECT SUM(Area(Shape)) AS total_area FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省')"
    },
    {
        "db_id":"tourism",
        "id":"tourism23",
        "sql":"SELECT province, Area(Shape) AS area FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省') GROUP BY province ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism24",
        "sql":"SELECT COUNT(DISTINCT c.name) FROM 'cities' c, 'airports' a WHERE a.Name = '大理' AND DWithin(a.Location, c.Shape, 150000)"
    },
    {
        "db_id":"tourism",
        "id":"tourism25",
        "sql":"SELECT scenicSpots.name, Distance(scenicSpots.Location, (SELECT cities.Shape FROM cities WHERE cities.name = '北京市')) AS distance FROM scenicSpots WHERE scenicSpots.level = '5A' AND Contains((SELECT cities.Shape FROM cities WHERE cities.name = '北京市'), scenicSpots.Location) ORDER BY distance DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism26",
        "sql":"SELECT Distance( (SELECT Location FROM scenicSpots WHERE name = '北海公园'), (SELECT Location FROM scenicSpots WHERE name = '恭王府') ) AS distance"
    },
    {
        "db_id":"tourism",
        "id":"tourism27",
        "sql":"SELECT name, Distance(Location, (SELECT Location FROM scenicSpots WHERE name = '八大处公园')) AS distance FROM scenicSpots WHERE level = '5A' AND name != '八大处公园' ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism28",
        "sql":"SELECT Location FROM 'airports' WHERE Name = '阿克苏/温宿'"
    },
    {
        "db_id":"tourism",
        "id":"tourism29",
        "sql":"SELECT address FROM scenicSpots WHERE name = '天台山景区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism30",
        "sql":"SELECT t.city, COUNT(ss.name) AS number_of_5A_scenic_spots FROM tours t JOIN cities c ON t.city = c.name LEFT JOIN scenicSpots ss ON ss.address LIKE '%' || c.province || '%' WHERE t.year = 2020 AND ss.level = '5A' GROUP BY t.city ORDER BY t.international_tourists_number_Wan DESC LIMIT 10"
    },
    {
        "db_id":"tourism",
        "id":"tourism31",
        "sql":"SELECT c.province, t.Domestic_Tourism_Earnings_Wan_Yuan FROM 'cities' c JOIN 'tours' t ON c.name = t.city WHERE c.province IN ('辽宁省', '吉林省', '黑龙江省') AND t.year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism32",
        "sql":"SELECT GDPs.province, Area(cities.Shape) AS area FROM GDPs JOIN cities ON GDPs.province = cities.province WHERE GDPs.year_2023 > (SELECT year_2023 FROM GDPs WHERE province = '浙江省') GROUP BY GDPs.province, cities.Shape"
    },
    {
        "db_id":"tourism",
        "id":"tourism33",
        "sql":"SELECT city, star_hotel_number FROM tours WHERE year = 2020 ORDER BY star_hotel_number DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic01",
        "sql":"SELECT GLength(Shape) AS Length FROM buslines WHERE name = '874路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic02",
        "sql":"SELECT name, GLength(Shape) AS Length FROM buslines ORDER BY GLength(Shape) DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic03",
        "sql":"SELECT b.name, b.start_stop, b.end_stop, GLength(b.Shape) AS LineLength FROM buslines b ORDER BY LineLength DESC LIMIT 10"
    },
    {
        "db_id":"traffic",
        "id":"traffic04",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS TotalLength FROM roads GROUP BY Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic05",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS TotalLength FROM roads GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic06",
        "sql":"SELECT SUM(Area(Shape)) AS TotalGreenSpaceArea FROM greenspaces"
    },
    {
        "db_id":"traffic",
        "id":"traffic07",
        "sql":"SELECT NAME, SUM(Area(Shape)) AS TotalArea FROM greenspaces GROUP BY NAME"
    },
    {
        "db_id":"traffic",
        "id":"traffic08",
        "sql":"SELECT NAME, SUM(Area(Shape)) AS TotalArea FROM greenspaces GROUP BY NAME ORDER BY TotalArea DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic09",
        "sql":"SELECT SUM(Area(Shape)) AS TotalArea FROM greenspaces WHERE NAME = '玄武湖公园'"
    },
    {
        "db_id":"traffic",
        "id":"traffic10",
        "sql":"SELECT d.name AS DistrictName, SUM(Area(Intersection(d.Shape, g.Shape))) AS GreenSpaceArea FROM districts d JOIN greenspaces g ON Intersects(d.Shape, g.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic11",
        "sql":"SELECT d.name, SUM(Area(Intersection(g.Shape, d.Shape))) AS TotalGreenSpaceArea FROM districts d JOIN greenspaces g ON Intersects(g.Shape, d.Shape) GROUP BY d.name ORDER BY TotalGreenSpaceArea DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic12",
        "sql":"SELECT Line, COUNT(station) AS NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic13",
        "sql":"SELECT Line, COUNT(station) AS NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic14",
        "sql":"SELECT name FROM buslines WHERE start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic15",
        "sql":"SELECT hotels.NAME, Distance(busstops.Location, hotels.Location) AS distance FROM hotels, busstops WHERE busstops.name = '三元巷' ORDER BY distance LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic16",
        "sql":"SELECT Line, COUNT(*) AS StationCount FROM subwaystations GROUP BY Line ORDER BY StationCount DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic17",
        "sql":"SELECT s.Line, COUNT(DISTINCT d.name) AS DistrictCount FROM subwaystations ss JOIN subways s ON ss.Line = s.Line JOIN districts d ON Contains(d.Shape, ss.Location) GROUP BY s.Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic18",
        "sql":"SELECT GLength(Shape) AS Length FROM subways WHERE Line = 'line4'"
    },
    {
        "db_id":"traffic",
        "id":"traffic19",
        "sql":"SELECT DISTINCT s2.Line FROM subwaystations s1 JOIN subwaystations s2 ON s1.Location = s2.Location AND s1.Line != s2.Line WHERE s1.Line = 'line10二期'"
    },
    {
        "db_id":"traffic",
        "id":"traffic20",
        "sql":"SELECT SUM(GLength(Shape)) FROM subways"
    },
    {
        "db_id":"traffic",
        "id":"traffic21",
        "sql":"SELECT subwaystations.station, Distance(subwaystations.Location, agencies.Location) AS distance FROM subwaystations, agencies WHERE agencies.NAME = '南京市文物局' ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic22",
        "sql":"SELECT h.NAME, Distance(h.Location, s.Location) AS distance FROM hotels h, subwaystations s WHERE s.station = '鼓楼' AND s.Line = 'line4' AND Distance(h.Location, s.Location) <= 1000"
    },
    {
        "db_id":"traffic",
        "id":"traffic23",
        "sql":"SELECT WITH IntersectionPoints AS ( SELECT Intersection(b1.Shape, b2.Shape) AS IntersectionPoint FROM buslines b1, buslines b2 WHERE b1.name = '874路' AND b2.name = '711路' ), NearestSubwayStation AS ( SELECT s.station, s.Location FROM subwaystations s, IntersectionPoints ip ORDER BY Distance(s.Location, ip.IntersectionPoint) LIMIT 1 ) SELECT station FROM NearestSubwayStation"
    },
    {
        "db_id":"traffic",
        "id":"traffic24",
        "sql":"SELECT To answer the query about the nearest subway station to the intersection of 秦淮路 (Qinhuai Road) and 将军大道 (General Avenue) and the distance to it, you would typically use a spatial query. However, since the actual spatial data and functions (like Distance, ClosestPoint) are not executable in this text format and depend on the specific SQL database system (e.g., PostgreSQL with PostGIS, Oracle Spatial, etc.), I'll provide a conceptual SQL query that you might use in a system that supports spatial queries: SELECT subwaystations.station, Distance( Intersection( (SELECT Shape FROM roads WHERE Name = '秦淮路'), (SELECT Shape FROM roads WHERE Name = '将军大道') ), subwaystations.Location ) AS distance FROM subwaystations ORDER BY distance ASC LIMIT 1 This query assumes that the database supports spatial data types and functions: - `Intersection` finds the intersection point of Qinhuai Road and General Avenue. - `Distance` calculates the distance from this intersection point to each subway station. - The results are ordered by distance in ascending order, and the nearest station is returned with the shortest distance. Please adjust the query according to the actual functions and capabilities of your spatial database system."
    },
    {
        "db_id":"traffic",
        "id":"traffic25",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS TotalLength FROM rails GROUP BY Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic26",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS TotalLength FROM rails GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic27",
        "sql":"SELECT SUM(GLength(Shape)) AS TotalRailwayLength FROM rails"
    },
    {
        "db_id":"traffic",
        "id":"traffic28",
        "sql":"SELECT districts.name, COUNT(agencies.NAME) AS agency_count FROM districts JOIN agencies ON Contains(districts.Shape, agencies.Location) GROUP BY districts.name ORDER BY agency_count DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic29",
        "sql":"SELECT d.name FROM districts d, subwaystations s WHERE Contains(d.Shape, s.Location) AND s.station = '大行宫'"
    },
    {
        "db_id":"traffic",
        "id":"traffic30",
        "sql":"SELECT districts.name FROM districts JOIN agencies ON Contains(districts.Shape, agencies.Location) WHERE agencies.NAME = '江苏省海事局'"
    },
    {
        "db_id":"traffic",
        "id":"traffic31",
        "sql":"SELECT name, Area(Shape) AS area FROM districts ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic32",
        "sql":"SELECT name, Area(Shape) AS area FROM districts"
    },
    {
        "db_id":"traffic",
        "id":"traffic33",
        "sql":"SELECT d.name, COUNT(DISTINCT s.Line) AS NumberOfSubwayLines FROM districts d JOIN subways s ON Intersects(d.Shape, s.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic34",
        "sql":"SELECT h.NAME FROM hotels h, roads r WHERE r.Name = '广州路' AND Distance(r.Shape, h.Location) <= 1000"
    },
    {
        "db_id":"traffic",
        "id":"traffic35",
        "sql":"SELECT subwaystations.station, Distance(subwaystations.Location, agencies.Location) AS distance FROM subwaystations, agencies WHERE agencies.NAME = '南京市房产局' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic36",
        "sql":"SELECT COUNT(DISTINCT s.Line) AS NumberOfSubwayLines FROM subways s JOIN subwaystations ss ON s.Line = ss.Line JOIN districts d ON Contains(d.Shape, ss.Location) WHERE d.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic37",
        "sql":"SELECT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name JOIN districts ON Contains(districts.Shape, busstops.Location) WHERE districts.name = '六合区' AND buslines.start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic38",
        "sql":"SELECT d.name AS District, b.name AS BusLine FROM districts d JOIN buslines b ON Contains(d.Shape, b.Shape) WHERE b.start_time < '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic39",
        "sql":"SELECT subwaystations.station, MIN(Distance(busstops.Location, subwaystations.Location)) AS distance FROM busstops JOIN buslines ON busstops.lineIDs LIKE '%709路%' JOIN subwaystations ON buslines.name = '709路' GROUP BY subwaystations.station ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic40",
        "sql":"SELECT h.NAME, Distance(h.Location, a.Location) AS Distance FROM hotels h, agencies a WHERE a.NAME = '南京市文物局' AND DWithin(a.Location, h.Location, 500) ORDER BY Distance ASC LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic41",
        "sql":"SELECT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name OR buslines.end_stop = busstops.name WHERE busstops.name = '建康路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic42",
        "sql":"SELECT d.name, COUNT(a.name) AS num_agencies FROM districts d LEFT JOIN agencies a ON Contains(d.Shape, a.Location) GROUP BY d.name ORDER BY num_agencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic43",
        "sql":"SELECT hotels.NAME, Distance(hotels.Location, subwaystations.Location) AS distance FROM hotels, subwaystations, districts WHERE subwaystations.station = '南京南站' AND districts.name = '江宁区' AND Contains(districts.Shape, hotels.Location) ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic44",
        "sql":"SELECT d.name AS District, SUM(GLength(Intersection(s.Shape, d.Shape))) AS SubwayLength FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic45",
        "sql":"SELECT d.name, SUM(GLength(Intersection(s.Shape, d.Shape))) AS total_length FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) GROUP BY d.name ORDER BY total_length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic46",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN subwaystations ON subways.Line = subwaystations.Line JOIN districts ON Contains(districts.Shape, subwaystations.Location) WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic47",
        "sql":"SELECT DISTINCT districts.name FROM districts JOIN rails ON Intersects(districts.Shape, rails.Shape)"
    },
    {
        "db_id":"traffic",
        "id":"traffic48",
        "sql":"SELECT COUNT(*) FROM hotels JOIN districts ON Contains(districts.Shape, hotels.Location) WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic49",
        "sql":"SELECT COUNT(h.NAME) AS NumberOfHotels FROM hotels h, subways s, subwaystations ss WHERE s.Line = 'S7' AND ss.Line = s.Line AND DWithin(ss.Location, h.Location, 500)"
    },
    {
        "db_id":"traffic",
        "id":"traffic50",
        "sql":"SELECT districts.name FROM greenspaces JOIN districts ON Contains(districts.Shape, greenspaces.Shape) WHERE greenspaces.NAME = '钟山风景区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic51",
        "sql":"SELECT subwaystations.station, MIN(Distance(greenspaces.Shape, subwaystations.Location)) AS distance FROM greenspaces, subwaystations WHERE greenspaces.NAME = '郑和公园' GROUP BY subwaystations.station ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic52",
        "sql":"SELECT greenspaces.NAME FROM greenspaces, subwaystations WHERE greenspaces.NAME LIKE '%公园%' AND subwaystations.station = '上海路' ORDER BY Distance(greenspaces.Shape, subwaystations.Location) LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic53",
        "sql":"SELECT SUM(Area(Shape)) AS YangtzeRiverArea FROM rivers WHERE Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic54",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN rivers ON Intersects(subways.Shape, rivers.Shape) WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic55",
        "sql":"SELECT DISTINCT districts.name FROM districts, rivers WHERE Intersects(districts.Shape, rivers.Shape) AND rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic56",
        "sql":"SELECT d.name, SUM(Area(Intersection(d.Shape, r.Shape))) AS YangtzeRiverArea FROM districts d, rivers r WHERE r.Name = '长江' AND Intersects(d.Shape, r.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic57",
        "sql":"SELECT subwaystations.station FROM subwaystations, rivers WHERE rivers.Name = '长江' AND Distance(rivers.Shape, subwaystations.Location) <= 1000"
    },
    {
        "db_id":"traffic",
        "id":"traffic58",
        "sql":"SELECT DISTINCT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name OR buslines.end_stop = busstops.name WHERE Intersects( (SELECT Shape FROM rivers WHERE Name = '长江'), busstops.Location )"
    },
    {
        "db_id":"traffic",
        "id":"traffic59",
        "sql":"SELECT hotels.NAME FROM hotels, rivers WHERE rivers.Name = '长江' ORDER BY Distance(hotels.Location, rivers.Shape) ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic60",
        "sql":"SELECT hotels.NAME, Distance(agencies.Location, hotels.Location) AS Distance FROM agencies, hotels WHERE agencies.NAME = '高淳县教育局委员会' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic61",
        "sql":"SELECT greenspaces.NAME, MIN(Distance(subwaystations.Location, greenspaces.Shape)) AS Distance FROM subwaystations JOIN subways ON subwaystations.Line = subways.Line JOIN greenspaces ON greenspaces.NAME LIKE '%公园%' WHERE subways.Line = 'line1' GROUP BY greenspaces.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic62",
        "sql":"SELECT d.name AS District, COUNT(s.station) AS SubwayStations FROM districts d JOIN subwaystations s ON Contains(d.Shape, s.Location) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic63",
        "sql":"SELECT d.name, COUNT(*) AS station_count FROM districts d JOIN subwaystations ss ON Contains(d.Shape, ss.Location) GROUP BY d.name ORDER BY station_count DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic64",
        "sql":"SELECT Line, GLength(Shape) AS Length FROM subways ORDER BY Length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic65",
        "sql":"SELECT DISTINCT r2.Name FROM roads r1 JOIN roads r2 ON Intersects(r1.Shape, r2.Shape) WHERE r1.Name = '东风路' AND r2.Name != '东风路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic66",
        "sql":"SELECT subwaystations.station, Distance(subwaystations.Location, hotels.Location) AS distance FROM subwaystations, hotels WHERE hotels.NAME = '金龙大酒店' ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic67",
        "sql":"SELECT name, Area(Shape) AS area FROM districts WHERE name IN ('玄武区', '秦淮区')"
    }
]