[
    {
        "db_id":"tourism",
        "id":"tourism01",
        "sql":"SELECT SUM(Domestic_Tourism_Earnings_Wan_Yuan) FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism02",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province = '湖北省' AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism03",
        "sql":"SELECT SUM(star_hotel_number) FROM tours WHERE city IN (SELECT name FROM cities WHERE province = '湖北省') AND year = 2010"
    },
    {
        "db_id":"tourism",
        "id":"tourism04",
        "sql":"SELECT cities.name, COUNT(airports.IATA) AS airport_count FROM cities JOIN airports ON Contains(cities.Shape, airports.Location) GROUP BY cities.name ORDER BY airport_count DESC"
    },
    {
        "db_id":"tourism",
        "id":"tourism05",
        "sql":"SELECT cities.name FROM cities LEFT JOIN airports ON Contains(cities.Shape, airports.Location) WHERE airports.IATA IS NULL"
    },
    {
        "db_id":"tourism",
        "id":"tourism06",
        "sql":"SELECT cities.name, COUNT(*) AS FiveA_Spots FROM cities JOIN scenicSpots ON Within(scenicSpots.Location, cities.Shape) = 1 AND scenicSpots.level = '5A' GROUP BY cities.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism07",
        "sql":"SELECT GDPs.province, SUM(Area(cities.Shape, 1)) AS TotalArea FROM GDPs JOIN cities ON GDPs.province = cities.province GROUP BY GDPs.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism08",
        "sql":"SELECT GDPs.province, SUM(Area(cities.Shape, 1)) AS TotalArea FROM cities JOIN GDPs ON cities.province = GDPs.province GROUP BY GDPs.province ORDER BY TotalArea DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism09",
        "sql":"SELECT province FROM cities ORDER BY MbrMinX(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism10",
        "sql":"SELECT province FROM cities ORDER BY MbrMinY(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism11",
        "sql":"SELECT name FROM cities WHERE province = '河南省' ORDER BY MbrMaxY(Shape) DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism12",
        "sql":"SELECT COUNT(scenicSpots.name) FROM scenicSpots INNER JOIN stations ON Distance(scenicSpots.Location, stations.Location, 1) < 10 * 1000 WHERE stations.name = '六安' AND scenicSpots.level >= '3A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism13",
        "sql":"SELECT scenicSpots.name, Distance(stations.Location, scenicSpots.Location, 1) AS distance FROM scenicSpots JOIN stations ON Distance(stations.Location, scenicSpots.Location, 1) < 100 * 1000 WHERE stations.name = '岳阳东' AND scenicSpots.level = '5A' ORDER BY distance"
    },
    {
        "db_id":"tourism",
        "id":"tourism14",
        "sql":"SELECT GDPs.province, COUNT(airports.IATA) AS airport_count FROM GDPs LEFT JOIN cities ON GDPs.province = cities.province LEFT JOIN airports ON Within(airports.Location, cities.Shape) = 1 WHERE GDPs.year_2023 = (SELECT MAX(year_2023) FROM GDPs) GROUP BY GDPs.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism15",
        "sql":"SELECT province FROM GDPs ORDER BY year_2023 DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism16",
        "sql":"SELECT city FROM tours WHERE year BETWEEN 2011 AND 2020 ORDER BY international_tourists_number_Wan DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism17",
        "sql":"SELECT COUNT(*) FROM airports WHERE Location IN (SELECT Shape FROM cities WHERE name = '哈尔滨市')"
    },
    {
        "db_id":"tourism",
        "id":"tourism18",
        "sql":"SELECT airports.Name FROM airports JOIN cities ON Contains(cities.Shape, airports.Location) WHERE cities.name = '北京市'"
    },
    {
        "db_id":"tourism",
        "id":"tourism19",
        "sql":"SELECT COUNT(*) FROM scenicSpots INNER JOIN cities ON Contains(cities.Shape, scenicSpots.Location) WHERE cities.province = '新疆维吾尔自治区' AND scenicSpots.level >= '3A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism20",
        "sql":"SELECT SUM(Area(Shape, 1)) AS Total_Area FROM cities WHERE province = '西藏自治区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism21",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) AS Total_International_Tourism_Earnings_2020 FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism22",
        "sql":"SELECT SUM(Area(Shape, 1)) FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省')"
    },
    {
        "db_id":"tourism",
        "id":"tourism23",
        "sql":"SELECT It appears there is a misunderstanding in the query request. The table 'provinces' is mentioned in the example but not defined in the schema provided. Assuming there is a table 'provinces' similar to the 'cities' table but for provinces, the SQL query to find the largest province by area among 辽宁省, 吉林省, and 黑龙江省 would be: SELECT province, MAX(Area(Shape, 1)) AS max_area FROM provinces WHERE province IN ('辽宁省', '吉林省', '黑龙江省') However, if the 'provinces' table does not exist and the area data is not available, this query cannot be executed as written. Please ensure the database schema includes the necessary tables and fields to perform this query."
    },
    {
        "db_id":"tourism",
        "id":"tourism24",
        "sql":"SELECT COUNT(*) AS Serviced_Cities FROM cities WHERE Distance(cities.Shape, (SELECT Location FROM airports WHERE Name = '大理'), 1) <= 150000"
    },
    {
        "db_id":"tourism",
        "id":"tourism25",
        "sql":"SELECT b.name, Distance(c.Shape, b.Location, 1) AS Distance FROM scenicSpots b, cities c WHERE b.level = '5A' AND c.name = '北京市' AND b.address LIKE '%北京市%' ORDER BY Distance DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism26",
        "sql":"SELECT Distance(scenicSpots.Location, (SELECT Location FROM scenicSpots WHERE name = '恭王府'), 1) AS DistanceInMeters FROM scenicSpots WHERE name = '北海公园'"
    },
    {
        "db_id":"tourism",
        "id":"tourism27",
        "sql":"SELECT scenicSpots.name, Distance(scenicSpots.Location, (SELECT Location FROM scenicSpots WHERE name = '八大处公园'), 1) AS distance FROM scenicSpots WHERE scenicSpots.level = '5A' AND scenicSpots.name != '八大处公园' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism28",
        "sql":"SELECT cities.name FROM cities INNER JOIN airports ON Contains(cities.Shape, airports.Location) WHERE airports.Name = '阿克苏/温宿'"
    },
    {
        "db_id":"tourism",
        "id":"tourism29",
        "sql":"SELECT address FROM scenicSpots WHERE name = '天台山景区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism30",
        "sql":"SELECT t.city, COUNT(ss.name) AS FiveA_Spots FROM tours t JOIN cities c ON t.city = c.name LEFT JOIN scenicSpots ss ON ss.address = c.name AND ss.level = '5A' WHERE t.year = 2020 GROUP BY t.city ORDER BY t.international_tourists_number_Wan DESC LIMIT 10"
    },
    {
        "db_id":"tourism",
        "id":"tourism31",
        "sql":"SELECT province, Domestic_Tourism_Earnings_Wan_Yuan FROM tours JOIN cities ON tours.city = cities.name WHERE year = 2020 AND province IN ('辽宁省', '吉林省', '黑龙江省')"
    },
    {
        "db_id":"tourism",
        "id":"tourism32",
        "sql":"SELECT g.province, SUM(Area(c.Shape, 1)) AS total_area FROM GDPs g JOIN cities c ON g.province = c.province WHERE g.year_2023 > (SELECT year_2023 FROM GDPs WHERE province = '浙江省') GROUP BY g.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism33",
        "sql":"SELECT city, star_hotel_number FROM tours WHERE year = 2020 ORDER BY star_hotel_number DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic01",
        "sql":"SELECT distance FROM buslines WHERE name = '874路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic02",
        "sql":"SELECT name, MAX(distance) AS length FROM buslines"
    },
    {
        "db_id":"traffic",
        "id":"traffic03",
        "sql":"SELECT b.name, b.start_stop, b.end_stop, b.distance FROM buslines b ORDER BY b.distance DESC LIMIT 10"
    },
    {
        "db_id":"traffic",
        "id":"traffic04",
        "sql":"SELECT Name, SUM(length) AS TotalLength FROM roads GROUP BY Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic05",
        "sql":"SELECT Name, SUM(length) AS TotalLength FROM roads GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic06",
        "sql":"SELECT SUM(Shape_Area) FROM greenspaces"
    },
    {
        "db_id":"traffic",
        "id":"traffic07",
        "sql":"SELECT NAME, SUM(Shape_Area) AS Total_Area FROM greenspaces GROUP BY NAME"
    },
    {
        "db_id":"traffic",
        "id":"traffic08",
        "sql":"SELECT NAME, SUM(Shape_Area) AS Total_Area FROM greenspaces GROUP BY NAME ORDER BY Total_Area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic09",
        "sql":"SELECT SUM(Area(Shape, 1)) AS TotalArea FROM greenspaces WHERE NAME = '玄武湖公园'"
    },
    {
        "db_id":"traffic",
        "id":"traffic10",
        "sql":"SELECT d.name AS DistrictName, SUM(Area(Intersection(g.Shape, d.Shape), 1)) AS GreenSpaceArea FROM districts d JOIN greenspaces g ON Intersects(g.Shape, d.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic11",
        "sql":"SELECT d.name, SUM(Area(Intersection(g.Shape, d.Shape), 1)) AS TotalGreenArea FROM districts d JOIN greenspaces g ON Intersects(g.Shape, d.Shape) GROUP BY d.name ORDER BY TotalGreenArea DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic12",
        "sql":"SELECT Line, COUNT(*) AS NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic13",
        "sql":"SELECT Line, COUNT(station) AS NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic14",
        "sql":"SELECT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name WHERE buslines.start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic15",
        "sql":"SELECT hotels.NAME, Distance(busstops.Location, hotels.Location, 1) AS distance FROM busstops JOIN hotels ON Distance(busstops.Location, hotels.Location, 1) < 1000 WHERE busstops.name = '三元巷' ORDER BY distance LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic16",
        "sql":"SELECT Line, COUNT(*) AS StationCount FROM subwaystations GROUP BY Line ORDER BY StationCount DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic17",
        "sql":"SELECT Line, COUNT(DISTINCT adcode) AS Districts_Count FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic18",
        "sql":"SELECT GLength(Shape, 1) AS LengthInMeters FROM subways WHERE Line = 'line4'"
    },
    {
        "db_id":"traffic",
        "id":"traffic19",
        "sql":"SELECT DISTINCT s2.Line FROM subways s1 JOIN subways s2 ON Intersects(s1.Shape, s2.Shape) = 1 WHERE s1.Line = 'line10二期' AND s2.Line != 'line10二期'"
    },
    {
        "db_id":"traffic",
        "id":"traffic20",
        "sql":"SELECT SUM(GLength(Shape, 1)) FROM subways"
    },
    {
        "db_id":"traffic",
        "id":"traffic21",
        "sql":"SELECT s.station, Distance(a.Location, s.Location, 1) AS distance FROM agencies a, subwaystations s WHERE a.NAME = '南京市文物局' ORDER BY Distance(a.Location, s.Location, 1) ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic22",
        "sql":"SELECT hotels.NAME, Distance(subwaystations.Location, hotels.Location, 1) AS Distance FROM subwaystations JOIN hotels ON Distance(subwaystations.Location, hotels.Location, 1) < 1000 WHERE subwaystations.Line = 'line4' AND subwaystations.station = '鼓楼'"
    },
    {
        "db_id":"traffic",
        "id":"traffic23",
        "sql":"SELECT s.station, MIN(Distance(i.point, s.Location, 1)) AS distance FROM ( SELECT Intersection(a.Shape, b.Shape) AS point FROM buslines a, buslines b WHERE a.name = '874路' AND b.name = '711路' ) i, subwaystations s ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic24",
        "sql":"SELECT s.station, MIN(Distance(r.Shape, s.Location, 1)) AS distance FROM roads r, subwaystations s WHERE r.Name IN ('秦淮路', '将军大道') GROUP BY s.station ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic25",
        "sql":"SELECT Name, SUM(GLength(Shape, 1)) AS TotalLength FROM rails GROUP BY Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic26",
        "sql":"SELECT Name, SUM(GLength(Shape, 1)) AS TotalLength FROM rails GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic27",
        "sql":"SELECT SUM(GLength(Shape, 1)) FROM rails"
    },
    {
        "db_id":"traffic",
        "id":"traffic28",
        "sql":"SELECT districts.name, COUNT(agencies.NAME) AS NumberOfAgencies FROM districts JOIN agencies ON Contains(districts.Shape, agencies.Location) GROUP BY districts.name ORDER BY NumberOfAgencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic29",
        "sql":"SELECT districts.name FROM subwaystations JOIN districts ON subwaystations.adcode = districts.administrative_division_code WHERE subwaystations.station = '大行宫'"
    },
    {
        "db_id":"traffic",
        "id":"traffic30",
        "sql":"SELECT districts.name FROM agencies JOIN districts ON Contains(districts.Shape, agencies.Location) WHERE agencies.NAME = '江苏省海事局'"
    },
    {
        "db_id":"traffic",
        "id":"traffic31",
        "sql":"SELECT name, Area(Shape, 1) as area FROM districts ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic32",
        "sql":"SELECT name, Area(Shape, 1) AS Area_meters FROM districts"
    },
    {
        "db_id":"traffic",
        "id":"traffic33",
        "sql":"SELECT d.name AS District, COUNT(DISTINCT s.Line) AS NumberOfSubwayLines FROM districts d JOIN subways s ON Intersects(d.Shape, s.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic34",
        "sql":"SELECT hotels.NAME FROM hotels JOIN roads ON Distance(hotels.Location, roads.Shape, 1) < 1000 WHERE roads.Name = '广州路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic35",
        "sql":"SELECT subwaystations.station, MIN(Distance(agencies.Location, subwaystations.Location, 1)) AS distance FROM agencies JOIN subwaystations ON agencies.NAME = '南京市房产局' ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic36",
        "sql":"SELECT COUNT(DISTINCT Line) FROM subways WHERE Intersects(Shape, (SELECT Shape FROM districts WHERE name = '玄武区'))"
    },
    {
        "db_id":"traffic",
        "id":"traffic37",
        "sql":"SELECT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name WHERE buslines.start_time = '0500' AND Intersects(busstops.Location, (SELECT Shape FROM districts WHERE name = '六合区'))"
    },
    {
        "db_id":"traffic",
        "id":"traffic38",
        "sql":"SELECT districts.name, buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name JOIN districts ON Contains(districts.Shape, busstops.Location) WHERE buslines.start_time < '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic39",
        "sql":"SELECT ss.station, MIN(Distance(bl.Shape, ss.Location, 1)) AS distance FROM buslines bl JOIN subwaystations ss ON bl.name = '709路' ORDER BY Distance(bl.Shape, ss.Location, 1) ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic40",
        "sql":"SELECT h.NAME, Distance(a.Location, h.Location, 1) AS Distance FROM agencies a JOIN hotels h ON Distance(a.Location, h.Location, 1) <= 500 WHERE a.NAME = '南京市文物局' ORDER BY Distance ASC LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic41",
        "sql":"SELECT buslines.name FROM buslines JOIN roads ON Intersects(buslines.Shape, roads.Shape) = 1 WHERE roads.Name = '建康路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic42",
        "sql":"SELECT districts.name, COUNT(agencies.NAME) AS num_agencies FROM districts JOIN agencies ON Contains(districts.Shape, agencies.Location) GROUP BY districts.name ORDER BY num_agencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic43",
        "sql":"SELECT hotels.NAME, MIN(Distance(subwaystations.Location, hotels.Location, 1)) AS distance FROM hotels JOIN subwaystations ON subwaystations.station = '南京南站' JOIN districts ON districts.name = '江宁区' WHERE Contains(districts.Shape, hotels.Location) ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic44",
        "sql":"SELECT d.name AS District, SUM(GLength(Intersection(s.Shape, d.Shape), 1)) AS SubwayLength FROM 'districts' d JOIN 'subways' s ON Intersects(s.Shape, d.Shape) GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic45",
        "sql":"SELECT d.name AS District, SUM(GLength(Intersection(s.Shape, d.Shape), 1)) AS TotalSubwayLength FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) GROUP BY d.name ORDER BY TotalSubwayLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic46",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN subwaystations ON subways.Line = subwaystations.Line JOIN districts ON Intersects(districts.Shape, subwaystations.Location) WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic47",
        "sql":"SELECT DISTINCT districts.name FROM districts JOIN rails ON Intersects(districts.Shape, rails.Shape) = 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic48",
        "sql":"SELECT COUNT(*) FROM hotels JOIN districts ON Within(hotels.Location, districts.Shape) WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic49",
        "sql":"SELECT COUNT(hotels.NAME) FROM hotels JOIN subways ON Distance(subways.Shape, hotels.Location, 1) < 500 WHERE subways.Line = 'S7'"
    },
    {
        "db_id":"traffic",
        "id":"traffic50",
        "sql":"SELECT DISTINCT districts.name FROM greenspaces INNER JOIN districts ON Intersects(districts.Shape, greenspaces.Shape) = 1 WHERE greenspaces.NAME = '钟山风景区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic51",
        "sql":"SELECT s.station, MIN(Distance(g.Shape, s.Location, 1)) AS distance FROM greenspaces g JOIN subwaystations s ON g.NAME = '郑和公园' GROUP BY s.station ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic52",
        "sql":"SELECT g.NAME, MIN(Distance(s.Location, g.Shape, 1)) AS Distance FROM subwaystations s JOIN greenspaces g ON INSTR(g.NAME, '公园') > 0 WHERE s.station = '上海路' GROUP BY g.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic53",
        "sql":"SELECT SUM(Area(Intersection(districts.Shape, rivers.Shape), 1)) AS TotalArea FROM districts JOIN rivers ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE districts.name = '南京市' AND rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic54",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN rivers ON Intersects(subways.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic55",
        "sql":"SELECT DISTINCT districts.name FROM rivers INNER JOIN districts ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic56",
        "sql":"SELECT districts.name, SUM(Area(Intersection(districts.Shape, rivers.Shape), 1)) AS JiangArea FROM districts JOIN rivers ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic57",
        "sql":"SELECT subwaystations.station FROM subwaystations JOIN rivers ON rivers.Name = '长江' WHERE Distance(subwaystations.Location, rivers.Shape, 1) <= 1000"
    },
    {
        "db_id":"traffic",
        "id":"traffic58",
        "sql":"SELECT DISTINCT buslines.name FROM buslines JOIN rivers ON Intersects(buslines.Shape, rivers.Shape) = 1 WHERE rivers.name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic59",
        "sql":"SELECT hotels.NAME FROM hotels, rivers WHERE rivers.Name = '长江' ORDER BY Distance(rivers.Shape, hotels.Location, 1) LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic60",
        "sql":"SELECT hotels.NAME, MIN(Distance(agencies.Location, hotels.Location, 1)) AS Distance FROM agencies JOIN hotels ON agencies.NAME = '高淳县教育局委员会' GROUP BY hotels.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic61",
        "sql":"SELECT g.NAME, MIN(Distance(s.Shape, g.Shape, 1)) AS Distance FROM subways s JOIN greenspaces g ON g.NAME LIKE '%公园%' WHERE s.Line = 'line1' GROUP BY g.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic62",
        "sql":"SELECT districts.name, COUNT(subwaystations.station) AS station_count FROM districts JOIN subwaystations ON districts.administrative_division_code = subwaystations.adcode GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic63",
        "sql":"SELECT districts.name, COUNT(subwaystations.station) AS station_count FROM subwaystations JOIN districts ON subwaystations.adcode = districts.administrative_division_code GROUP BY districts.name ORDER BY station_count DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic64",
        "sql":"SELECT Line, GLength(Shape, 1) as Length FROM subways ORDER BY Length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic65",
        "sql":"SELECT DISTINCT r2.Name FROM roads AS r1 JOIN roads AS r2 ON Intersects(r1.Shape, r2.Shape) = 1 WHERE r1.Name = '东风路' AND r2.Name != '东风路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic66",
        "sql":"SELECT subwaystations.station, MIN(Distance(hotels.Location, subwaystations.Location, 1)) AS distance FROM hotels JOIN subwaystations ON hotels.NAME = '金龙大酒店' GROUP BY hotels.NAME ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic67",
        "sql":"SELECT name, Area(Shape, 1) AS area FROM districts WHERE name IN ('玄武区', '秦淮区')"
    }
]