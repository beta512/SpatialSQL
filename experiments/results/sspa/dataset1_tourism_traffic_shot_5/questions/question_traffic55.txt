You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.

In SpatiLite,
	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.
	The function Area( s Surface , 1) returns the area of s, measured in meters.
	The function GLength( c Curve , 1) returns the length of c, measured in meters.
	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.

	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。
	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。

/* Some SQL examples are provided based on similar problems: */
/* Answer the following: 长江流经哪些省份？长江是由名字相同的多段河流组成。 */
Select distinct provinces.name from rivers inner join provinces On Intersects(provinces.Shape, rivers.Shape) = 1 where rivers.name = '长江'

/* Answer the following: 哪些省份境内既有长江流经，又有黄河流经？一条河流是由名字相同的各河流段组成。 */
Select distinct provinces.name from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where rivers.name = '长江'  intersect  Select distinct provinces.name from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where rivers.name = '黄河'

/* Answer the following: 长江与哪些铁路交汇？长江是由名字相同的各河流段组成，而一条铁路是由名字相同的各铁路段组成。 */
Select distinct rails.name from rivers inner join rails On Intersects(rails.Shape, rivers.Shape) = 1 where rivers.name = '长江'

/* Answer the following: 长江在湖北省境内的长度是多少？只需给出长度。长江是由名字相同的多段河流组成，应计算长江在湖北省境内的交汇部分的长度。 */
Select Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1))  from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where provinces.name = '湖北省' and rivers.name = '长江'

/* Answer the following: 湘桂线经过哪些城市？湘桂线是由名字相同的各铁路段组成。 */
Select distinct cities.name from rails inner join cities On Intersects(rails.Shape, cities.Shape) = 1 where rails.name = '湘桂线'

/* Given the following database schema: */
CREATE TABLE "agencies" (
NAME TEXT PRIMARY KEY,
KIND TEXT, 
Location POINT)

表"agencies"记录了南京市各政府机构的信息。

CREATE TABLE "buslines" (
lineID TEXT PRIMARY KEY,
name TEXT UNIQUE,
type TEXT,
distance DOUBLE,
start_stop TEXT,
end_stop TEXT,
start_time TEXT,
end_time TEXT, 
Shape LINESTRING,
foreign key (start_stop) references busstops (name),
foreign key (end_stop) references busstops (name))

表"buslines"记录了南京市各公交线路的信息。

CREATE TABLE "busstops" (
stopID TEXT PRIMARY KEY,
name TEXT Unique,
X DOUBLE,
Y DOUBLE,
lineIDs TEXT, 
Location POINT)

表"busstops"记录了南京市各公交站点的信息。

CREATE TABLE "districts" (
name TEXT PRIMARY KEY,
administrative_division_code TEXT Unique,
ENG_NAME TEXT, 
Shape POLYGON)

表"districts"记录了南京市各区的信息。

CREATE TABLE "greenspaces" (
PK_UID INTEGER PRIMARY KEY AUTOINCREMENT,
NAME TEXT,
KIND TEXT,
Shape_Leng DOUBLE,
Shape_Area DOUBLE, 
Shape POLYGON)

表"greenspaces"记录南京市各块绿地的信息；绿地包含公园、风景名胜、旅游景点等。

CREATE TABLE "hotels" (
NAME TEXT PRIMARY KEY,
KIND TEXT, 
Location POINT)

表"hotels"记录南京市内各个宾馆的信息。

CREATE TABLE "rails" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
fclass TEXT, 
Shape MULTILINESTRING)

表"rails"记录南京市内各段铁路的信息。

CREATE TABLE "rivers" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
fclass TEXT, 
Shape MULTIPOLYGON)

表"rivers"记录南京市各个水系的信息；水系包含湖泊、河流、水库等。

CREATE TABLE "roads" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
pyname TEXT,
kind_num INTEGER,
kind TEXT,
width INTEGER,
length DOUBLE,
speedclass INTEGER, 
Shape LINESTRING)

表"roads"记录南京市内各段道路的信息。

CREATE TABLE "subways" (
Line TEXT PRIMARY KEY, 
Shape LINESTRING)

表"subways"记录南京市内各条地铁线的信息。

CREATE TABLE "subwaystations" (
station TEXT,
Line TEXT,
address TEXT,
adcode TEXT, 
Location POINT,
primary key(station, Line),
foreign key(adcode) references districts(administrative_division_code),
foreign key(Line) references subways(Line))

表"subwaystations"记录南京市各个地铁站点的信息。


/* Answer the following with no explanation: 长江流经南京的哪些区？长江是由名字相同的多段河流组成。长江以'长江'为名称表示。 */
SELECT 