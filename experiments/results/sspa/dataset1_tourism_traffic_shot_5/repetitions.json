[
    {
        "sql_":"SELECT provinces.name, Sum(Area(cities.Shape, 1)) AS TotalArea FROM provinces INNER JOIN cities ON provinces.name = cities.province GROUP BY provinces.name",
        "error_info":"Repeat for the 1 times for exception: no such table: provinces",
        "db_id":"tourism",
        "id":"tourism07",
        "sql":"SELECT provinces.name, Sum(Area(cities.Shape, 1)) AS TotalArea FROM provinces INNER JOIN cities ON provinces.name = cities.province GROUP BY provinces.name",
        "prompt":"You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n	The function Area( s Surface , 1) returns the area of s, measured in meters.\n	The function GLength( c Curve , 1) returns the length of c, measured in meters.\n	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 我想了解各省境内河流的总长度。应计算河流在各省境内交汇部分的长度。 */\nSelect provinces.name, Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1))  from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 group by provinces.name\n\n/* Answer the following: 我想了解河北省各城市的面积。 */\nSelect name, Shape_Area from cities where province = '河北省'\n\n/* Answer the following: 每个省内有多少个城市？ */\nselect province, count(*) from cities group by province\n\n/* Answer the following: 每个省内有多少个机场？ */\nSelect provinces.name, count(*) from provinces inner join airports On Within(Location, Shape) = 1 group by provinces.name\n\n/* Answer the following: 每个省内1级河流的总长度是多少？一条河流由多个同名河段组成，应计算其在各省境内的交汇部分长度。 */\nSelect provinces.name, Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1))  from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where level_river = 1 group by provinces.name\n\n/* Given the following database schema: */\nCREATE TABLE "GDPs" (\nprovince TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nyear_2023 DOUBLE, \nyear_2022 DOUBLE, \nyear_2021 DOUBLE, \nyear_2020 DOUBLE, \nyear_2019 DOUBLE, \nyear_2018 DOUBLE, \nyear_2017 DOUBLE, \nyear_2016 DOUBLE, \nyear_2015 DOUBLE, \nyear_2014 DOUBLE, \nyear_2013 DOUBLE, \nyear_2012 DOUBLE, \nyear_2011 DOUBLE, \nyear_2010 DOUBLE, \nyear_2009 DOUBLE, \nyear_2008 DOUBLE, \nyear_2007 DOUBLE, \nyear_2006 DOUBLE, \nyear_2005 DOUBLE, \nyear_2004 DOUBLE, \nyear_2003 DOUBLE, \nyear_2002 DOUBLE, \nyear_2001 DOUBLE, \nyear_2000 DOUBLE, \nyear_1999 DOUBLE, \nyear_1998 DOUBLE, \nyear_1997 DOUBLE, \nyear_1996 DOUBLE, \nyear_1995 DOUBLE, \nyear_1994 DOUBLE, \nyear_1993 DOUBLE, \nyear_1992 DOUBLE)\n\n表"GDPs"记录中国各个省1992年到2023年的GDP信息。\n\nCREATE TABLE "airports" (\nIATA TEXT PRIMARY KEY,\nrunway_number INTEGER,\nairfield_area_class TEXT,\nName TEXT, \nLocation POINT)\n\n表"airports"记录中国各个机场的信息。\n\nCREATE TABLE "cities" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nprovince TEXT REFERENCES GDPs (province), \nShape MULTIPOLYGON)\n\n表"cities"记录中国各个城市的信息。\n\nCREATE TABLE "scenicSpots" (\nname TEXT PRIMARY KEY,\nlevel TEXT, \naddress TEXT, \nLocation POINT)\n\n表"scenicSpots"记录中国各个旅游景点的信息。\n\nCREATE TABLE "stations" (\nname TEXT PRIMARY KEY, \naddress TEXT, \nLocation POIINT)\n\n表"stations"记录中国各个高铁站的信息。\n\nCREATE TABLE "tours" (\ncity TEXT, \nyear INTEGER, \ninternational_tourists_number_Wan DOUBLE, \ninternational_toursim_earnings_Wan_dollar DOUBLET, \ndomestic_tourists_number_Wan DOUBLE, \nDomestic_Tourism_Earnings_Wan_Yuan DOUBLE, \nstar_hotel_number INTEGER, \nFOREIGN KEY (city) REFERENCES cities (name), \nPRIMARY KEY (city, year))\n\n表"tours"记录中国各个城市的旅游信息。\n\n\n/* Answer the following with no explanation: 每个省的面积分别是多少？一个省由多个城市构成。 The table "provinces" does not exist in the database and should not be used. */\nSELECT "
    },
    {
        "sql_":"SELECT Area(Shape, 1) FROM provinces WHERE name = '西藏自治区'",
        "error_info":"Repeat for the 1 times for exception: no such table: provinces",
        "db_id":"tourism",
        "id":"tourism20",
        "sql":"SELECT Area(Shape, 1) FROM provinces WHERE name = '西藏自治区'",
        "prompt":"You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n	The function Area( s Surface , 1) returns the area of s, measured in meters.\n	The function GLength( c Curve , 1) returns the length of c, measured in meters.\n	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 内蒙古自治区各城市的面积是多少？ */\nSelect name, Shape_Area from cities where province = '内蒙古自治区'\n\n/* Answer the following: 我想了解河北省各城市的面积。 */\nSelect name, Shape_Area from cities where province = '河北省'\n\n/* Answer the following: 新疆维吾尔自治区境内河流的总长度是多少？应计算河流与新疆维吾尔自治区交集的长度。 */\nSelect Sum(GLength(Intersection(rivers.Shape, provinces.Shape), 1))  from rivers inner join provinces On Intersects(rivers.Shape, provinces.Shape) =1 where provinces.name = '新疆维吾尔自治区'\n\n/* Answer the following: 内蒙古自治区的面积比河北省大多少？ */\nSelect (Select Area(Shape, 1) from provinces where name = '内蒙古自治区') - (Select Area(Shape, 1) from provinces where name = '河北省')\n\n/* Answer the following: 湖北省面积最大的城市是哪座？这座城市有多少所高校？ */\nSelect city, count(*) from universities where city = (Select cities.name from provinces inner join cities on Contains(provinces.Shape, cities.Shape) = 1 where provinces.name = '湖北省' order by Area(cities.Shape, 1) desc limit 1)\n\n/* Given the following database schema: */\nCREATE TABLE "GDPs" (\nprovince TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nyear_2023 DOUBLE, \nyear_2022 DOUBLE, \nyear_2021 DOUBLE, \nyear_2020 DOUBLE, \nyear_2019 DOUBLE, \nyear_2018 DOUBLE, \nyear_2017 DOUBLE, \nyear_2016 DOUBLE, \nyear_2015 DOUBLE, \nyear_2014 DOUBLE, \nyear_2013 DOUBLE, \nyear_2012 DOUBLE, \nyear_2011 DOUBLE, \nyear_2010 DOUBLE, \nyear_2009 DOUBLE, \nyear_2008 DOUBLE, \nyear_2007 DOUBLE, \nyear_2006 DOUBLE, \nyear_2005 DOUBLE, \nyear_2004 DOUBLE, \nyear_2003 DOUBLE, \nyear_2002 DOUBLE, \nyear_2001 DOUBLE, \nyear_2000 DOUBLE, \nyear_1999 DOUBLE, \nyear_1998 DOUBLE, \nyear_1997 DOUBLE, \nyear_1996 DOUBLE, \nyear_1995 DOUBLE, \nyear_1994 DOUBLE, \nyear_1993 DOUBLE, \nyear_1992 DOUBLE)\n\n表"GDPs"记录中国各个省1992年到2023年的GDP信息。\n\nCREATE TABLE "airports" (\nIATA TEXT PRIMARY KEY,\nrunway_number INTEGER,\nairfield_area_class TEXT,\nName TEXT, \nLocation POINT)\n\n表"airports"记录中国各个机场的信息。\n\nCREATE TABLE "cities" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nprovince TEXT REFERENCES GDPs (province), \nShape MULTIPOLYGON)\n\n表"cities"记录中国各个城市的信息。\n\nCREATE TABLE "scenicSpots" (\nname TEXT PRIMARY KEY,\nlevel TEXT, \naddress TEXT, \nLocation POINT)\n\n表"scenicSpots"记录中国各个旅游景点的信息。\n\nCREATE TABLE "stations" (\nname TEXT PRIMARY KEY, \naddress TEXT, \nLocation POIINT)\n\n表"stations"记录中国各个高铁站的信息。\n\nCREATE TABLE "tours" (\ncity TEXT, \nyear INTEGER, \ninternational_tourists_number_Wan DOUBLE, \ninternational_toursim_earnings_Wan_dollar DOUBLET, \ndomestic_tourists_number_Wan DOUBLE, \nDomestic_Tourism_Earnings_Wan_Yuan DOUBLE, \nstar_hotel_number INTEGER, \nFOREIGN KEY (city) REFERENCES cities (name), \nPRIMARY KEY (city, year))\n\n表"tours"记录中国各个城市的旅游信息。\n\n\n/* Answer the following with no explanation: 西藏自治区的面积是多少？西藏自治区是一个省，由多个城市构成。西藏自治区以'西藏自治区'为名称表示。 The table "provinces" does not exist in the database and should not be used. */\nSELECT "
    },
    {
        "sql_":"SELECT SUM(Shape_Area) FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省')",
        "error_info":"Repeat for the 1 times for exception: no such column: Shape_Area",
        "db_id":"tourism",
        "id":"tourism22",
        "sql":"SELECT SUM(Shape_Area) FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省')",
        "prompt":"You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n	The function Area( s Surface , 1) returns the area of s, measured in meters.\n	The function GLength( c Curve , 1) returns the length of c, measured in meters.\n	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 我想了解京津冀地区的总面积是多少。  */\nSelect Sum(Shape_Area) from cities where province in ('北京市', '天津市', '河北省')\n\n/* Answer the following: 长江在湖北省境内的长度是多少？只需给出长度。长江是由名字相同的多段河流组成，应计算长江在湖北省境内的交汇部分的长度。 */\nSelect Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1))  from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where provinces.name = '湖北省' and rivers.name = '长江'\n\n/* Answer the following: 我想了解河北省各城市的面积。 */\nSelect name, Shape_Area from cities where province = '河北省'\n\n/* Answer the following: 京津冀地区共有多少座机场？京津冀地区是指河北省、天津市和北京市。 */\nSelect count(*) from provinces inner join airports On Within(Location, Shape) = 1 where provinces.name in ('北京市', '河北省', '天津市')\n\n/* Answer the following: 湖北省面积最大的城市是哪座？这座城市有多少所高校？ */\nSelect city, count(*) from universities where city = (Select cities.name from provinces inner join cities on Contains(provinces.Shape, cities.Shape) = 1 where provinces.name = '湖北省' order by Area(cities.Shape, 1) desc limit 1)\n\n/* Given the following database schema: */\nCREATE TABLE "GDPs" (\nprovince TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nyear_2023 DOUBLE, \nyear_2022 DOUBLE, \nyear_2021 DOUBLE, \nyear_2020 DOUBLE, \nyear_2019 DOUBLE, \nyear_2018 DOUBLE, \nyear_2017 DOUBLE, \nyear_2016 DOUBLE, \nyear_2015 DOUBLE, \nyear_2014 DOUBLE, \nyear_2013 DOUBLE, \nyear_2012 DOUBLE, \nyear_2011 DOUBLE, \nyear_2010 DOUBLE, \nyear_2009 DOUBLE, \nyear_2008 DOUBLE, \nyear_2007 DOUBLE, \nyear_2006 DOUBLE, \nyear_2005 DOUBLE, \nyear_2004 DOUBLE, \nyear_2003 DOUBLE, \nyear_2002 DOUBLE, \nyear_2001 DOUBLE, \nyear_2000 DOUBLE, \nyear_1999 DOUBLE, \nyear_1998 DOUBLE, \nyear_1997 DOUBLE, \nyear_1996 DOUBLE, \nyear_1995 DOUBLE, \nyear_1994 DOUBLE, \nyear_1993 DOUBLE, \nyear_1992 DOUBLE)\n\n表"GDPs"记录中国各个省1992年到2023年的GDP信息。\n\nCREATE TABLE "airports" (\nIATA TEXT PRIMARY KEY,\nrunway_number INTEGER,\nairfield_area_class TEXT,\nName TEXT, \nLocation POINT)\n\n表"airports"记录中国各个机场的信息。\n\nCREATE TABLE "cities" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nprovince TEXT REFERENCES GDPs (province), \nShape MULTIPOLYGON)\n\n表"cities"记录中国各个城市的信息。\n\nCREATE TABLE "scenicSpots" (\nname TEXT PRIMARY KEY,\nlevel TEXT, \naddress TEXT, \nLocation POINT)\n\n表"scenicSpots"记录中国各个旅游景点的信息。\n\nCREATE TABLE "stations" (\nname TEXT PRIMARY KEY, \naddress TEXT, \nLocation POIINT)\n\n表"stations"记录中国各个高铁站的信息。\n\nCREATE TABLE "tours" (\ncity TEXT, \nyear INTEGER, \ninternational_tourists_number_Wan DOUBLE, \ninternational_toursim_earnings_Wan_dollar DOUBLET, \ndomestic_tourists_number_Wan DOUBLE, \nDomestic_Tourism_Earnings_Wan_Yuan DOUBLE, \nstar_hotel_number INTEGER, \nFOREIGN KEY (city) REFERENCES cities (name), \nPRIMARY KEY (city, year))\n\n表"tours"记录中国各个城市的旅游信息。\n\n\n/* Answer the following with no explanation: 东三省的总面积是多少？东三省指辽宁省、吉林省、黑龙江省。辽宁省以'辽宁省'为名称表示，吉林省以'吉林省'为名称表示，黑龙江省以'黑龙江省'为名称表示。 The column "Shape_Area" does not exist in the table "cities" and should not be used. */\nSELECT "
    },
    {
        "sql_":"SELECT name, Area(Shape, 1) as area FROM provinces WHERE name IN ('辽宁省', '吉林省', '黑龙江省') ORDER BY area DESC LIMIT 1",
        "error_info":"Repeat for the 1 times for exception: no such table: provinces",
        "db_id":"tourism",
        "id":"tourism23",
        "sql":"SELECT name, Area(Shape, 1) as area FROM provinces WHERE name IN ('辽宁省', '吉林省', '黑龙江省') ORDER BY area DESC LIMIT 1",
        "prompt":"You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n	The function Area( s Surface , 1) returns the area of s, measured in meters.\n	The function GLength( c Curve , 1) returns the length of c, measured in meters.\n	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 湖北省面积最大的城市是哪座？这座城市有多少所高校？ */\nSelect city, count(*) from universities where city = (Select cities.name from provinces inner join cities on Contains(provinces.Shape, cities.Shape) = 1 where provinces.name = '湖北省' order by Area(cities.Shape, 1) desc limit 1)\n\n/* Answer the following: 湖北省面积最大的城市是哪个？只需给出城市的名字。 */\nSelect name from cities where province = '湖北省' order by Shape_Area desc limit 1\n\n/* Answer the following: 中国面积最大的省份是哪一个？它的面积是多少？ */\nSelect name, Area(Shape, 1) as area from provinces order by area desc limit 1\n\n/* Answer the following: 长江在湖北省境内的长度是多少？只需给出长度。长江是由名字相同的多段河流组成，应计算长江在湖北省境内的交汇部分的长度。 */\nSelect Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1))  from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where provinces.name = '湖北省' and rivers.name = '长江'\n\n/* Answer the following: 中国五个自治区的总面积和总人口分别是多少？中国五个自治区是指西藏自治区、内蒙古自治区、新疆维吾尔自治区、广西壮族自治区和宁夏回族自治区。 */\nSelect Sum(Area(Shape,1))  , Sum(POPU) from provinces where name like '%自治区'\n\n/* Given the following database schema: */\nCREATE TABLE "GDPs" (\nprovince TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nyear_2023 DOUBLE, \nyear_2022 DOUBLE, \nyear_2021 DOUBLE, \nyear_2020 DOUBLE, \nyear_2019 DOUBLE, \nyear_2018 DOUBLE, \nyear_2017 DOUBLE, \nyear_2016 DOUBLE, \nyear_2015 DOUBLE, \nyear_2014 DOUBLE, \nyear_2013 DOUBLE, \nyear_2012 DOUBLE, \nyear_2011 DOUBLE, \nyear_2010 DOUBLE, \nyear_2009 DOUBLE, \nyear_2008 DOUBLE, \nyear_2007 DOUBLE, \nyear_2006 DOUBLE, \nyear_2005 DOUBLE, \nyear_2004 DOUBLE, \nyear_2003 DOUBLE, \nyear_2002 DOUBLE, \nyear_2001 DOUBLE, \nyear_2000 DOUBLE, \nyear_1999 DOUBLE, \nyear_1998 DOUBLE, \nyear_1997 DOUBLE, \nyear_1996 DOUBLE, \nyear_1995 DOUBLE, \nyear_1994 DOUBLE, \nyear_1993 DOUBLE, \nyear_1992 DOUBLE)\n\n表"GDPs"记录中国各个省1992年到2023年的GDP信息。\n\nCREATE TABLE "airports" (\nIATA TEXT PRIMARY KEY,\nrunway_number INTEGER,\nairfield_area_class TEXT,\nName TEXT, \nLocation POINT)\n\n表"airports"记录中国各个机场的信息。\n\nCREATE TABLE "cities" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nprovince TEXT REFERENCES GDPs (province), \nShape MULTIPOLYGON)\n\n表"cities"记录中国各个城市的信息。\n\nCREATE TABLE "scenicSpots" (\nname TEXT PRIMARY KEY,\nlevel TEXT, \naddress TEXT, \nLocation POINT)\n\n表"scenicSpots"记录中国各个旅游景点的信息。\n\nCREATE TABLE "stations" (\nname TEXT PRIMARY KEY, \naddress TEXT, \nLocation POIINT)\n\n表"stations"记录中国各个高铁站的信息。\n\nCREATE TABLE "tours" (\ncity TEXT, \nyear INTEGER, \ninternational_tourists_number_Wan DOUBLE, \ninternational_toursim_earnings_Wan_dollar DOUBLET, \ndomestic_tourists_number_Wan DOUBLE, \nDomestic_Tourism_Earnings_Wan_Yuan DOUBLE, \nstar_hotel_number INTEGER, \nFOREIGN KEY (city) REFERENCES cities (name), \nPRIMARY KEY (city, year))\n\n表"tours"记录中国各个城市的旅游信息。\n\n\n/* Answer the following with no explanation: 东三省面积最大的省是哪个，面积是多少？东三省指辽宁省、吉林省、黑龙江省。辽宁省以'辽宁省'为名称表示，吉林省以'吉林省'为名称表示，黑龙江省以'黑龙江省'为名称表示。 The table "provinces" does not exist in the database and should not be used. */\nSELECT "
    },
    {
        "sql_":"SELECT name, Distance(a.Location, b.Location, 1) AS distance FROM scenicSpots a INNER JOIN scenicSpots b ON a.name = '八大处公园' AND b.level = '5A' AND b.name != '八大处公园' ORDER BY distance ASC LIMIT 1",
        "error_info":"Repeat for the 1 times for exception: ambiguous column name: name",
        "db_id":"tourism",
        "id":"tourism27",
        "sql":"SELECT name, Distance(a.Location, b.Location, 1) AS distance FROM scenicSpots a INNER JOIN scenicSpots b ON a.name = '八大处公园' AND b.level = '5A' AND b.name != '八大处公园' ORDER BY distance ASC LIMIT 1",
        "prompt":"You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n	The function Area( s Surface , 1) returns the area of s, measured in meters.\n	The function GLength( c Curve , 1) returns the length of c, measured in meters.\n	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 北京市距离北京大学最近的985高校是哪所，距离是多少？北京大学除外。 */\nSelect b.name,  Distance(a.Location, b.Location, 1) from universities a inner join universities b where a.name = '北京大学' and b.province = '北京市' and b.name != '北京大学' order by Distance(a.Location, b.Location, 1) asc limit 1\n\n/* Answer the following: 京广线方圆10千米内有哪些机场？ */\nSelect distinct airports.name from airports inner join rails On Distance(airports.Location, rails.Shape, 1) < 10 * 1000 where rails.name = '京广线'\n\n/* Answer the following: 江苏省内距离太湖最近的机场是哪座？一个湖泊是由多个名称相同的湖泊区域组成。只需要给出机场名字。 */\nSelect airports.name from airports inner join provinces On Within(airports.Location, provinces.Shape) = 1 inner join lakes where provinces.name = '江苏省' and lakes.name = '太湖' order by Distance(airports.Location, lakes.Shape, 1) asc limit 1\n\n/* Answer the following: 列出北京市与北京大学最近的5所重点高校，距离分别是多少？重点高校是指211或者985高校。北京大学除外。 */\nSelect b.name,  Distance(a.Location, b.Location, 1) from universities a inner join universities b where a.name = '北京大学' and b.province = '北京市' and b.name != '北京大学' and (b.project_211 = 1 or b.project_985 = 1) order by Distance(a.Location, b.Location, 1) asc limit 5\n\n/* Answer the following: 湖北省面积最大的城市是哪个？只需给出城市的名字。 */\nSelect name from cities where province = '湖北省' order by Shape_Area desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE "GDPs" (\nprovince TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nyear_2023 DOUBLE, \nyear_2022 DOUBLE, \nyear_2021 DOUBLE, \nyear_2020 DOUBLE, \nyear_2019 DOUBLE, \nyear_2018 DOUBLE, \nyear_2017 DOUBLE, \nyear_2016 DOUBLE, \nyear_2015 DOUBLE, \nyear_2014 DOUBLE, \nyear_2013 DOUBLE, \nyear_2012 DOUBLE, \nyear_2011 DOUBLE, \nyear_2010 DOUBLE, \nyear_2009 DOUBLE, \nyear_2008 DOUBLE, \nyear_2007 DOUBLE, \nyear_2006 DOUBLE, \nyear_2005 DOUBLE, \nyear_2004 DOUBLE, \nyear_2003 DOUBLE, \nyear_2002 DOUBLE, \nyear_2001 DOUBLE, \nyear_2000 DOUBLE, \nyear_1999 DOUBLE, \nyear_1998 DOUBLE, \nyear_1997 DOUBLE, \nyear_1996 DOUBLE, \nyear_1995 DOUBLE, \nyear_1994 DOUBLE, \nyear_1993 DOUBLE, \nyear_1992 DOUBLE)\n\n表"GDPs"记录中国各个省1992年到2023年的GDP信息。\n\nCREATE TABLE "airports" (\nIATA TEXT PRIMARY KEY,\nrunway_number INTEGER,\nairfield_area_class TEXT,\nName TEXT, \nLocation POINT)\n\n表"airports"记录中国各个机场的信息。\n\nCREATE TABLE "cities" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nprovince TEXT REFERENCES GDPs (province), \nShape MULTIPOLYGON)\n\n表"cities"记录中国各个城市的信息。\n\nCREATE TABLE "scenicSpots" (\nname TEXT PRIMARY KEY,\nlevel TEXT, \naddress TEXT, \nLocation POINT)\n\n表"scenicSpots"记录中国各个旅游景点的信息。\n\nCREATE TABLE "stations" (\nname TEXT PRIMARY KEY, \naddress TEXT, \nLocation POIINT)\n\n表"stations"记录中国各个高铁站的信息。\n\nCREATE TABLE "tours" (\ncity TEXT, \nyear INTEGER, \ninternational_tourists_number_Wan DOUBLE, \ninternational_toursim_earnings_Wan_dollar DOUBLET, \ndomestic_tourists_number_Wan DOUBLE, \nDomestic_Tourism_Earnings_Wan_Yuan DOUBLE, \nstar_hotel_number INTEGER, \nFOREIGN KEY (city) REFERENCES cities (name), \nPRIMARY KEY (city, year))\n\n表"tours"记录中国各个城市的旅游信息。\n\n\n/* Answer the following with no explanation: 距离八大处公园最近的其他5A级旅游景点是哪个？距离是多少？八大处公园以'八大处公园'为名称表示，5A级以'5A'为名称表示。 Columns in multiple tables may have the same name, so ambiguity should be avoided. */\nSELECT "
    },
    {
        "sql_":"SELECT p.name, Area(p.Shape, 1) FROM GDPs g JOIN provinces p ON g.province = p.name WHERE g.year_2023 > (SELECT year_2023 FROM GDPs WHERE province = '浙江省')",
        "error_info":"Repeat for the 1 times for exception: no such table: provinces",
        "db_id":"tourism",
        "id":"tourism32",
        "sql":"SELECT p.name, Area(p.Shape, 1) FROM GDPs g JOIN provinces p ON g.province = p.name WHERE g.year_2023 > (SELECT year_2023 FROM GDPs WHERE province = '浙江省')",
        "prompt":"You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n	The function Area( s Surface , 1) returns the area of s, measured in meters.\n	The function GLength( c Curve , 1) returns the length of c, measured in meters.\n	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 与郑州市相邻接的城市中，2020年人口最多的城市是哪个？ */\nselect b.name from cities a inner join cities b on Touches(a.Shape, b.Shape) = 1 where a.name = '郑州市' order by b.POP2020 desc limit 1\n\n/* Answer the following: 与广东省接壤的省份有哪些？每个省的面积是多少？ */\nSelect b.name , Area(b.Shape, 1) from provinces a inner join provinces b On Touches(a.Shape, b.Shape) = 1 where a.name = '广东省'\n\n/* Answer the following: 我想知道河北省2020年人口最多的城市是哪个。 */\nSelect name from cities where province = '河北省' order by POP2020 desc limit 1\n\n/* Answer the following: 湖北省面积最大的城市，2020年的人口有多少？ */\nSelect name , POP2020 from cities where province = '湖北省' order by Area(Shape, 1) desc limit 1\n\n/* Answer the following: 江苏省内距离太湖最近的机场是哪座？一个湖泊是由多个名称相同的湖泊区域组成。只需要给出机场名字。 */\nSelect airports.name from airports inner join provinces On Within(airports.Location, provinces.Shape) = 1 inner join lakes where provinces.name = '江苏省' and lakes.name = '太湖' order by Distance(airports.Location, lakes.Shape, 1) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE "GDPs" (\nprovince TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nyear_2023 DOUBLE, \nyear_2022 DOUBLE, \nyear_2021 DOUBLE, \nyear_2020 DOUBLE, \nyear_2019 DOUBLE, \nyear_2018 DOUBLE, \nyear_2017 DOUBLE, \nyear_2016 DOUBLE, \nyear_2015 DOUBLE, \nyear_2014 DOUBLE, \nyear_2013 DOUBLE, \nyear_2012 DOUBLE, \nyear_2011 DOUBLE, \nyear_2010 DOUBLE, \nyear_2009 DOUBLE, \nyear_2008 DOUBLE, \nyear_2007 DOUBLE, \nyear_2006 DOUBLE, \nyear_2005 DOUBLE, \nyear_2004 DOUBLE, \nyear_2003 DOUBLE, \nyear_2002 DOUBLE, \nyear_2001 DOUBLE, \nyear_2000 DOUBLE, \nyear_1999 DOUBLE, \nyear_1998 DOUBLE, \nyear_1997 DOUBLE, \nyear_1996 DOUBLE, \nyear_1995 DOUBLE, \nyear_1994 DOUBLE, \nyear_1993 DOUBLE, \nyear_1992 DOUBLE)\n\n表"GDPs"记录中国各个省1992年到2023年的GDP信息。\n\nCREATE TABLE "airports" (\nIATA TEXT PRIMARY KEY,\nrunway_number INTEGER,\nairfield_area_class TEXT,\nName TEXT, \nLocation POINT)\n\n表"airports"记录中国各个机场的信息。\n\nCREATE TABLE "cities" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT, \nprovince TEXT REFERENCES GDPs (province), \nShape MULTIPOLYGON)\n\n表"cities"记录中国各个城市的信息。\n\nCREATE TABLE "scenicSpots" (\nname TEXT PRIMARY KEY,\nlevel TEXT, \naddress TEXT, \nLocation POINT)\n\n表"scenicSpots"记录中国各个旅游景点的信息。\n\nCREATE TABLE "stations" (\nname TEXT PRIMARY KEY, \naddress TEXT, \nLocation POIINT)\n\n表"stations"记录中国各个高铁站的信息。\n\nCREATE TABLE "tours" (\ncity TEXT, \nyear INTEGER, \ninternational_tourists_number_Wan DOUBLE, \ninternational_toursim_earnings_Wan_dollar DOUBLET, \ndomestic_tourists_number_Wan DOUBLE, \nDomestic_Tourism_Earnings_Wan_Yuan DOUBLE, \nstar_hotel_number INTEGER, \nFOREIGN KEY (city) REFERENCES cities (name), \nPRIMARY KEY (city, year))\n\n表"tours"记录中国各个城市的旅游信息。\n\n\n/* Answer the following with no explanation: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。浙江省以'浙江省'为名称表示。 The table "provinces" does not exist in the database and should not be used. */\nSELECT "
    },
    {
        "sql_":"SELECT subwaystations.station FROM subwaystations JOIN ( SELECT Intersection(buslines_874.Shape, buslines_711.Shape) AS IntersectionPoint FROM buslines AS buslines_874 JOIN buslines AS buslines_711 ON buslines_874.name = '874路' AND buslines_711.name = '711路' ) AS IntersectionPoints ON Distance(subwaystations.Location, IntersectionPoints.IntersectionPoint, 1) IS MINIMAL ORDER BY Distance(subwaystations.Location, IntersectionPoints.IntersectionPoint, 1) ASC LIMIT 1",
        "error_info":"Repeat for the 1 times for exception: no such column: MINIMAL",
        "db_id":"traffic",
        "id":"traffic23",
        "sql":"SELECT subwaystations.station FROM subwaystations JOIN ( SELECT Intersection(buslines_874.Shape, buslines_711.Shape) AS IntersectionPoint FROM buslines AS buslines_874 JOIN buslines AS buslines_711 ON buslines_874.name = '874路' AND buslines_711.name = '711路' ) AS IntersectionPoints ON Distance(subwaystations.Location, IntersectionPoints.IntersectionPoint, 1) IS MINIMAL ORDER BY Distance(subwaystations.Location, IntersectionPoints.IntersectionPoint, 1) ASC LIMIT 1",
        "prompt":"You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n	The function Area( s Surface , 1) returns the area of s, measured in meters.\n	The function GLength( c Curve , 1) returns the length of c, measured in meters.\n	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 北京市距离北京大学最近的985高校是哪所，距离是多少？北京大学除外。 */\nSelect b.name,  Distance(a.Location, b.Location, 1) from universities a inner join universities b where a.name = '北京大学' and b.province = '北京市' and b.name != '北京大学' order by Distance(a.Location, b.Location, 1) asc limit 1\n\n/* Answer the following: 湖北省内哪个机场距离省中心最近？ */\nSelect airports.name from provinces inner join airports On Within(airports.Location, provinces.Shape) = 1 where provinces.name = '湖北省'  order by Distance(Centroid(provinces.Shape), airports.Location, 1) asc limit 1\n\n/* Answer the following: 距离北京大学3000米以内的其它985大学有哪些？ */\nSelect a.name from universities a inner join universities b on Distance(a.Location, b.Location, 1) < 3000 where a.project_985 = 1 and b.name = '北京大学' and a.name != '北京大学'\n\n/* Answer the following: 黄河与京广线在哪些省份交汇？一条河流是由名字相同的各河流段组成，一条铁路是由名字相同的各铁路段组成。 */\nSelect distinct provinces.name from provinces inner join (Select Intersection(rails.Shape, rivers.Shape) as Location from rails inner join rivers On Intersects(rails.Shape, rivers.Shape) = 1 where rails.name = '京广线' and rivers.name = '黄河') As Inters On Within(Location, Shape) = 1\n\n/* Answer the following: 北京市的邻省有哪些？ */\nSelect b.name from provinces a inner join provinces b on Touches(a.Shape, b.Shape) = 1 where a.name = '北京市'\n\n/* Given the following database schema: */\nCREATE TABLE "agencies" (\nNAME TEXT PRIMARY KEY,\nKIND TEXT, \nLocation POINT)\n\n表"agencies"记录了南京市各政府机构的信息。\n\nCREATE TABLE "buslines" (\nlineID TEXT PRIMARY KEY,\nname TEXT UNIQUE,\ntype TEXT,\ndistance DOUBLE,\nstart_stop TEXT,\nend_stop TEXT,\nstart_time TEXT,\nend_time TEXT, \nShape LINESTRING,\nforeign key (start_stop) references busstops (name),\nforeign key (end_stop) references busstops (name))\n\n表"buslines"记录了南京市各公交线路的信息。\n\nCREATE TABLE "busstops" (\nstopID TEXT PRIMARY KEY,\nname TEXT Unique,\nX DOUBLE,\nY DOUBLE,\nlineIDs TEXT, \nLocation POINT)\n\n表"busstops"记录了南京市各公交站点的信息。\n\nCREATE TABLE "districts" (\nname TEXT PRIMARY KEY,\nadministrative_division_code TEXT Unique,\nENG_NAME TEXT, \nShape POLYGON)\n\n表"districts"记录了南京市各区的信息。\n\nCREATE TABLE "greenspaces" (\nPK_UID INTEGER PRIMARY KEY AUTOINCREMENT,\nNAME TEXT,\nKIND TEXT,\nShape_Leng DOUBLE,\nShape_Area DOUBLE, \nShape POLYGON)\n\n表"greenspaces"记录南京市各块绿地的信息；绿地包含公园、风景名胜、旅游景点等。\n\nCREATE TABLE "hotels" (\nNAME TEXT PRIMARY KEY,\nKIND TEXT, \nLocation POINT)\n\n表"hotels"记录南京市内各个宾馆的信息。\n\nCREATE TABLE "rails" (\ngml_id TEXT PRIMARY KEY,\nName TEXT,\nfclass TEXT, \nShape MULTILINESTRING)\n\n表"rails"记录南京市内各段铁路的信息。\n\nCREATE TABLE "rivers" (\ngml_id TEXT PRIMARY KEY,\nName TEXT,\nfclass TEXT, \nShape MULTIPOLYGON)\n\n表"rivers"记录南京市各个水系的信息；水系包含湖泊、河流、水库等。\n\nCREATE TABLE "roads" (\ngml_id TEXT PRIMARY KEY,\nName TEXT,\npyname TEXT,\nkind_num INTEGER,\nkind TEXT,\nwidth INTEGER,\nlength DOUBLE,\nspeedclass INTEGER, \nShape LINESTRING)\n\n表"roads"记录南京市内各段道路的信息。\n\nCREATE TABLE "subways" (\nLine TEXT PRIMARY KEY, \nShape LINESTRING)\n\n表"subways"记录南京市内各条地铁线的信息。\n\nCREATE TABLE "subwaystations" (\nstation TEXT,\nLine TEXT,\naddress TEXT,\nadcode TEXT, \nLocation POINT,\nprimary key(station, Line),\nforeign key(adcode) references districts(administrative_division_code),\nforeign key(Line) references subways(Line))\n\n表"subwaystations"记录南京市各个地铁站点的信息。\n\n\n/* Answer the following with no explanation: 公交874路与711路交汇处最近的地铁站是哪一站？公交874路表以'874路'为名称表示，711路以'711路'为名称表示。 The column "MINIMAL" does not exist in the table "subwaystations" and should not be used. */\nSELECT "
    },
    {
        "sql_":"SELECT distinct roads.Name FROM roads AS r1 JOIN roads AS r2 ON Intersects(r1.Shape, r2.Shape) = 1 WHERE r1.Name = '东风路' AND r2.Name != '东风路'",
        "error_info":"Repeat for the 1 times for exception: no such column: roads.Name",
        "db_id":"traffic",
        "id":"traffic65",
        "sql":"SELECT distinct roads.Name FROM roads AS r1 JOIN roads AS r2 ON Intersects(r1.Shape, r2.Shape) = 1 WHERE r1.Name = '东风路' AND r2.Name != '东风路'",
        "prompt":"You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n	The function Area( s Surface , 1) returns the area of s, measured in meters.\n	The function GLength( c Curve , 1) returns the length of c, measured in meters.\n	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 黄河与京广线在哪些省份交汇？一条河流是由名字相同的各河流段组成，一条铁路是由名字相同的各铁路段组成。 */\nSelect distinct provinces.name from provinces inner join (Select Intersection(rails.Shape, rivers.Shape) as Location from rails inner join rivers On Intersects(rails.Shape, rivers.Shape) = 1 where rails.name = '京广线' and rivers.name = '黄河') As Inters On Within(Location, Shape) = 1\n\n/* Answer the following: 京广线沿线各省份的人口各是多少？京广线是由名字相同的各铁路段组成。 */\nSelect name, Pop_Urban from provinces where name in (Select distinct provinces.name from provinces inner join rails On Intersects(provinces.Shape, rails.Shape) = 1 where rails.name = '京广线')\n\n/* Answer the following: 京广线经过河南省的哪些城市？一条铁路由多个同名铁路段组成。 */\nSelect distinct cities.name from cities inner join rails On Intersects(cities.Shape, rails.Shape) = 1 where cities.province = '河南省' and rails.name = '京广线'\n\n/* Answer the following: 湘桂线经过哪些城市？湘桂线是由名字相同的各铁路段组成。 */\nSelect distinct cities.name from rails inner join cities On Intersects(rails.Shape, cities.Shape) = 1 where rails.name = '湘桂线'\n\n/* Answer the following: 长江在湖北省境内的长度是多少？只需给出长度。长江是由名字相同的多段河流组成，应计算长江在湖北省境内的交汇部分的长度。 */\nSelect Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1))  from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where provinces.name = '湖北省' and rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE "agencies" (\nNAME TEXT PRIMARY KEY,\nKIND TEXT, \nLocation POINT)\n\n表"agencies"记录了南京市各政府机构的信息。\n\nCREATE TABLE "buslines" (\nlineID TEXT PRIMARY KEY,\nname TEXT UNIQUE,\ntype TEXT,\ndistance DOUBLE,\nstart_stop TEXT,\nend_stop TEXT,\nstart_time TEXT,\nend_time TEXT, \nShape LINESTRING,\nforeign key (start_stop) references busstops (name),\nforeign key (end_stop) references busstops (name))\n\n表"buslines"记录了南京市各公交线路的信息。\n\nCREATE TABLE "busstops" (\nstopID TEXT PRIMARY KEY,\nname TEXT Unique,\nX DOUBLE,\nY DOUBLE,\nlineIDs TEXT, \nLocation POINT)\n\n表"busstops"记录了南京市各公交站点的信息。\n\nCREATE TABLE "districts" (\nname TEXT PRIMARY KEY,\nadministrative_division_code TEXT Unique,\nENG_NAME TEXT, \nShape POLYGON)\n\n表"districts"记录了南京市各区的信息。\n\nCREATE TABLE "greenspaces" (\nPK_UID INTEGER PRIMARY KEY AUTOINCREMENT,\nNAME TEXT,\nKIND TEXT,\nShape_Leng DOUBLE,\nShape_Area DOUBLE, \nShape POLYGON)\n\n表"greenspaces"记录南京市各块绿地的信息；绿地包含公园、风景名胜、旅游景点等。\n\nCREATE TABLE "hotels" (\nNAME TEXT PRIMARY KEY,\nKIND TEXT, \nLocation POINT)\n\n表"hotels"记录南京市内各个宾馆的信息。\n\nCREATE TABLE "rails" (\ngml_id TEXT PRIMARY KEY,\nName TEXT,\nfclass TEXT, \nShape MULTILINESTRING)\n\n表"rails"记录南京市内各段铁路的信息。\n\nCREATE TABLE "rivers" (\ngml_id TEXT PRIMARY KEY,\nName TEXT,\nfclass TEXT, \nShape MULTIPOLYGON)\n\n表"rivers"记录南京市各个水系的信息；水系包含湖泊、河流、水库等。\n\nCREATE TABLE "roads" (\ngml_id TEXT PRIMARY KEY,\nName TEXT,\npyname TEXT,\nkind_num INTEGER,\nkind TEXT,\nwidth INTEGER,\nlength DOUBLE,\nspeedclass INTEGER, \nShape LINESTRING)\n\n表"roads"记录南京市内各段道路的信息。\n\nCREATE TABLE "subways" (\nLine TEXT PRIMARY KEY, \nShape LINESTRING)\n\n表"subways"记录南京市内各条地铁线的信息。\n\nCREATE TABLE "subwaystations" (\nstation TEXT,\nLine TEXT,\naddress TEXT,\nadcode TEXT, \nLocation POINT,\nprimary key(station, Line),\nforeign key(adcode) references districts(administrative_division_code),\nforeign key(Line) references subways(Line))\n\n表"subwaystations"记录南京市各个地铁站点的信息。\n\n\n/* Answer the following with no explanation: 与东风路相交的其它道路有哪些？一条道路由所有名字相同的路段构成。东风路以'东风路'为名称表示。 The column "Name" does not exist in the table "roads" and should not be used. */\nSELECT "
    }
]