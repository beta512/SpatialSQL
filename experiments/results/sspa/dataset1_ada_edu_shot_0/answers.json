[
    {
        "db_id":"ada",
        "id":"ada01",
        "sql":"SELECT SUM(Area) FROM lakes WHERE name = '太湖'"
    },
    {
        "db_id":"ada",
        "id":"ada02",
        "sql":"SELECT name FROM cities ORDER BY MBRMinY(shape) ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada03",
        "sql":"SELECT DISTINCT p.name FROM provinces p, lakes l WHERE l.name = '洞庭湖' AND Intersects(p.shape, l.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada04",
        "sql":"SELECT DISTINCT p.name FROM provinces p, rivers r WHERE r.name = '长江' AND Intersects(p.shape, r.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada05",
        "sql":"SELECT SUM(GLength(Intersection(r.shape, p.shape), 1)) AS YangtzeRiverLengthInHubei FROM rivers r, provinces p WHERE r.name = '长江' AND p.name = '湖北省' AND Intersects(r.shape, p.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada06",
        "sql":"SELECT DISTINCT r.name FROM rivers r JOIN provinces p ON Intersects(r.shape, p.shape) WHERE p.name = '湖北省' AND r.level_river = 1"
    },
    {
        "db_id":"ada",
        "id":"ada07",
        "sql":"SELECT p.name AS Province, SUM(GLength(Intersection(r.shape, p.shape), 1)) AS TotalRiverLength FROM provinces p JOIN rivers r ON Intersects(r.shape, p.shape) GROUP BY p.name"
    },
    {
        "db_id":"ada",
        "id":"ada08",
        "sql":"SELECT name, Area(shape, 1) AS area FROM provinces ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada09",
        "sql":"SELECT provinces.name, COUNT(cities.name) AS city_count FROM provinces JOIN cities ON provinces.name = cities.province GROUP BY provinces.name"
    },
    {
        "db_id":"ada",
        "id":"ada10",
        "sql":"SELECT p.name, Area(p.shape, 1) AS area FROM provinces p, provinces guangdong WHERE guangdong.name = '广东省' AND Touches(p.shape, guangdong.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada11",
        "sql":"SELECT SUM(Shape_Length) AS Total_Rail_Length FROM rails"
    },
    {
        "db_id":"ada",
        "id":"ada12",
        "sql":"SELECT SUM(Shape_Length) FROM rails WHERE name = '京广线'"
    },
    {
        "db_id":"ada",
        "id":"ada13",
        "sql":"SELECT cities.name FROM cities JOIN provinces ON cities.province = provinces.name JOIN rails ON Intersects(rails.shape, cities.shape) WHERE rails.name = '京广线' AND provinces.name = '河南省'"
    },
    {
        "db_id":"ada",
        "id":"ada14",
        "sql":"SELECT DISTINCT c.name FROM cities c JOIN rails r ON Intersects(c.shape, r.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada15",
        "sql":"SELECT c.name FROM cities c WHERE NOT EXISTS ( SELECT 1 FROM rails r WHERE Intersects(c.shape, r.shape) )"
    },
    {
        "db_id":"ada",
        "id":"ada16",
        "sql":"SELECT name, Area(shape, 1) AS area FROM provinces ORDER BY POPU DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada17",
        "sql":"SELECT SUM(Area) AS TotalArea_Level1_Lakes FROM lakes WHERE level_lake = 1"
    },
    {
        "db_id":"ada",
        "id":"ada18",
        "sql":"SELECT name FROM provinces ORDER BY (GDP_2000 - GDP_1994) DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada19",
        "sql":"SELECT name, Area(shape, 1) AS area FROM provinces ORDER BY Pop_Minori DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada20",
        "sql":"SELECT DISTINCT r.name AS river_name FROM rivers r JOIN rails ra ON Intersects(r.shape, ra.shape) WHERE r.level_river = 1"
    },
    {
        "db_id":"ada",
        "id":"ada21",
        "sql":"SELECT a.name FROM airports a, provinces p WHERE p.name = '湖北省' AND Contains(p.shape, a.location) ORDER BY Distance(Centroid(p.shape), a.location) LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada22",
        "sql":"SELECT DISTINCT r2.name FROM rails r1 JOIN rails r2 ON Intersects(r1.shape, r2.shape) WHERE r1.name = '盘西' AND r2.name != '盘西'"
    },
    {
        "db_id":"ada",
        "id":"ada23",
        "sql":"SELECT DISTINCT rivers.name FROM rivers JOIN provinces ON Intersects(rivers.shape, provinces.shape) WHERE provinces.name = '新疆维吾尔自治区'"
    },
    {
        "db_id":"ada",
        "id":"ada24",
        "sql":"SELECT SUM(GLength(Intersection(r.shape, p.shape), 1)) AS TotalRiverLength FROM rivers r, provinces p WHERE p.name = '新疆维吾尔自治区' AND Intersects(r.shape, p.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada25",
        "sql":"SELECT SUM(Area(shape, 1)) AS Total_Area, SUM(POPU) AS Total_Population FROM provinces WHERE name IN ('西藏自治区', '内蒙古自治区', '新疆维吾尔自治区', '广西壮族自治区', '宁夏回族自治区')"
    },
    {
        "db_id":"ada",
        "id":"ada26",
        "sql":"SELECT name, POPU FROM provinces WHERE name IN ('西藏自治区', '内蒙古自治区', '新疆维吾尔自治区', '广西壮族自治区', '宁夏回族自治区') ORDER BY Area(shape, 1) LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada27",
        "sql":"SELECT DISTINCT p.name FROM provinces p JOIN rivers r1 ON Intersects(p.shape, r1.shape) AND r1.name = '长江' JOIN rivers r2 ON Intersects(p.shape, r2.shape) AND r2.name = '黄河'"
    },
    {
        "db_id":"ada",
        "id":"ada28",
        "sql":"SELECT SUM(Pop_65Plus) AS Total_Population_Over_65 FROM provinces WHERE name IN ( SELECT DISTINCT p.name FROM provinces p JOIN rivers r ON Intersects(p.shape, r.shape) WHERE r.name = '长江' )"
    },
    {
        "db_id":"ada",
        "id":"ada29",
        "sql":"SELECT DISTINCT r.name FROM rivers rv, rails r WHERE rv.name = '长江' AND Intersects(rv.shape, r.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada30",
        "sql":"SELECT SUM(Area(provinces.shape, 1)) AS Total_Area FROM provinces JOIN rivers ON Intersects(provinces.shape, rivers.shape) WHERE rivers.name = '长江'"
    },
    {
        "db_id":"ada",
        "id":"ada31",
        "sql":"SELECT p.name, p.POPU FROM provinces p JOIN rails r ON Intersects(p.shape, r.shape) WHERE r.name = '京广线'"
    },
    {
        "db_id":"ada",
        "id":"ada32",
        "sql":"SELECT name FROM cities ORDER BY MbrMinX(shape) LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada33",
        "sql":"SELECT name FROM provinces ORDER BY XMax(shape) DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada34",
        "sql":"SELECT p.name AS province_name, SUM(GLength(r.shape, 1)) AS total_length FROM provinces p JOIN rivers r ON Intersects(p.shape, r.shape) WHERE r.level_river = 1 GROUP BY p.name"
    },
    {
        "db_id":"ada",
        "id":"ada35",
        "sql":"SELECT p.name AS province_name, COUNT(a.name) AS number_of_airports FROM provinces p JOIN airports a ON Within(a.location, p.shape) GROUP BY p.name"
    },
    {
        "db_id":"ada",
        "id":"ada36",
        "sql":"SELECT c.name FROM cities c, airports a WHERE a.name = '安庆' AND Distance(a.location, Centroid(c.shape), 1) <= 200000"
    },
    {
        "db_id":"ada",
        "id":"ada37",
        "sql":"SELECT COUNT(*) AS NumberOfAirports FROM airports JOIN provinces ON Within(airports.location, provinces.shape) WHERE provinces.name IN ('河北省', '天津市', '北京市')"
    },
    {
        "db_id":"ada",
        "id":"ada38",
        "sql":"SELECT a.name, MIN(Distance(c.shape, a.location, 1)) AS distance_meters FROM airports a, cities c WHERE c.name = '苏州市' GROUP BY a.name ORDER BY distance_meters ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada39",
        "sql":"SELECT provinces.name, COUNT(airports.name) AS airport_count FROM provinces LEFT JOIN airports ON Contains(provinces.shape, airports.location) GROUP BY provinces.name ORDER BY provinces.POPU DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada40",
        "sql":"SELECT a.name, a.IATA FROM airports a, rails r WHERE r.name = '京广线' AND Distance(a.location, r.shape, 1) <= 10000"
    },
    {
        "db_id":"ada",
        "id":"ada41",
        "sql":"SELECT airports.name FROM airports, lakes, provinces WHERE lakes.name = '太湖' AND provinces.name = '江苏省' AND Within(airports.location, provinces.shape) ORDER BY Distance(airports.location, lakes.shape) LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada42",
        "sql":"SELECT provinces.name, Area(provinces.shape, 1) AS area FROM provinces ORDER BY provinces.Pop_Female DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada43",
        "sql":"SELECT c.name, COUNT(a.name) AS airport_count FROM cities c JOIN airports a ON Contains(c.shape, a.location) GROUP BY c.name ORDER BY airport_count DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada44",
        "sql":"SELECT name, SUM(Shape_Length) AS Total_Length FROM rails GROUP BY name ORDER BY Total_Length DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada45",
        "sql":"SELECT provinces.name, COUNT(airports.name) AS airport_count FROM provinces LEFT JOIN airports ON Contains(provinces.shape, airports.location) GROUP BY provinces.name ORDER BY ABS(provinces.Pop_Male - provinces.Pop_Female) DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada46",
        "sql":"SELECT a.name FROM airports a, lakes l WHERE l.name = '太湖' AND Distance(a.location, l.shape, 1) <= 200000"
    },
    {
        "db_id":"ada",
        "id":"ada47",
        "sql":"SELECT cities.name FROM cities JOIN provinces ON cities.province = provinces.name WHERE provinces.name = '吉林省' ORDER BY Y(Centroid(cities.shape)) DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada48",
        "sql":"SELECT DISTINCT c.name FROM cities c, rails r WHERE r.name = '湘桂线' AND Intersects(c.shape, r.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada49",
        "sql":"SELECT GLength(Intersection( (SELECT shape FROM provinces WHERE name = '河南省'), (SELECT shape FROM provinces WHERE name = '湖北省') ), 1) AS border_length"
    },
    {
        "db_id":"ada",
        "id":"ada50",
        "sql":"SELECT cities.name FROM provinces JOIN cities ON Contains(provinces.shape, cities.shape) WHERE provinces.name = '湖北省' ORDER BY Distance(Centroid(provinces.shape), Centroid(cities.shape)) LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada51",
        "sql":"SELECT p2.name, GLength(Intersection(p1.shape, p2.shape), 1) AS boundary_length FROM provinces p1, provinces p2 WHERE p1.name = '河南省' AND p2.name != '河南省' AND Touches(p1.shape, p2.shape) ORDER BY boundary_length DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada52",
        "sql":"SELECT a.name AS airport_name, MIN(Distance(boundary_intersection, a.location, 1)) AS distance_to_border FROM airports a, (SELECT Intersection(p1.shape, p2.shape) AS boundary_intersection FROM provinces p1, provinces p2 WHERE p1.name = '河南省' AND p2.name = '湖北省') AS border GROUP BY a.name ORDER BY distance_to_border ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada53",
        "sql":"SELECT p.name FROM provinces p WHERE NOT Intersects(Centroid(p.shape), p.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada54",
        "sql":"SELECT SUM(length) AS YangtzeRiverLength FROM rivers WHERE name = '长江' SELECT SUM(length) AS YellowRiverLength FROM rivers WHERE name = '黄河'"
    },
    {
        "db_id":"ada",
        "id":"ada55",
        "sql":"SELECT province, COUNT(*) AS city_count FROM cities GROUP BY province ORDER BY city_count DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada56",
        "sql":"SELECT DISTINCT p.name FROM provinces p, rivers r, rails rl WHERE r.name = '黄河' AND rl.name = '京广线' AND Intersects(r.shape, rl.shape) AND Intersects(p.shape, r.shape)"
    },
    {
        "db_id":"edu",
        "id":"edu01",
        "sql":"SELECT COUNT(*) FROM universities WHERE city = '北京市'"
    },
    {
        "db_id":"edu",
        "id":"edu02",
        "sql":"SELECT provinces.name, COUNT(universities.name) AS university_count FROM provinces LEFT JOIN universities ON provinces.name = universities.province GROUP BY provinces.name"
    },
    {
        "db_id":"edu",
        "id":"edu03",
        "sql":"SELECT cities.name, Area(cities.shape, 1) AS city_area FROM cities JOIN provinces ON cities.province = provinces.name WHERE provinces.name = '河北省'"
    },
    {
        "db_id":"edu",
        "id":"edu04",
        "sql":"SELECT DISTINCT p.name FROM provinces p, provinces beijing WHERE beijing.name = '北京市' AND Touches(beijing.shape, p.shape)"
    },
    {
        "db_id":"edu",
        "id":"edu05",
        "sql":"SELECT p.name, COUNT(u.name) AS university_count FROM provinces p JOIN cities c ON Touches(p.shape, c.shape) JOIN universities u ON u.province = p.name WHERE c.name = '北京市' GROUP BY p.name"
    },
    {
        "db_id":"edu",
        "id":"edu06",
        "sql":"SELECT Area(shape, 1) AS Area FROM provinces WHERE name = '湖北省'"
    },
    {
        "db_id":"edu",
        "id":"edu07",
        "sql":"SELECT SUM(POP2020) FROM cities WHERE province = '湖北省'"
    },
    {
        "db_id":"edu",
        "id":"edu08",
        "sql":"SELECT name FROM universities WHERE project_211 = 1 ORDER BY X(location) LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu09",
        "sql":"SELECT SUM(POP2020) - SUM(POP2000) AS Population_Increase FROM cities WHERE province = '湖北省'"
    },
    {
        "db_id":"edu",
        "id":"edu10",
        "sql":"SELECT U.name FROM universities U JOIN provinces P ON U.province = P.name WHERE P.name = '湖北省' AND (U.project_985 = 1 OR U.project_211 = 1)"
    },
    {
        "db_id":"edu",
        "id":"edu11",
        "sql":"SELECT name FROM cities WHERE province = '湖北省' ORDER BY Shape_Area DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu12",
        "sql":"SELECT cities.name, Area(cities.shape, 1) AS city_area FROM cities JOIN provinces ON cities.province = provinces.name WHERE provinces.name = '内蒙古自治区'"
    },
    {
        "db_id":"edu",
        "id":"edu13",
        "sql":"SELECT p.name, COUNT(u.name) AS key_universities_count FROM provinces p JOIN universities u ON p.name = u.province WHERE u.project_985 = 1 OR u.project_211 = 1 GROUP BY p.name"
    },
    {
        "db_id":"edu",
        "id":"edu14",
        "sql":"SELECT SUM(Area(shape, 1)) AS Total_Area FROM provinces WHERE name IN ('北京市', '天津市', '河北省')"
    },
    {
        "db_id":"edu",
        "id":"edu15",
        "sql":"SELECT name FROM provinces ORDER BY MBRMinX(shape) LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu16",
        "sql":"SELECT Distance(Centroid((SELECT shape FROM cities WHERE name = '郑州市')), Centroid((SELECT shape FROM provinces WHERE name = '河南省')), 1) AS Distance_in_meters"
    },
    {
        "db_id":"edu",
        "id":"edu17",
        "sql":"SELECT c.name FROM cities c, cities anyang, provinces henan WHERE anyang.name = '安阳市' AND henan.name = '河南省' AND Touches(c.shape, anyang.shape) AND c.province != henan.name"
    },
    {
        "db_id":"edu",
        "id":"edu18",
        "sql":"SELECT name, Shape_Area FROM cities WHERE administrative_division_category != '直辖市' ORDER BY POP2020 DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu19",
        "sql":"SELECT u.name FROM universities u, universities beida WHERE beida.name = '北京大学' AND u.project_985 = 1 AND Distance(u.location, beida.location, 1) <= 3000 AND u.name != '北京大学'"
    },
    {
        "db_id":"edu",
        "id":"edu20",
        "sql":"SELECT SUM(POP2020) AS Total_POP2020 FROM cities WHERE province IN ('北京市', '天津市', '河北省')"
    },
    {
        "db_id":"edu",
        "id":"edu21",
        "sql":"SELECT name, POP2020 FROM cities WHERE province = '内蒙古自治区'"
    },
    {
        "db_id":"edu",
        "id":"edu22",
        "sql":"SELECT p.name FROM provinces p WHERE NOT EXISTS ( SELECT 1 FROM universities u WHERE u.province = p.name AND u.project_985 = 1 )"
    },
    {
        "db_id":"edu",
        "id":"edu23",
        "sql":"SELECT DISTINCT c.name FROM cities c JOIN universities u ON c.name = u.city WHERE u.project_985 = 1 OR u.project_211 = 1"
    },
    {
        "db_id":"edu",
        "id":"edu24",
        "sql":"SELECT DISTINCT c.name FROM cities c JOIN universities u ON c.name = u.city WHERE u.project_985 = 1 AND u.project_211 = 1"
    },
    {
        "db_id":"edu",
        "id":"edu25",
        "sql":"SELECT c.name FROM cities c WHERE c.administrative_division_category = '地级市' AND NOT EXISTS ( SELECT 1 FROM universities u WHERE u.city = c.name AND u.project_985 = 1 )"
    },
    {
        "db_id":"edu",
        "id":"edu26",
        "sql":"SELECT p.name FROM provinces p WHERE NOT EXISTS ( SELECT 1 FROM provinces p2 WHERE p.name != p2.name AND Touches(p.shape, p2.shape) )"
    },
    {
        "db_id":"edu",
        "id":"edu27",
        "sql":"SELECT p1.name AS Province, COUNT(DISTINCT p2.name) AS Bordering_Provinces FROM provinces p1, provinces p2 WHERE Touches(p1.shape, p2.shape) AND p1.name != p2.name GROUP BY p1.name"
    },
    {
        "db_id":"edu",
        "id":"edu28",
        "sql":"SELECT U.name, MIN(Distance(C.shape, U.location, 1)) AS Distance FROM cities C, universities U WHERE C.name = '北京市' AND U.name != '北京大学' AND U.project_985 = 1 AND U.city = '北京市' GROUP BY U.name ORDER BY Distance LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu29",
        "sql":"SELECT u.name, Distance(c.shape, u.location, 1) AS distance FROM universities u JOIN cities c ON u.city = c.name WHERE c.name = '北京市' AND (u.project_985 = 1 OR u.project_211 = 1) AND u.name != '北京大学' ORDER BY distance ASC LIMIT 5"
    },
    {
        "db_id":"edu",
        "id":"edu30",
        "sql":"SELECT COUNT(*) FROM universities WHERE province = '湖北省' AND affiliation = '教育部'"
    },
    {
        "db_id":"edu",
        "id":"edu31",
        "sql":"SELECT c.name FROM cities c JOIN provinces p ON c.province = p.name WHERE p.name = '河南省' AND NOT EXISTS ( SELECT 1 FROM cities c2 JOIN provinces p2 ON c2.province = p2.name WHERE p2.name != '河南省' AND Touches(c.shape, c2.shape) )"
    },
    {
        "db_id":"edu",
        "id":"edu32",
        "sql":"SELECT c.name FROM cities c, provinces p WHERE p.name = '河南省' AND Touches(c.shape, p.shape) = 1"
    },
    {
        "db_id":"edu",
        "id":"edu33",
        "sql":"SELECT c1.name FROM cities c1, cities c2 WHERE c2.name = '郑州市' AND Touches(c1.shape, c2.shape) ORDER BY c1.POP2020 DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu34",
        "sql":"SELECT Unfortunately, the SRID (Spatial Reference System Identifier) for the 'universities' table is not explicitly mentioned in the schema provided. In SQL databases like SpatiaLite, the SRID is usually defined when creating the geometry column, but it's not shown in the schema snippet you provided. To find the SRID used for the 'location' column in the 'universities' table, you would typically use a query like this: SELECT srid FROM geometry_columns WHERE f_table_name = 'universities' AND f_geometry_column = 'location' This query would return the SRID for the 'location' geometry column if it were available in the 'geometry_columns' metadata table, which is standard in spatial databases like SpatiaLite."
    },
    {
        "db_id":"edu",
        "id":"edu35",
        "sql":"SELECT provinces.name, COUNT(universities.name) AS Private_Universities_Count FROM provinces LEFT JOIN universities ON provinces.name = universities.province WHERE universities.operation_type = '民办' GROUP BY provinces.name"
    },
    {
        "db_id":"edu",
        "id":"edu36",
        "sql":"SELECT COUNT(*) FROM universities WHERE province = '河北省' AND name LIKE '%职业%'"
    },
    {
        "db_id":"edu",
        "id":"edu37",
        "sql":"SELECT DISTINCT p.name FROM provinces p JOIN universities u ON p.name = u.province WHERE u.name LIKE '中国%'"
    },
    {
        "db_id":"edu",
        "id":"edu38",
        "sql":"SELECT provinces.name, universities.name FROM universities JOIN provinces ON universities.province = provinces.name WHERE universities.name LIKE '中国%'"
    },
    {
        "db_id":"edu",
        "id":"edu39",
        "sql":"SELECT name FROM cities WHERE province = '河北省' ORDER BY POP2020 DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu40",
        "sql":"SELECT POP2020 FROM cities WHERE province = '湖北省' ORDER BY Shape_Area DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu41",
        "sql":"SELECT -- Find the city in Hubei province with the largest area WITH LargestCity AS ( SELECT name, MAX(Shape_Area) AS MaxArea FROM cities WHERE province = '湖北省' ) -- Count the number of universities in that city SELECT c.name AS CityName, COUNT(u.name) AS UniversityCount FROM cities c JOIN universities u ON c.name = u.city WHERE c.name = (SELECT name FROM LargestCity) GROUP BY c.name"
    },
    {
        "db_id":"edu",
        "id":"edu42",
        "sql":"SELECT city, COUNT(*) AS key_universities_count FROM universities WHERE province = '江苏省' AND (project_985 = 1 OR project_211 = 1) GROUP BY city ORDER BY key_universities_count DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu43",
        "sql":"SELECT Area((SELECT shape FROM provinces WHERE name = '内蒙古自治区'), 1) - Area((SELECT shape FROM provinces WHERE name = '河北省'), 1) AS area_difference"
    },
    {
        "db_id":"edu",
        "id":"edu44",
        "sql":"SELECT p.name, COUNT(u.name) AS num_universities FROM provinces p JOIN universities u ON p.name = u.province WHERE u.affiliation = '国家民委' GROUP BY p.name"
    }
]