[
    {
        "db_id":"tourism",
        "id":"tourism01",
        "sql":"SELECT SUM(Domestic_Tourism_Earnings_Wan_Yuan) FROM tours WHERE city IN (SELECT name FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省')) AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism02",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) FROM tours WHERE city IN (SELECT name FROM cities WHERE province = '湖北省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism03",
        "sql":"SELECT star_hotel_number FROM tours WHERE city IN (SELECT name FROM cities WHERE province = '湖北省') AND year = 2010"
    },
    {
        "db_id":"tourism",
        "id":"tourism04",
        "sql":"SELECT cities.name, COUNT(airports.IATA) AS airport_count FROM cities JOIN airports ON Contains(cities.Shape, airports.Location) GROUP BY cities.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism05",
        "sql":"SELECT name FROM cities WHERE name NOT IN (SELECT Location FROM airports)"
    },
    {
        "db_id":"tourism",
        "id":"tourism06",
        "sql":"SELECT cities.name, COUNT(scenicSpots.name) AS count_5A_spots FROM cities LEFT JOIN scenicSpots ON Within(scenicSpots.Location, cities.Shape) = 1 AND scenicSpots.level = '5A' GROUP BY cities.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism07",
        "sql":"SELECT provinces.name, SUM(Area(cities.Shape)) AS TotalArea FROM provinces JOIN cities ON provinces.name = cities.province GROUP BY provinces.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism08",
        "sql":"SELECT "
    },
    {
        "db_id":"tourism",
        "id":"tourism09",
        "sql":"SELECT province FROM cities ORDER BY MbrMinX(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism10",
        "sql":"SELECT province FROM cities ORDER BY MbrMinY(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism11",
        "sql":"SELECT name FROM cities WHERE province = '河南省' ORDER BY MbrMaxY(Shape) DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism12",
        "sql":"SELECT COUNT(scenicSpots.name) FROM scenicSpots INNER JOIN stations ON Distance(scenicSpots.Location, stations.Location) < 10 * 1000 WHERE stations.name = '六安' AND scenicSpots.level >= '3A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism13",
        "sql":"SELECT scenicSpots.name, Distance(stations.Location, scenicSpots.Location, 1) AS distance FROM scenicSpots JOIN stations ON Distance(stations.Location, scenicSpots.Location, 1) < 100 * 1000 WHERE stations.name = '岳阳东' AND scenicSpots.level = '5A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism14",
        "sql":"SELECT G.province, COUNT(A.IATA) AS airport_count FROM GDPs G LEFT JOIN cities C ON G.province = C.province LEFT JOIN airports A ON Within(A.Location, C.Shape) = 1 WHERE G.year_2023 = (SELECT MAX(year_2023) FROM GDPs) GROUP BY G.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism15",
        "sql":"SELECT province FROM GDPs ORDER BY year_2023 DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism16",
        "sql":"SELECT city FROM tours WHERE year BETWEEN 2011 AND 2020 ORDER BY international_tourists_number_Wan DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism17",
        "sql":"SELECT COUNT(*) FROM airports WHERE Name LIKE '%哈尔滨市%'"
    },
    {
        "db_id":"tourism",
        "id":"tourism18",
        "sql":"SELECT Name FROM airports WHERE Location IN (SELECT Shape FROM cities WHERE name = '北京市')"
    },
    {
        "db_id":"tourism",
        "id":"tourism19",
        "sql":"SELECT COUNT(*) FROM scenicSpots WHERE level >= '3A' AND address LIKE '%新疆维吾尔自治区%'"
    },
    {
        "db_id":"tourism",
        "id":"tourism20",
        "sql":"SELECT SUM(Shape_Area) FROM cities WHERE province = '西藏自治区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism21",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) FROM tours JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism22",
        "sql":"SELECT SUM(Shape_Area) FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省')"
    },
    {
        "db_id":"tourism",
        "id":"tourism23",
        "sql":"SELECT province, MAX(Area(Shape)) AS max_area FROM provinces WHERE province IN ('辽宁省', '吉林省', '黑龙江省') GROUP BY province ORDER BY max_area DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism24",
        "sql":"SELECT COUNT(*) FROM cities WHERE Distance_Sphere((SELECT Location FROM airports WHERE Name = '大理'), Shape) <= 150000"
    },
    {
        "db_id":"tourism",
        "id":"tourism25",
        "sql":"SELECT s.name, Distance(c.Shape, s.Location, 1) AS Distance FROM scenicSpots s, cities c WHERE s.level = '5A' AND c.name = '北京市' AND s.address LIKE '%北京市%' ORDER BY Distance DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism26",
        "sql":"SELECT Distance(scenicSpots.Location, scenicSpots_1.Location) AS DistanceInMeters FROM scenicSpots JOIN scenicSpots AS scenicSpots_1 ON scenicSpots.name = '北海公园' AND scenicSpots_1.name = '恭王府'"
    },
    {
        "db_id":"tourism",
        "id":"tourism27",
        "sql":"SELECT b.name, Distance(a.Location, b.Location, 1) AS Distance FROM scenicSpots a JOIN scenicSpots b ON a.name = '八大处公园' AND b.level = '5A' AND b.name != '八大处公园' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism28",
        "sql":"SELECT cities.name FROM airports INNER JOIN cities ON Contains(cities.Shape, airports.Location) WHERE airports.Name = '阿克苏/温宿'"
    },
    {
        "db_id":"tourism",
        "id":"tourism29",
        "sql":"SELECT address FROM scenicSpots WHERE name = '天台山景区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism30",
        "sql":"SELECT t.city, COUNT(ss.name) AS NumberOf5A_Spots FROM tours t JOIN cities c ON t.city = c.name JOIN scenicSpots ss ON ss.address LIKE '%' || c.name || '%' WHERE t.year = 2020 AND ss.level = '5A' GROUP BY t.city ORDER BY t.international_tourists_number_Wan DESC LIMIT 10"
    },
    {
        "db_id":"tourism",
        "id":"tourism31",
        "sql":"SELECT province, Domestic_Tourism_Earnings_Wan_Yuan FROM tours JOIN cities ON tours.city = cities.name WHERE province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism32",
        "sql":"SELECT G.province, A.area FROM GDPs G JOIN (SELECT province, SUM(Area(Shape)) AS area FROM cities GROUP BY province) A ON G.province = A.province WHERE G.year_2023 > (SELECT year_2023 FROM GDPs WHERE province = '浙江省')"
    },
    {
        "db_id":"tourism",
        "id":"tourism33",
        "sql":"SELECT city, star_hotel_number FROM tours WHERE year = 2020 ORDER BY star_hotel_number DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic01",
        "sql":"SELECT distance FROM buslines WHERE name = '874路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic02",
        "sql":"SELECT name, MAX(distance) AS length FROM buslines"
    },
    {
        "db_id":"traffic",
        "id":"traffic03",
        "sql":"SELECT b.name AS LineName, bs1.name AS StartStop, bs2.name AS EndStop, b.distance AS Length FROM buslines b JOIN busstops bs1 ON b.start_stop = bs1.name JOIN busstops bs2 ON b.end_stop = bs2.name ORDER BY b.distance DESC LIMIT 10"
    },
    {
        "db_id":"traffic",
        "id":"traffic04",
        "sql":"SELECT Name, SUM(length) AS TotalLength FROM roads WHERE Name IN (SELECT Name FROM roads JOIN districts ON Intersects(roads.Shape, districts.Shape) WHERE districts.name = '南京市') GROUP BY Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic05",
        "sql":"SELECT Name, MAX(length) AS LongestLength FROM roads WHERE Name IN ( SELECT Name FROM roads JOIN districts ON Intersects(roads.Shape, districts.Shape) WHERE districts.name = '南京市' ) GROUP BY Name ORDER BY LongestLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic06",
        "sql":"SELECT SUM(Shape_Area) FROM greenspaces JOIN districts ON Contains(districts.Shape, greenspaces.Shape) WHERE districts.name = '南京市'"
    },
    {
        "db_id":"traffic",
        "id":"traffic07",
        "sql":"SELECT NAME, SUM(Shape_Area) AS Total_Area FROM greenspaces WHERE NAME IN (SELECT NAME FROM greenspaces WHERE NAME LIKE '%南京市%') GROUP BY NAME"
    },
    {
        "db_id":"traffic",
        "id":"traffic08",
        "sql":"SELECT NAME, SUM(Shape_Area) AS Total_Area FROM greenspaces GROUP BY NAME ORDER BY Total_Area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic09",
        "sql":"SELECT SUM(Shape_Area) FROM greenspaces WHERE NAME = '玄武湖公园'"
    },
    {
        "db_id":"traffic",
        "id":"traffic10",
        "sql":"SELECT districts.name, SUM(Area(Intersection(greenspaces.Shape, districts.Shape))) AS green_area FROM districts JOIN greenspaces ON Intersects(districts.Shape, greenspaces.Shape) WHERE districts.name LIKE '南京市%' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic11",
        "sql":"SELECT d.name, SUM(g.Shape_Area) AS TotalGreenSpaceArea FROM districts d JOIN greenspaces g ON Intersects(d.Shape, g.Shape) WHERE d.name LIKE '南京市%' GROUP BY d.name ORDER BY TotalGreenSpaceArea DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic12",
        "sql":"SELECT Line, COUNT(station) AS NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic13",
        "sql":"SELECT Line, COUNT(station) AS NumberOfStations FROM subwaystations WHERE Line IN (SELECT Line FROM subways WHERE Line LIKE '%南京%') GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic14",
        "sql":"SELECT name FROM buslines WHERE start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic15",
        "sql":"SELECT hotels.NAME, Distance(busstops.Location, hotels.Location) AS distance FROM busstops JOIN hotels ON Distance(busstops.Location, hotels.Location) < 5000 -- Assuming a reasonable search radius in meters WHERE busstops.name = '三元巷' ORDER BY distance LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic16",
        "sql":"SELECT Line, COUNT(station) AS station_count FROM subwaystations GROUP BY Line ORDER BY station_count DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic17",
        "sql":"SELECT Line, COUNT(DISTINCT adcode) AS DistrictCount FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic18",
        "sql":"SELECT GLength(Shape) AS Length FROM subways WHERE Line = 'line4'"
    },
    {
        "db_id":"traffic",
        "id":"traffic19",
        "sql":"SELECT distinct s2.Line FROM subways s1 JOIN subways s2 ON Intersects(s1.Shape, s2.Shape) = 1 WHERE s1.Line = 'line10二期' AND s2.Line != 'line10二期'"
    },
    {
        "db_id":"traffic",
        "id":"traffic20",
        "sql":"SELECT SUM(GLength(Shape)) FROM subways WHERE Line IN (SELECT Line FROM subwaystations WHERE adcode LIKE '3201%')"
    },
    {
        "db_id":"traffic",
        "id":"traffic21",
        "sql":"SELECT subwaystations.station, Distance(agencies.Location, subwaystations.Location, 1) AS distance FROM agencies JOIN subwaystations ON agencies.Location <> subwaystations.Location WHERE agencies.NAME = '南京市文物局' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic22",
        "sql":"SELECT hotels.NAME, Distance(subwaystations.Location, hotels.Location) AS Distance FROM subwaystations JOIN hotels ON Distance(subwaystations.Location, hotels.Location) < 1000 WHERE subwaystations.station = '鼓楼' AND subwaystations.Line = 'line4'"
    },
    {
        "db_id":"traffic",
        "id":"traffic23",
        "sql":"SELECT station FROM subwaystations WHERE Location IN ( SELECT nearest(Location, intersection(Shape, (SELECT Shape FROM buslines WHERE name = '874路'), (SELECT Shape FROM buslines WHERE name = '711路'))) FROM subwaystations ) LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic24",
        "sql":"SELECT s.station, Distance(i.Shape, s.Location) AS distance FROM roads i, subwaystations s WHERE i.Name = '秦淮路' OR i.Name = '将军大道' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic25",
        "sql":"SELECT rails.Name, SUM(GLength(rails.Shape)) AS TotalLength FROM rails JOIN districts ON Intersects(rails.Shape, districts.Shape) WHERE districts.name = '南京市' GROUP BY rails.Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic26",
        "sql":"SELECT Name, SUM(GLength(Shape)) AS TotalLength FROM rails GROUP BY Name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic27",
        "sql":"SELECT SUM(Shape_Length) FROM rails INNER JOIN districts ON Within(rails.Shape, districts.Shape) WHERE districts.name = '南京市'"
    },
    {
        "db_id":"traffic",
        "id":"traffic28",
        "sql":"SELECT districts.name, COUNT(agencies.NAME) AS NumberOfAgencies FROM districts JOIN agencies ON Contains(districts.Shape, agencies.Location) GROUP BY districts.name ORDER BY NumberOfAgencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic29",
        "sql":"SELECT districts.name FROM subwaystations INNER JOIN districts ON subwaystations.adcode = districts.administrative_division_code WHERE subwaystations.station = '大行宫'"
    },
    {
        "db_id":"traffic",
        "id":"traffic30",
        "sql":"SELECT districts.name FROM districts INNER JOIN agencies ON Contains(districts.Shape, agencies.Location) WHERE agencies.NAME = '江苏省海事局'"
    },
    {
        "db_id":"traffic",
        "id":"traffic31",
        "sql":"SELECT name, Area(Shape, 1) as area FROM districts WHERE name LIKE '南京市%' ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic32",
        "sql":"SELECT name, Shape_Area FROM districts WHERE name LIKE '南京市%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic33",
        "sql":"SELECT districts.name, COUNT(DISTINCT subways.Line) AS NumberOfSubwayLines FROM districts JOIN subwaystations ON districts.administrative_division_code = subwaystations.adcode JOIN subways ON subwaystations.Line = subways.Line WHERE districts.name LIKE '南京市%' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic34",
        "sql":"SELECT distinct hotels.NAME FROM hotels JOIN roads ON Distance(hotels.Location, roads.Shape, 1) < 1000 WHERE roads.Name = '广州路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic35",
        "sql":"SELECT subwaystations.station, min(Distance(agencies.Location, subwaystations.Location, 1)) as distance FROM agencies INNER JOIN subwaystations ON Distance(agencies.Location, subwaystations.Location) < 5000 WHERE agencies.name = '南京市房产局' GROUP BY subwaystations.station ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic36",
        "sql":"SELECT COUNT(DISTINCT Line) FROM subways WHERE Intersects(Shape, (SELECT Shape FROM districts WHERE name = '玄武区'))"
    },
    {
        "db_id":"traffic",
        "id":"traffic37",
        "sql":"SELECT buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name JOIN districts ON Contains(districts.Shape, busstops.Location) WHERE districts.name = '六合区' AND buslines.start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic38",
        "sql":"SELECT districts.name, buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name JOIN districts ON Contains(districts.Shape, busstops.Location) WHERE buslines.start_time < '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic39",
        "sql":"SELECT subwaystations.station, MIN(Distance(busstops.Location, subwaystations.Location)) AS Distance FROM busstops JOIN buslines ON busstops.lineIDs LIKE '%709路%' JOIN subwaystations ON DWithin(busstops.Location, subwaystations.Location, 10000) -- Assuming a reasonable search radius in meters GROUP BY subwaystations.station ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic40",
        "sql":"SELECT h.NAME, Distance(a.Location, h.Location) AS Distance FROM agencies a JOIN hotels h ON Distance(a.Location, h.Location) <= 500 WHERE a.NAME = '南京市文物局' ORDER BY Distance ASC LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic41",
        "sql":"SELECT buslines.name FROM buslines JOIN roads ON Intersects(buslines.Shape, roads.Shape) WHERE roads.Name = '建康路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic42",
        "sql":"SELECT districts.name, COUNT(agencies.NAME) AS NumberOfAgencies FROM districts JOIN agencies ON Contains(districts.Shape, agencies.Location) GROUP BY districts.name ORDER BY NumberOfAgencies DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic43",
        "sql":"SELECT hotels.NAME, MIN(Distance(subwaystations.Location, hotels.Location, 1)) AS distance FROM hotels INNER JOIN subwaystations ON subwaystations.station = '南京南站' INNER JOIN districts ON districts.name = '江宁区' WHERE Contains(districts.Shape, hotels.Location) GROUP BY hotels.NAME ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic44",
        "sql":"SELECT d.name AS District, SUM(GLength(Intersection(s.Shape, d.Shape))) AS SubwayLength FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) WHERE d.name LIKE '南京市%' GROUP BY d.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic45",
        "sql":"SELECT d.name AS District, SUM(GLength(Intersection(s.Shape, d.Shape))) AS TotalLength FROM districts d JOIN subways s ON Intersects(s.Shape, d.Shape) WHERE d.name LIKE '南京市%' GROUP BY d.name ORDER BY TotalLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic46",
        "sql":"SELECT Line FROM subwaystations WHERE adcode = (SELECT administrative_division_code FROM districts WHERE name = '玄武区') GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic47",
        "sql":"SELECT distinct districts.name FROM districts JOIN rails ON Intersects(districts.Shape, rails.Shape) = 1 WHERE districts.name LIKE '南京市%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic48",
        "sql":"SELECT COUNT(*) FROM hotels WHERE Location IN (SELECT Location FROM districts WHERE name = '玄武区')"
    },
    {
        "db_id":"traffic",
        "id":"traffic49",
        "sql":"SELECT COUNT(hotels.NAME) FROM hotels JOIN subways ON DWithin(subways.Shape, hotels.Location, 500) WHERE subways.Line = 'S7'"
    },
    {
        "db_id":"traffic",
        "id":"traffic50",
        "sql":"SELECT DISTINCT districts.name FROM greenspaces INNER JOIN districts ON Intersects(districts.Shape, greenspaces.Shape) = 1 WHERE greenspaces.NAME = '钟山风景区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic51",
        "sql":"SELECT subwaystations.station, Distance(greenspaces.Location, subwaystations.Location, 1) AS Distance FROM greenspaces JOIN subwaystations ON greenspaces.NAME = '郑和公园' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic52",
        "sql":"SELECT greenspaces.NAME, MIN(Distance(subwaystations.Location, greenspaces.Shape)) AS MinDistance FROM subwaystations JOIN greenspaces ON INSTR(greenspaces.NAME, '公园') > 0 WHERE subwaystations.station = '上海路' GROUP BY greenspaces.NAME ORDER BY MinDistance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic53",
        "sql":"SELECT SUM(Area(Intersection(districts.Shape, rivers.Shape))) AS TotalArea FROM districts JOIN rivers ON Intersects(districts.Shape, rivers.Shape) WHERE districts.name = '南京市' AND rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic54",
        "sql":"SELECT DISTINCT subways.Line FROM subways JOIN rivers ON Intersects(subways.Shape, rivers.Shape) WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic55",
        "sql":"SELECT districts.name FROM districts JOIN rivers ON Intersects(districts.Shape, rivers.Shape) WHERE rivers.Name = '长江' AND districts.name LIKE '%南京%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic56",
        "sql":"SELECT districts.name, SUM(Area(Intersection(districts.Shape, rivers.Shape))) AS JiangArea FROM districts JOIN rivers ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE districts.name LIKE '南京%' AND rivers.Name = '长江' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic57",
        "sql":"SELECT subwaystations.station FROM subwaystations JOIN rivers ON DWithin(rivers.Shape, subwaystations.Location, 1000) WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic58",
        "sql":"SELECT DISTINCT buslines.name FROM buslines JOIN rivers ON Intersects(buslines.Shape, rivers.Shape) WHERE rivers.name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic59",
        "sql":"SELECT hotels.NAME FROM hotels JOIN rivers ON rivers.Name = '长江' ORDER BY Distance(hotels.Location, rivers.Shape) ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic60",
        "sql":"SELECT hotels.NAME, Distance(agencies.Location, hotels.Location, 1) AS Distance FROM agencies JOIN hotels ON Distance(agencies.Location, hotels.Location, 1) IS NOT NULL WHERE agencies.NAME = '高淳县教育局委员会' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic61",
        "sql":"SELECT g.NAME, MIN(Distance(s.Shape, g.Shape)) AS Distance FROM subways s JOIN greenspaces g ON g.NAME LIKE '%公园%' WHERE s.Line = 'line1' GROUP BY g.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic62",
        "sql":"SELECT districts.name, COUNT(subwaystations.station) FROM districts JOIN subwaystations ON districts.administrative_division_code = subwaystations.adcode GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic63",
        "sql":"SELECT districts.name, COUNT(subwaystations.station) AS station_count FROM subwaystations JOIN districts ON subwaystations.adcode = districts.administrative_division_code GROUP BY districts.name ORDER BY station_count DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic64",
        "sql":"SELECT Line, GLength(Shape) as Length FROM subways ORDER BY Length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic65",
        "sql":"SELECT DISTINCT roads.Name FROM roads JOIN roads AS intersecting_roads ON Intersects(roads.Shape, intersecting_roads.Shape) = 1 WHERE roads.Name = '东风路' AND intersecting_roads.Name != '东风路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic66",
        "sql":"SELECT subwaystations.station, MIN(Distance(hotels.Location, subwaystations.Location, 1)) AS distance FROM hotels INNER JOIN subwaystations ON hotels.NAME = '金龙大酒店' GROUP BY hotels.NAME ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic67",
        "sql":"SELECT name, Area(Shape, 1) AS area FROM districts WHERE name IN ('玄武区', '秦淮区')"
    }
]