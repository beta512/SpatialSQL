[
    {
        "db_id":"tourism",
        "id":"tourism01",
        "sql":"SELECT SUM(Domestic_Tourism_Earnings_Wan_Yuan) FROM tours INNER JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism02",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) FROM tours WHERE city IN (SELECT name FROM cities WHERE province = '湖北省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism03",
        "sql":"SELECT SUM(star_hotel_number) FROM tours WHERE city IN (SELECT name FROM cities WHERE province = '湖北省') AND year = 2010"
    },
    {
        "db_id":"tourism",
        "id":"tourism04",
        "sql":"SELECT cities.name, COUNT(airports.IATA) AS NumberOfAirports FROM cities JOIN airports ON Within(airports.Location, cities.Shape) = 1 GROUP BY cities.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism05",
        "sql":"SELECT name FROM cities WHERE name NOT IN (SELECT cities.name FROM cities INNER JOIN airports ON Within(airports.Location, cities.Shape) = 1)"
    },
    {
        "db_id":"tourism",
        "id":"tourism06",
        "sql":"SELECT cities.name, COUNT(*) AS FiveA_ScenicSpots_Count FROM cities JOIN scenicSpots ON Within(scenicSpots.Location, cities.Shape) = 1 AND scenicSpots.level = '5A' GROUP BY cities.name"
    },
    {
        "db_id":"tourism",
        "id":"tourism07",
        "sql":"SELECT province, SUM(Shape_Area(Shape)) AS TotalArea FROM cities GROUP BY province"
    },
    {
        "db_id":"tourism",
        "id":"tourism08",
        "sql":"SELECT provinces.name, SUM(Area(cities.Shape, 1)) AS TotalArea FROM provinces JOIN cities ON provinces.name = cities.province GROUP BY provinces.name ORDER BY TotalArea DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism09",
        "sql":"SELECT province FROM cities ORDER BY MbrMinX(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism10",
        "sql":"SELECT province FROM cities ORDER BY MbrMinY(Shape) ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism11",
        "sql":"SELECT name FROM cities WHERE province = '河南省' ORDER BY MbrMaxY(Shape) DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism12",
        "sql":"SELECT COUNT(scenicSpots.name) FROM scenicSpots INNER JOIN stations ON Distance(scenicSpots.Location, stations.Location, 1) < 10 * 1000 WHERE stations.name = '六安' AND scenicSpots.level >= '3A'"
    },
    {
        "db_id":"tourism",
        "id":"tourism13",
        "sql":"SELECT scenicSpots.name, Distance(stations.Location, scenicSpots.Location, 1) as Distance FROM scenicSpots INNER JOIN stations ON Distance(stations.Location, scenicSpots.Location, 1) < 100 * 1000 WHERE stations.name = '岳阳东' AND scenicSpots.level = '5A' ORDER BY Distance"
    },
    {
        "db_id":"tourism",
        "id":"tourism14",
        "sql":"SELECT GDPs.province, COUNT(airports.IATA) AS airport_count FROM GDPs LEFT JOIN cities ON GDPs.province = cities.province LEFT JOIN airports ON Contains(cities.Shape, airports.Location) WHERE GDPs.year_2023 = (SELECT MAX(year_2023) FROM GDPs) GROUP BY GDPs.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism15",
        "sql":"SELECT province FROM GDPs ORDER BY year_2023 DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism16",
        "sql":"SELECT city FROM tours WHERE year BETWEEN 2011 AND 2020 ORDER BY international_tourists_number_Wan DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism17",
        "sql":"SELECT count(*) FROM airports WHERE Name LIKE '%哈尔滨市%'"
    },
    {
        "db_id":"tourism",
        "id":"tourism18",
        "sql":"SELECT Name FROM airports WHERE Location IN (SELECT Shape FROM cities WHERE name = '北京市')"
    },
    {
        "db_id":"tourism",
        "id":"tourism19",
        "sql":"SELECT COUNT(*) FROM scenicSpots WHERE level >= '3A' AND address LIKE '%新疆维吾尔自治区%'"
    },
    {
        "db_id":"tourism",
        "id":"tourism20",
        "sql":"SELECT Area(Shape, 1) FROM provinces WHERE name = '西藏自治区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism21",
        "sql":"SELECT SUM(international_toursim_earnings_Wan_dollar) FROM tours INNER JOIN cities ON tours.city = cities.name WHERE cities.province IN ('辽宁省', '吉林省', '黑龙江省') AND year = 2020"
    },
    {
        "db_id":"tourism",
        "id":"tourism22",
        "sql":"SELECT SUM(Shape_Area) FROM cities WHERE province IN ('辽宁省', '吉林省', '黑龙江省')"
    },
    {
        "db_id":"tourism",
        "id":"tourism23",
        "sql":"SELECT name, Area(Shape, 1) as area FROM provinces WHERE name IN ('辽宁省', '吉林省', '黑龙江省') ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism24",
        "sql":"SELECT COUNT(DISTINCT cities.name) FROM cities INNER JOIN airports ON Distance(cities.Shape, airports.Location, 1) <= 150 * 1000 WHERE airports.name = '大理'"
    },
    {
        "db_id":"tourism",
        "id":"tourism25",
        "sql":"SELECT s.name, Distance(c.Shape, s.Location, 1) AS Distance FROM scenicSpots s, cities c WHERE s.level = '5A' AND c.name = '北京市' ORDER BY Distance DESC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism26",
        "sql":"SELECT Distance(a.Location, b.Location, 1) as distance FROM scenicSpots a, scenicSpots b WHERE a.name = '北海公园' AND b.name = '恭王府'"
    },
    {
        "db_id":"tourism",
        "id":"tourism27",
        "sql":"SELECT b.name, Distance(a.Location, b.Location, 1) as Distance FROM scenicSpots a INNER JOIN scenicSpots b ON a.name = '八大处公园' AND b.level = '5A' AND b.name != '八大处公园' ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"tourism",
        "id":"tourism28",
        "sql":"SELECT cities.name FROM airports INNER JOIN cities ON Contains(cities.Shape, airports.Location) WHERE airports.Name = '阿克苏/温宿'"
    },
    {
        "db_id":"tourism",
        "id":"tourism29",
        "sql":"SELECT address FROM scenicSpots WHERE name = '天台山景区'"
    },
    {
        "db_id":"tourism",
        "id":"tourism30",
        "sql":"SELECT t.city, COUNT(s.name) AS NumberOf5A_ScenicSpots FROM tours t LEFT JOIN scenicSpots s ON s.address LIKE '%' || t.city || '%' WHERE t.year = 2020 AND s.level = '5A' GROUP BY t.city ORDER BY t.international_tourists_number_Wan DESC LIMIT 10"
    },
    {
        "db_id":"tourism",
        "id":"tourism31",
        "sql":"SELECT c.province, SUM(t.Domestic_Tourism_Earnings_Wan_Yuan) AS Domestic_Tourism_Earnings_2020 FROM cities c JOIN tours t ON c.name = t.city WHERE t.year = 2020 AND c.province IN ('辽宁省', '吉林省', '黑龙江省') GROUP BY c.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism32",
        "sql":"SELECT b.province, Area(b.Shape, 1) FROM GDPs a INNER JOIN cities b ON a.province = b.province WHERE a.year_2023 > (SELECT year_2023 FROM GDPs WHERE province = '浙江省') GROUP BY b.province"
    },
    {
        "db_id":"tourism",
        "id":"tourism33",
        "sql":"SELECT city, star_hotel_number FROM tours WHERE year = 2020 ORDER BY star_hotel_number DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic01",
        "sql":"SELECT distance FROM buslines WHERE name = '874路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic02",
        "sql":"SELECT name, MAX(distance) as longest_distance FROM buslines"
    },
    {
        "db_id":"traffic",
        "id":"traffic03",
        "sql":"SELECT buslines.name, buslines.start_stop, buslines.end_stop, buslines.distance FROM buslines ORDER BY buslines.distance DESC LIMIT 10"
    },
    {
        "db_id":"traffic",
        "id":"traffic04",
        "sql":"SELECT Name, SUM(length) AS TotalLength FROM roads WHERE pyname IN (SELECT pyname FROM roads INNER JOIN districts ON Intersects(roads.Shape, districts.Shape) WHERE districts.name = '南京市') GROUP BY Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic05",
        "sql":"SELECT Name, MAX(length) AS MaxLength FROM roads WHERE Name IN (SELECT Name FROM roads INNER JOIN districts ON Intersects(roads.Shape, districts.Shape) = 1 WHERE districts.name = '南京市') GROUP BY Name ORDER BY MaxLength DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic06",
        "sql":"SELECT SUM(Shape_Area) FROM greenspaces INNER JOIN districts ON Contains(districts.Shape, greenspaces.Shape) WHERE districts.name = '南京市'"
    },
    {
        "db_id":"traffic",
        "id":"traffic07",
        "sql":"SELECT NAME, SUM(Shape_Area) FROM greenspaces WHERE NAME IN (SELECT NAME FROM greenspaces INNER JOIN districts ON Intersects(greenspaces.Shape, districts.Shape) WHERE districts.name = '南京市') GROUP BY NAME"
    },
    {
        "db_id":"traffic",
        "id":"traffic08",
        "sql":"SELECT NAME, SUM(Shape_Area) as Total_Area FROM greenspaces WHERE NAME IN (SELECT NAME FROM greenspaces INNER JOIN districts ON Contains(districts.Shape, greenspaces.Shape) WHERE districts.name = '南京市') GROUP BY NAME ORDER BY Total_Area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic09",
        "sql":"SELECT SUM(Shape_Area) FROM greenspaces WHERE NAME = '玄武湖公园'"
    },
    {
        "db_id":"traffic",
        "id":"traffic10",
        "sql":"SELECT districts.name, Sum(Area(Intersection(greenspaces.Shape, districts.Shape))) AS Total_Green_Area FROM greenspaces INNER JOIN districts ON Intersects(greenspaces.Shape, districts.Shape) WHERE districts.name LIKE '南京市%' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic11",
        "sql":"SELECT districts.name, Sum(Area(Intersection(greenspaces.Shape, districts.Shape))) AS total_green_area FROM greenspaces, districts WHERE Intersects(greenspaces.Shape, districts.Shape) AND districts.name LIKE '%南京市%' GROUP BY districts.name ORDER BY total_green_area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic12",
        "sql":"SELECT Line, COUNT(*) as NumberOfStations FROM subwaystations GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic13",
        "sql":"SELECT Line, COUNT(station) AS NumberOfStations FROM subwaystations WHERE address LIKE '%南京市%' GROUP BY Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic14",
        "sql":"SELECT name FROM buslines WHERE start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic15",
        "sql":"SELECT hotels.NAME, Distance(busstops.Location, hotels.Location, 1) as distance FROM busstops INNER JOIN hotels ON Distance(busstops.Location, hotels.Location, 1) < 5000 WHERE busstops.name = '三元巷' ORDER BY distance ASC LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic16",
        "sql":"SELECT Line, COUNT(*) AS StationCount FROM subwaystations GROUP BY Line ORDER BY StationCount DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic17",
        "sql":"SELECT subways.Line, COUNT(DISTINCT districts.name) FROM subways JOIN subwaystations ON subways.Line = subwaystations.Line JOIN districts ON Contains(districts.Shape, subwaystations.Location) GROUP BY subways.Line"
    },
    {
        "db_id":"traffic",
        "id":"traffic18",
        "sql":"SELECT GLength(Shape) AS Length FROM subways WHERE Line = 'line4'"
    },
    {
        "db_id":"traffic",
        "id":"traffic19",
        "sql":"SELECT distinct s2.Line FROM subways s1 JOIN subways s2 ON Intersects(s1.Shape, s2.Shape) = 1 WHERE s1.Line = 'line10二期' AND s2.Line != 'line10二期'"
    },
    {
        "db_id":"traffic",
        "id":"traffic20",
        "sql":"SELECT SUM(GLength(Shape)) FROM subways INNER JOIN subwaystations ON subways.Line = subwaystations.Line WHERE subwaystations.adcode LIKE '3201%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic21",
        "sql":"SELECT subwaystations.station, Distance(agencies.Location, subwaystations.Location, 1) as distance FROM agencies INNER JOIN subwaystations ON agencies.name = '南京市文物局' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic22",
        "sql":"SELECT hotels.NAME, Distance(hotels.Location, subwaystations.Location) AS Distance FROM hotels INNER JOIN subwaystations ON Distance(hotels.Location, subwaystations.Location) < 1000 WHERE subwaystations.station = '鼓楼' AND subwaystations.Line = 'line4'"
    },
    {
        "db_id":"traffic",
        "id":"traffic23",
        "sql":"SELECT subwaystations.station FROM subwaystations JOIN ( SELECT Intersection(buslines_874.Shape, buslines_711.Shape) AS IntersectionPoint FROM buslines AS buslines_874 JOIN buslines AS buslines_711 ON buslines_874.name = '874路' AND buslines_711.name = '711路' ) AS IntersectionLines ON Distance(IntersectionLines.IntersectionPoint, subwaystations.Location) = ( SELECT MIN(Distance(IntersectionLines.IntersectionPoint, subwaystations.Location)) FROM subwaystations ) LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic24",
        "sql":"SELECT subwaystations.station, MIN(Distance(Intersection(roads_a.Shape, roads_b.Shape), subwaystations.Location, 1)) AS distance FROM roads AS roads_a JOIN roads AS roads_b ON roads_a.Name = '秦淮路' AND roads_b.Name = '将军大道' JOIN subwaystations ON Intersects(roads_a.Shape, roads_b.Shape) = 1 ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic25",
        "sql":"SELECT rails.Name, SUM(GLength(rails.Shape)) AS TotalLength FROM rails JOIN districts ON Intersects(rails.Shape, districts.Shape) WHERE districts.name = '南京市' GROUP BY rails.Name"
    },
    {
        "db_id":"traffic",
        "id":"traffic26",
        "sql":"SELECT Name, SUM(Shape_Length) AS Length FROM rails INNER JOIN districts ON Intersects(rails.Shape, districts.Shape) WHERE districts.name = '南京市' GROUP BY Name ORDER BY Length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic27",
        "sql":"SELECT SUM(GLength(rails.Shape)) FROM rails INNER JOIN districts ON Intersects(districts.Shape, rails.Shape) WHERE districts.name = '南京市'"
    },
    {
        "db_id":"traffic",
        "id":"traffic28",
        "sql":"SELECT districts.name, COUNT(*) AS NumberOfAgencies FROM districts JOIN agencies ON Contains(districts.Shape, agencies.Location) GROUP BY districts.name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic29",
        "sql":"SELECT districts.name FROM subwaystations INNER JOIN districts ON subwaystations.adcode = districts.administrative_division_code WHERE subwaystations.station = '大行宫'"
    },
    {
        "db_id":"traffic",
        "id":"traffic30",
        "sql":"SELECT districts.name FROM agencies INNER JOIN districts ON Contains(districts.Shape, agencies.Location) WHERE agencies.NAME = '江苏省海事局'"
    },
    {
        "db_id":"traffic",
        "id":"traffic31",
        "sql":"SELECT name, Area(Shape, 1) as area FROM districts WHERE name LIKE '南京市%' ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic32",
        "sql":"SELECT name, Shape_Area FROM districts WHERE name LIKE '南京市%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic33",
        "sql":"SELECT districts.name, COUNT(DISTINCT subways.Line) FROM districts JOIN subwaystations ON districts.administrative_division_code = subwaystations.adcode JOIN subways ON subwaystations.Line = subways.Line WHERE districts.name LIKE '南京市%' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic34",
        "sql":"SELECT hotels.NAME FROM hotels INNER JOIN roads ON Distance(hotels.Location, roads.Shape, 1) < 1000 WHERE roads.Name = '广州路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic35",
        "sql":"SELECT subwaystations.station, Distance(agencies.Location, subwaystations.Location, 1) as distance FROM agencies INNER JOIN subwaystations ON agencies.name = '南京市房产局' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic36",
        "sql":"SELECT COUNT(DISTINCT subways.Line) FROM subways INNER JOIN districts ON Intersects(subways.Shape, districts.Shape) = 1 WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic37",
        "sql":"SELECT buslines.name FROM buslines INNER JOIN busstops ON buslines.start_stop = busstops.name WHERE busstops.name IN (SELECT name FROM busstops WHERE Location IN (SELECT Shape FROM districts WHERE name = '六合区')) AND buslines.start_time = '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic38",
        "sql":"SELECT districts.name, buslines.name FROM buslines JOIN busstops ON buslines.start_stop = busstops.name JOIN districts ON Contains(districts.Shape, busstops.Location) WHERE buslines.start_time < '0500'"
    },
    {
        "db_id":"traffic",
        "id":"traffic39",
        "sql":"SELECT subwaystations.station, Distance(buslines.Shape, subwaystations.Location, 1) AS distance FROM buslines JOIN subwaystations ON Distance(buslines.Shape, subwaystations.Location, 1) IS NOT NULL WHERE buslines.name = '709路' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic40",
        "sql":"SELECT h.NAME, Distance(a.Location, h.Location, 1) AS Distance FROM agencies a INNER JOIN hotels h ON Distance(a.Location, h.Location, 1) < 500 WHERE a.NAME = '南京市文物局' ORDER BY Distance ASC LIMIT 5"
    },
    {
        "db_id":"traffic",
        "id":"traffic41",
        "sql":"SELECT buslines.name FROM buslines INNER JOIN roads ON Intersects(buslines.Shape, roads.Shape) WHERE roads.Name = '建康路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic42",
        "sql":"SELECT districts.name, COUNT(*) AS NumberOfAgencies FROM districts JOIN agencies ON Contains(districts.Shape, agencies.Location) GROUP BY districts.name ORDER BY COUNT(*) DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic43",
        "sql":"SELECT hotels.NAME, MIN(Distance(hotels.Location, subwaystations.Location)) AS distance FROM hotels INNER JOIN subwaystations ON subwaystations.station = '南京南站' INNER JOIN districts ON districts.name = '江宁区' AND Within(hotels.Location, districts.Shape) = 1 ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic44",
        "sql":"SELECT districts.name, SUM(GLength(Intersection(districts.Shape, subways.Shape))) AS SubwayLength FROM districts INNER JOIN subways ON Intersects(districts.Shape, subways.Shape) = 1 WHERE districts.name LIKE '南京市%' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic45",
        "sql":"SELECT districts.name, SUM(GLength(Intersection(subways.Shape, districts.Shape))) AS total_length FROM districts JOIN subways ON Intersects(districts.Shape, subways.Shape) WHERE districts.name LIKE '%南京市%' GROUP BY districts.name ORDER BY total_length DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic46",
        "sql":"SELECT DISTINCT subways.Line FROM subways INNER JOIN districts ON Intersects(subways.Shape, districts.Shape) = 1 WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic47",
        "sql":"SELECT distinct districts.name FROM districts INNER JOIN rails ON Intersects(districts.Shape, rails.Shape) WHERE districts.name LIKE '南京市%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic48",
        "sql":"SELECT COUNT(*) FROM hotels INNER JOIN districts ON Contains(districts.Shape, hotels.Location) WHERE districts.name = '玄武区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic49",
        "sql":"SELECT COUNT(hotels.NAME) FROM hotels INNER JOIN subways ON DistanceSphere(subways.Shape, hotels.Location) <= 500 WHERE subways.Line = 'S7'"
    },
    {
        "db_id":"traffic",
        "id":"traffic50",
        "sql":"SELECT DISTINCT districts.name FROM greenspaces INNER JOIN districts ON Intersects(districts.Shape, greenspaces.Shape) = 1 WHERE greenspaces.NAME = '钟山风景区'"
    },
    {
        "db_id":"traffic",
        "id":"traffic51",
        "sql":"SELECT subwaystations.station, min(Distance(greenspaces.Shape, subwaystations.Location, 1)) as distance FROM greenspaces INNER JOIN subwaystations WHERE greenspaces.NAME = '郑和公园' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic52",
        "sql":"SELECT greenspaces.NAME FROM greenspaces INNER JOIN subwaystations ON greenspaces.NAME LIKE '%公园%' WHERE subwaystations.station = '上海路' ORDER BY Distance(subwaystations.Location, greenspaces.Shape, 1) ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic53",
        "sql":"SELECT Sum(Area(Intersection(districts.Shape, rivers.Shape), 1)) FROM districts INNER JOIN rivers ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE districts.name = '南京市' AND rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic54",
        "sql":"SELECT DISTINCT subways.Line FROM subways INNER JOIN rivers ON Intersects(subways.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic55",
        "sql":"SELECT distinct districts.name FROM rivers INNER JOIN districts ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE rivers.Name = '长江' AND districts.name LIKE '%南京%'"
    },
    {
        "db_id":"traffic",
        "id":"traffic56",
        "sql":"SELECT districts.name, Sum(Area(Intersection(districts.Shape, rivers.Shape), 1)) AS JiangArea FROM districts INNER JOIN rivers ON Intersects(districts.Shape, rivers.Shape) = 1 WHERE rivers.name = '长江' AND districts.name LIKE '南京%' GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic57",
        "sql":"SELECT distinct subwaystations.station FROM subwaystations JOIN rivers ON DWithin(subwaystations.Location, rivers.Shape, 1000) WHERE rivers.Name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic58",
        "sql":"SELECT DISTINCT buslines.name FROM buslines INNER JOIN rivers ON Intersects(buslines.Shape, rivers.Shape) = 1 WHERE rivers.name = '长江'"
    },
    {
        "db_id":"traffic",
        "id":"traffic59",
        "sql":"SELECT hotels.NAME FROM hotels JOIN rivers ON rivers.Name = '长江' ORDER BY Distance(hotels.Location, rivers.Shape) ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic60",
        "sql":"SELECT hotels.NAME, MIN(Distance(agencies.Location, hotels.Location, 1)) AS distance FROM agencies INNER JOIN hotels WHERE agencies.NAME = '高淳县教育局委员会' ORDER BY distance LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic61",
        "sql":"SELECT greenspaces.NAME, MIN(Distance(subways.Shape, greenspaces.Shape, 1)) AS Distance FROM greenspaces INNER JOIN subways ON subways.Line = 'line1' WHERE greenspaces.NAME LIKE '%公园%' GROUP BY greenspaces.NAME ORDER BY Distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic62",
        "sql":"SELECT districts.name, COUNT(*) FROM districts INNER JOIN subwaystations ON districts.administrative_division_code = subwaystations.adcode GROUP BY districts.name"
    },
    {
        "db_id":"traffic",
        "id":"traffic63",
        "sql":"SELECT districts.name, COUNT(*) AS station_count FROM districts JOIN subwaystations ON districts.administrative_division_code = subwaystations.adcode GROUP BY districts.name ORDER BY station_count DESC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic64",
        "sql":"SELECT Line, max(GLength(Shape, 1)) as length from subways inner join subwaystations on subways.Line = subwaystations.Line where subwaystations.address like '%南京市%' group by subways.Line order by length desc limit 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic65",
        "sql":"SELECT distinct roads.Name FROM roads AS r1 INNER JOIN roads AS r2 ON Intersects(r1.Shape, r2.Shape) = 1 WHERE r1.Name = '东风路' AND r2.Name != '东风路'"
    },
    {
        "db_id":"traffic",
        "id":"traffic66",
        "sql":"SELECT subwaystations.station, MIN(Distance(hotels.Location, subwaystations.Location, 1)) AS distance FROM hotels INNER JOIN subwaystations ON hotels.NAME = '金龙大酒店' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"traffic",
        "id":"traffic67",
        "sql":"SELECT name, Shape_Area FROM districts WHERE name IN ('玄武区', '秦淮区')"
    }
]