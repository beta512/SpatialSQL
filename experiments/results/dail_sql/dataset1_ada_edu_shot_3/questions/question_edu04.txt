/* Some SQL examples are provided based on similar problems: */
/* Answer the following: 北京市都有哪些机场？ */
Select airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'

/* Answer the following: 广州路一公里范围内有哪些宾馆？ */
Select distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'

/* Answer the following: 天台山位于哪个城市？ */
Select cities.name  from cities inner join ScenicSpots On Contains(cities.Shape, ScenicSpots.Location) = 1 where ScenicSpots.name = '天台山景区'

/* Given the following database schema: */
CREATE TABLE "cities" (
name TEXT PRIMARY KEY, 
administrative_division_code TEXT NOT NULL, 
administrative_division_category TEXT NOT NULL, 
POP2020 INTEGER NOT NULL, 
POP2010 INTEGER NOT NULL, 
POP2000 INTEGER NOT NULL, 
shape MULTIPOLYGON NOT NULL, 
province TEXT REFERENCES provinces (name), 
Shape_Area DOUBLE, 
Shape_Length DOUBLE)

CREATE TABLE "provinces" (
name TEXT PRIMARY KEY, 
pinyin_name TEXT NOT NULL, 
administrative_division_code TEXT NOT NULL, 
shape MULTIPOLYGON NOT NULL)

CREATE TABLE "universities" (
name TEXT PRIMARY KEY, 
academic_discipline_category TEXT NOT NULL, 
operation_type TEXT NOT NULL, 
educational_level TEXT NOT NULL, 
project_985 INTEGER NOT NULL, 
project_211 INTEGER NOT NULL, 
double_tops INTEGER NOT NULL, 
affiliation TEXT, 
address TEXT, 
location POINT NOT NULL, 
province TEXT REFERENCES provinces (name), 
city TEXT REFERENCES cities (name), 
CONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), 
CONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), 
CONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))


/* Answer the following with no explanation: 北京市的邻省有哪些？北京市以'北京市'为名称表示。 */
SELECT 