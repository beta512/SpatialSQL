[
    {
        "db_id":"ada",
        "id":"ada01",
        "sql":"SELECT SUM(Area) FROM lakes WHERE name = '太湖'"
    },
    {
        "db_id":"ada",
        "id":"ada02",
        "sql":"SELECT name FROM cities ORDER BY MbrMinY(shape) ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada03",
        "sql":"SELECT DISTINCT provinces.name FROM provinces JOIN lakes ON Intersects(provinces.shape, lakes.shape) WHERE lakes.name = '洞庭湖'"
    },
    {
        "db_id":"ada",
        "id":"ada04",
        "sql":"SELECT DISTINCT provinces.name FROM rivers INNER JOIN provinces ON Intersects(rivers.shape, provinces.shape) = 1 WHERE rivers.name = '长江'"
    },
    {
        "db_id":"ada",
        "id":"ada05",
        "sql":"SELECT SUM(GLength(Intersection(rivers.shape, provinces.shape, 1), 1)) AS YangtzeLengthInHubei FROM rivers JOIN provinces ON Intersects(rivers.shape, provinces.shape) WHERE rivers.name = '长江' AND provinces.name = '湖北省'"
    },
    {
        "db_id":"ada",
        "id":"ada06",
        "sql":"SELECT DISTINCT r.name FROM rivers r JOIN provinces p ON Intersects(r.shape, p.shape) = 1 WHERE p.name = '湖北省' AND r.level_river = 1"
    },
    {
        "db_id":"ada",
        "id":"ada07",
        "sql":"SELECT provinces.name, SUM(GLength(Intersection(rivers.shape, provinces.shape), 1)) AS TotalRiverLength FROM provinces JOIN rivers ON Intersects(rivers.shape, provinces.shape) GROUP BY provinces.name"
    },
    {
        "db_id":"ada",
        "id":"ada08",
        "sql":"SELECT name, Area(shape, 1) AS area FROM provinces ORDER BY area DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada09",
        "sql":"SELECT provinces.name, COUNT(*) AS city_count FROM cities JOIN provinces ON cities.province = provinces.name GROUP BY provinces.name"
    },
    {
        "db_id":"ada",
        "id":"ada10",
        "sql":"SELECT p.name, Area(p.shape, 1) AS area FROM provinces AS p, provinces AS gd WHERE gd.name = '广东省' AND Touches(p.shape, gd.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada11",
        "sql":"SELECT SUM(GLength(shape, 1)) FROM rails"
    },
    {
        "db_id":"ada",
        "id":"ada12",
        "sql":"SELECT SUM(GLength(shape, 1)) AS TotalLength FROM rails WHERE name = '京广线'"
    },
    {
        "db_id":"ada",
        "id":"ada13",
        "sql":"SELECT cities.name FROM cities JOIN provinces ON cities.province = provinces.name JOIN rails ON Intersects(rails.shape, cities.shape) WHERE rails.name = '京广线' AND provinces.name = '河南省'"
    },
    {
        "db_id":"ada",
        "id":"ada14",
        "sql":"SELECT DISTINCT cities.name FROM cities JOIN rails ON Intersects(cities.shape, rails.shape) GROUP BY cities.name"
    },
    {
        "db_id":"ada",
        "id":"ada15",
        "sql":"SELECT cities.name FROM cities LEFT JOIN rails ON Intersects(cities.shape, rails.shape) = 1 WHERE rails.objectID IS NULL GROUP BY cities.name"
    },
    {
        "db_id":"ada",
        "id":"ada16",
        "sql":"SELECT provinces.name, Area(provinces.shape, 1) AS area FROM provinces ORDER BY POPU DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada17",
        "sql":"SELECT SUM(Area(shape, 1)) FROM lakes WHERE level_lake = 1"
    },
    {
        "db_id":"ada",
        "id":"ada18",
        "sql":"SELECT name FROM provinces ORDER BY (GDP_2000 - GDP_1994) DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada19",
        "sql":"SELECT name, Area(shape, 1) AS area FROM provinces ORDER BY Pop_Minori DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada20",
        "sql":"SELECT DISTINCT rivers.name FROM rivers JOIN rails ON Intersects(rivers.shape, rails.shape) WHERE rivers.level_river = 1 GROUP BY rivers.name"
    },
    {
        "db_id":"ada",
        "id":"ada21",
        "sql":"SELECT name FROM airports JOIN provinces ON Within(airports.location, provinces.shape) WHERE provinces.name = '湖北省' ORDER BY Distance(airports.location, Centroid(provinces.shape)) LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada22",
        "sql":"SELECT DISTINCT r2.name FROM rails r1 JOIN rails r2 ON Intersects(r1.shape, r2.shape) WHERE r1.name = '盘西' AND r2.name != '盘西'"
    },
    {
        "db_id":"ada",
        "id":"ada23",
        "sql":"SELECT DISTINCT rivers.name FROM rivers JOIN provinces ON Intersects(rivers.shape, provinces.shape) = 1 WHERE provinces.name = '新疆维吾尔自治区'"
    },
    {
        "db_id":"ada",
        "id":"ada24",
        "sql":"SELECT SUM(GLength(Intersection(r.shape, p.shape), 1)) AS TotalRiverLength FROM rivers r, provinces p WHERE p.name = '新疆维吾尔自治区' AND Intersects(r.shape, p.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada25",
        "sql":"SELECT SUM(Area(shape, 1)) AS TotalArea, SUM(POPU) AS TotalPopulation FROM provinces WHERE name IN ('西藏自治区', '内蒙古自治区', '新疆维吾尔自治区', '广西壮族自治区', '宁夏回族自治区')"
    },
    {
        "db_id":"ada",
        "id":"ada26",
        "sql":"SELECT name, POPU FROM provinces WHERE name IN ('西藏自治区', '内蒙古自治区', '新疆维吾尔自治区', '广西壮族自治区', '宁夏回族自治区') ORDER BY Area(shape, 1) ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada27",
        "sql":"SELECT DISTINCT provinces.name FROM provinces JOIN rivers ON Intersects(provinces.shape, rivers.shape) WHERE rivers.name = '长江' INTERSECT SELECT DISTINCT provinces.name FROM provinces JOIN rivers ON Intersects(provinces.shape, rivers.shape) WHERE rivers.name = '黄河'"
    },
    {
        "db_id":"ada",
        "id":"ada28",
        "sql":"SELECT SUM(provinces.Pop_65Plus) AS Total_Population_Over_65 FROM provinces JOIN rivers ON Intersects(provinces.shape, rivers.shape) = 1 WHERE rivers.name = '长江' GROUP BY rivers.name"
    },
    {
        "db_id":"ada",
        "id":"ada29",
        "sql":"SELECT rails.name FROM rails JOIN rivers ON Intersects(rails.shape, rivers.shape) = 1 WHERE rivers.name = '长江' GROUP BY rails.name"
    },
    {
        "db_id":"ada",
        "id":"ada30",
        "sql":"SELECT SUM(Area(p.shape, 1)) FROM provinces p JOIN rivers r ON Intersects(p.shape, r.shape) WHERE r.name = '长江'"
    },
    {
        "db_id":"ada",
        "id":"ada31",
        "sql":"SELECT P.name, SUM(P.POPU) FROM provinces P JOIN rails R ON Intersects(P.shape, R.shape) WHERE R.name = '京广线' GROUP BY P.name"
    },
    {
        "db_id":"ada",
        "id":"ada32",
        "sql":"SELECT name FROM cities ORDER BY MbrMinX(shape) ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada33",
        "sql":"SELECT name FROM provinces ORDER BY XMax(shape) DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada34",
        "sql":"SELECT p.name AS province_name, r.name AS river_name, SUM(GLength(Intersection(r.shape, p.shape), 1)) AS total_length FROM rivers r JOIN provinces p ON Intersects(r.shape, p.shape) WHERE r.level_river = 1 GROUP BY p.name, r.name"
    },
    {
        "db_id":"ada",
        "id":"ada35",
        "sql":"SELECT provinces.name, COUNT(airports.name) AS airport_count FROM provinces JOIN cities ON provinces.administrative_divison_code = cities.administrative_division_code JOIN airports ON Within(airports.location, cities.shape) GROUP BY provinces.name"
    },
    {
        "db_id":"ada",
        "id":"ada36",
        "sql":"SELECT cities.name FROM airports JOIN cities ON Distance(airports.location, cities.shape, 1) <= 200000 WHERE airports.name = '安庆'"
    },
    {
        "db_id":"ada",
        "id":"ada37",
        "sql":"SELECT COUNT(*) FROM airports JOIN cities ON Contains(cities.shape, airports.location) WHERE cities.province IN ('河北省', '天津市', '北京市')"
    },
    {
        "db_id":"ada",
        "id":"ada38",
        "sql":"SELECT airports.name, Distance(cities.shape, airports.location, 1) AS distance FROM cities JOIN airports WHERE cities.name = '苏州市' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada39",
        "sql":"SELECT provinces.name, COUNT(airports.name) AS airport_count FROM provinces LEFT JOIN airports ON provinces.shape = airports.location GROUP BY provinces.name ORDER BY provinces.POPU DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada40",
        "sql":"SELECT distinct airports.name FROM rails INNER JOIN airports ON Distance(rails.shape, airports.location, 1) < 10000 WHERE rails.name = '京广线'"
    },
    {
        "db_id":"ada",
        "id":"ada41",
        "sql":"SELECT airports.name FROM airports, lakes, provinces WHERE lakes.name = '太湖' AND provinces.name = '江苏省' AND Within(airports.location, provinces.shape) ORDER BY Distance(lakes.shape, airports.location, 1) ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada42",
        "sql":"SELECT provinces.name, Area(provinces.shape, 1) AS area FROM provinces ORDER BY provinces.Pop_Female DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada43",
        "sql":"SELECT cities.name, COUNT(*) AS airport_count FROM airports JOIN cities ON Contains(cities.shape, airports.location) GROUP BY cities.name ORDER BY airport_count DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada44",
        "sql":"SELECT name, SUM(GLength(shape, 1)) AS total_length FROM rails GROUP BY name ORDER BY total_length DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada45",
        "sql":"SELECT provinces.name, COUNT(airports.name) AS airport_count FROM provinces LEFT JOIN airports ON Contains(provinces.shape, airports.location) GROUP BY provinces.name ORDER BY ABS(provinces.Pop_Male - provinces.Pop_Female) DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada46",
        "sql":"SELECT airports.name, Distance(lakes.shape, airports.location, 1) AS distance_in_meters FROM airports, lakes WHERE lakes.name = '太湖' AND Distance(lakes.shape, airports.location, 1) < 200000"
    },
    {
        "db_id":"ada",
        "id":"ada47",
        "sql":"SELECT name FROM cities WHERE province = '吉林省' ORDER BY MbrMaxY(shape) DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada48",
        "sql":"SELECT DISTINCT cities.name FROM cities JOIN rails ON Intersects(cities.shape, rails.shape) = 1 WHERE rails.name = '湘桂线'"
    },
    {
        "db_id":"ada",
        "id":"ada49",
        "sql":"SELECT GLength(Intersection((SELECT shape FROM provinces WHERE name = '河南省'), (SELECT shape FROM provinces WHERE name = '湖北省')), 1) AS BorderLength"
    },
    {
        "db_id":"ada",
        "id":"ada50",
        "sql":"SELECT cities.name FROM cities JOIN provinces ON Within(Centroid(provinces.shape), cities.shape) = 1 WHERE provinces.name = '湖北省'"
    },
    {
        "db_id":"ada",
        "id":"ada51",
        "sql":"SELECT p2.name, GLength(MakeLine(p1.shape, p2.shape), 1) AS boundary_length FROM provinces p1, provinces p2 WHERE p1.name = '河南省' AND p1.name != p2.name AND Touches(p1.shape, p2.shape) ORDER BY boundary_length DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada52",
        "sql":"SELECT name, MIN(Distance(a.location, Boundary(p1.shape), 1)) AS distance FROM airports a, provinces p1, provinces p2 WHERE p1.name = '河南省' AND p2.name = '湖北省' AND Intersects(p1.shape, p2.shape) GROUP BY a.name ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada53",
        "sql":"SELECT provinces.name FROM provinces WHERE NOT Intersects(Centroid(provinces.shape), provinces.shape)"
    },
    {
        "db_id":"ada",
        "id":"ada54",
        "sql":"SELECT SUM(length) AS TotalLength FROM rivers WHERE name = '长江' UNION SELECT SUM(length) AS TotalLength FROM rivers WHERE name = '黄河'"
    },
    {
        "db_id":"ada",
        "id":"ada55",
        "sql":"SELECT provinces.name, COUNT(*) AS city_count FROM cities JOIN provinces ON cities.province = provinces.name GROUP BY provinces.name ORDER BY city_count DESC LIMIT 1"
    },
    {
        "db_id":"ada",
        "id":"ada56",
        "sql":"SELECT DISTINCT p.name FROM provinces p JOIN rivers r ON Intersects(p.shape, r.shape) = 1 JOIN rails rl ON Intersects(r.shape, rl.shape) = 1 WHERE r.name = '黄河' AND rl.name = '京广线'"
    },
    {
        "db_id":"edu",
        "id":"edu01",
        "sql":"SELECT COUNT(*) FROM universities WHERE city = '北京市'"
    },
    {
        "db_id":"edu",
        "id":"edu02",
        "sql":"SELECT provinces.name, COUNT(universities.name) AS university_count FROM provinces LEFT JOIN universities ON provinces.name = universities.province GROUP BY provinces.name"
    },
    {
        "db_id":"edu",
        "id":"edu03",
        "sql":"SELECT cities.name, Area(cities.shape, 1) AS city_area FROM cities JOIN provinces ON cities.province = provinces.name WHERE provinces.name = '河北省'"
    },
    {
        "db_id":"edu",
        "id":"edu04",
        "sql":"SELECT provinces.name FROM provinces JOIN cities ON Touches(provinces.shape, cities.shape) WHERE cities.name = '北京市'"
    },
    {
        "db_id":"edu",
        "id":"edu05",
        "sql":"SELECT provinces.name, COUNT(universities.name) AS university_count FROM provinces JOIN cities ON Intersects(provinces.shape, cities.shape) LEFT JOIN universities ON universities.province = provinces.name WHERE cities.name = '北京市' GROUP BY provinces.name"
    },
    {
        "db_id":"edu",
        "id":"edu06",
        "sql":"SELECT Area(shape, 1) AS ProvinceArea FROM provinces WHERE name = '湖北省'"
    },
    {
        "db_id":"edu",
        "id":"edu07",
        "sql":"SELECT SUM(POP2020) FROM cities WHERE province = '湖北省'"
    },
    {
        "db_id":"edu",
        "id":"edu08",
        "sql":"SELECT name FROM universities WHERE project_211 = 1 ORDER BY MbrMinX(location) ASC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu09",
        "sql":"SELECT SUM(POP2020) - SUM(POP2000) FROM cities WHERE province = '湖北省'"
    },
    {
        "db_id":"edu",
        "id":"edu10",
        "sql":"SELECT name FROM universities WHERE province = '湖北省' AND (project_985 = 1 OR project_211 = 1)"
    },
    {
        "db_id":"edu",
        "id":"edu11",
        "sql":"SELECT name FROM cities WHERE province = '湖北省' ORDER BY Shape_Area DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu12",
        "sql":"SELECT name, Area(shape, 1) AS city_area FROM cities WHERE province = '内蒙古自治区'"
    },
    {
        "db_id":"edu",
        "id":"edu13",
        "sql":"SELECT provinces.name, COUNT(universities.name) AS key_universities_count FROM provinces JOIN universities ON provinces.name = universities.province WHERE universities.project_985 = 1 OR universities.project_211 = 1 GROUP BY provinces.name"
    },
    {
        "db_id":"edu",
        "id":"edu14",
        "sql":"SELECT SUM(Area(shape, 1)) FROM provinces WHERE name IN ('北京市', '天津市', '河北省')"
    },
    {
        "db_id":"edu",
        "id":"edu15",
        "sql":"SELECT name FROM provinces ORDER BY MbrMinX(shape) ASC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu16",
        "sql":"SELECT Distance(Centroid(c.shape), Centroid(p.shape), 1) AS DistanceInMeters FROM cities c, provinces p WHERE c.name = '郑州市' AND p.name = '河南省'"
    },
    {
        "db_id":"edu",
        "id":"edu17",
        "sql":"SELECT c.name FROM cities c JOIN cities anyang ON anyang.name = '安阳市' JOIN provinces henan ON henan.name = '河南省' WHERE Touches(c.shape, anyang.shape) = 1 AND c.province != henan.name"
    },
    {
        "db_id":"edu",
        "id":"edu18",
        "sql":"SELECT name, Shape_Area FROM cities WHERE administrative_division_category != '直辖市' ORDER BY POP2020 DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu19",
        "sql":"SELECT distinct universities.name FROM universities WHERE Distance( (SELECT location FROM universities WHERE name = '北京大学'), universities.location, 1 ) < 3000 AND universities.project_985 = 1 AND universities.name != '北京大学'"
    },
    {
        "db_id":"edu",
        "id":"edu20",
        "sql":"SELECT SUM(POP2020) FROM cities WHERE province IN ('北京市', '天津市', '河北省')"
    },
    {
        "db_id":"edu",
        "id":"edu21",
        "sql":"SELECT name, POP2020 FROM cities WHERE province = '内蒙古自治区'"
    },
    {
        "db_id":"edu",
        "id":"edu22",
        "sql":"SELECT name FROM provinces WHERE name NOT IN (SELECT DISTINCT provinces.name FROM provinces JOIN universities ON provinces.name = universities.province WHERE universities.project_985 = 1)"
    },
    {
        "db_id":"edu",
        "id":"edu23",
        "sql":"SELECT cities.name FROM cities JOIN universities ON cities.name = universities.city WHERE universities.project_985 = 1 OR universities.project_211 = 1 GROUP BY cities.name"
    },
    {
        "db_id":"edu",
        "id":"edu24",
        "sql":"SELECT cities.name FROM cities JOIN universities ON cities.name = universities.city WHERE universities.project_985 = 1 AND universities.project_211 = 1 GROUP BY cities.name"
    },
    {
        "db_id":"edu",
        "id":"edu25",
        "sql":"SELECT name FROM cities WHERE administrative_division_category = '地级市' AND name NOT IN (SELECT city FROM universities WHERE project_985 = 1)"
    },
    {
        "db_id":"edu",
        "id":"edu26",
        "sql":"SELECT name FROM provinces p1 WHERE NOT EXISTS ( SELECT 1 FROM provinces p2 WHERE p1.name != p2.name AND Touches(p1.shape, p2.shape) = 1 )"
    },
    {
        "db_id":"edu",
        "id":"edu27",
        "sql":"SELECT provinces.name, COUNT(DISTINCT other_provinces.name) AS bordering_provinces_count FROM provinces JOIN provinces AS other_provinces ON Touches(provinces.shape, other_provinces.shape) = 1 WHERE provinces.name != other_provinces.name GROUP BY provinces.name"
    },
    {
        "db_id":"edu",
        "id":"edu28",
        "sql":"SELECT u.name, Distance(c.shape, u.location, 1) AS distance FROM cities c JOIN universities u ON c.name = u.city WHERE c.name = '北京市' AND u.project_985 = 1 AND u.name <> '北京大学' ORDER BY distance ASC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu29",
        "sql":"SELECT u.name, Distance(c.shape, u.location, 1) AS distance FROM universities u JOIN cities c ON u.city = c.name WHERE (u.project_985 = 1 OR u.project_211 = 1) AND u.name != '北京大学' AND c.name = '北京市' ORDER BY distance ASC LIMIT 5"
    },
    {
        "db_id":"edu",
        "id":"edu30",
        "sql":"SELECT COUNT(*) FROM universities WHERE province = '湖北省' AND affiliation = '教育部'"
    },
    {
        "db_id":"edu",
        "id":"edu31",
        "sql":"SELECT c.name FROM cities c JOIN provinces p ON c.province = p.name WHERE p.name = '河南省' AND NOT EXISTS ( SELECT 1 FROM cities c2 JOIN provinces p2 ON c2.province = p2.name WHERE p2.name != '河南省' AND Touches(c.shape, c2.shape) )"
    },
    {
        "db_id":"edu",
        "id":"edu32",
        "sql":"SELECT cities.name FROM cities JOIN provinces ON cities.province = provinces.name WHERE provinces.name = '河南省' AND EXISTS ( SELECT 1 FROM cities AS other_cities JOIN provinces AS other_provinces ON other_cities.province = other_provinces.name WHERE other_provinces.name != '河南省' AND Touches(cities.shape, other_cities.shape) )"
    },
    {
        "db_id":"edu",
        "id":"edu33",
        "sql":"SELECT name FROM cities WHERE POP2020 = (SELECT MAX(POP2020) FROM cities WHERE Touches(shape, (SELECT shape FROM cities WHERE name = '郑州市')))"
    },
    {
        "db_id":"edu",
        "id":"edu34",
        "sql":"SELECT Unfortunately, the SRID (Spatial Reference System Identifier) used for the 'universities' table is not directly provided in the schema information you've shared. To determine the SRID used for the 'location' column in the 'universities' table, you would typically use a query like the following: SELECT SRID(location) FROM universities LIMIT 1 This query returns the SRID of the 'location' geometry column from the first row of the 'universities' table. If you need the SRID for all entries to ensure consistency, you might consider checking if the SRID is the same across all entries or set explicitly during the table creation, which is not shown in the provided schema."
    },
    {
        "db_id":"edu",
        "id":"edu35",
        "sql":"SELECT provinces.name, COUNT(*) AS Private_Universities_Count FROM universities JOIN provinces ON universities.province = provinces.name WHERE universities.operation_type = '民办' GROUP BY provinces.name"
    },
    {
        "db_id":"edu",
        "id":"edu36",
        "sql":"SELECT COUNT(*) FROM universities INNER JOIN provinces ON universities.province = provinces.name WHERE provinces.name = '河北省' AND universities.name LIKE '%职业%'"
    },
    {
        "db_id":"edu",
        "id":"edu37",
        "sql":"SELECT provinces.name FROM provinces JOIN universities ON provinces.name = universities.province WHERE universities.name LIKE '中国%' GROUP BY provinces.name"
    },
    {
        "db_id":"edu",
        "id":"edu38",
        "sql":"SELECT provinces.name, universities.name FROM universities JOIN provinces ON universities.province = provinces.name WHERE universities.name LIKE '中国%'"
    },
    {
        "db_id":"edu",
        "id":"edu39",
        "sql":"SELECT name FROM cities WHERE province = '河北省' ORDER BY POP2020 DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu40",
        "sql":"SELECT POP2020 FROM cities WHERE province = '湖北省' ORDER BY Shape_Area DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu41",
        "sql":"SELECT cities.name, COUNT(universities.name) AS university_count FROM cities LEFT JOIN universities ON cities.name = universities.city WHERE cities.province = '湖北省' GROUP BY cities.name ORDER BY Area(cities.shape, 1) DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu42",
        "sql":"SELECT city, COUNT(*) AS university_count FROM universities WHERE province = '江苏省' AND (project_985 = 1 OR project_211 = 1) GROUP BY city ORDER BY university_count DESC LIMIT 1"
    },
    {
        "db_id":"edu",
        "id":"edu43",
        "sql":"SELECT (Area((SELECT shape FROM provinces WHERE name = '内蒙古自治区'), 1) - Area((SELECT shape FROM provinces WHERE name = '河北省'), 1)) AS area_difference"
    },
    {
        "db_id":"edu",
        "id":"edu44",
        "sql":"SELECT provinces.name, COUNT(*) AS num_universities FROM universities JOIN provinces ON universities.province = provinces.name WHERE universities.affiliation = '国家民委' GROUP BY provinces.name ORDER BY num_universities DESC"
    }
]