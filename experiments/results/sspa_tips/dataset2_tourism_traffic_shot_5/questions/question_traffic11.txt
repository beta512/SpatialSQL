You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.

In SpatiLite,
	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.
	The function Area( s Surface , 1) returns the area of s, measured in meters.
	The function GLength( c Curve , 1) returns the length of c, measured in meters.
	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.

	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。
	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。

/* Some SQL examples are provided based on similar problems: */
/* Answer the following: 中国面积最大的省份是哪一个？它的面积是多少？ */
Select name, Area(Shape, 1) as area from provinces order by area desc limit 1

/* Answer the following: 湖北省面积最大的城市是哪个？只需给出城市的名字。 */
Select cities.name from provinces inner join cities on Contains(provinces.Shape, cities.Shape) = 1 where provinces.name = '湖北省' order by Area(cities.Shape, 1) desc limit 1

/* Answer the following: 我想了解京津冀地区的总面积是多少。  */
Select Sum(Area(provinces.Shape, 1)) from provinces where provinces.name = '北京市' or provinces.name = '天津市' or provinces.name = '河北省'

/* Answer the following: 我想了解河北省各城市的面积。 */
Select cities.name, Area(cities.Shape, 1) from provinces inner join cities on Contains(provinces.Shape, cities.Shape) = 1 where provinces.name = '河北省'

/* Answer the following: 与广东省接壤的省份有哪些？每个省的面积是多少？ */
Select b.name , Area(b.Shape, 1) from provinces a inner join provinces b On Touches(a.Shape, b.Shape) = 1 where a.name = '广东省'

/* Given the following database schema: */
CREATE TABLE "agencies" (
NAME TEXT PRIMARY KEY,
KIND TEXT,
Location POINT)

表"agencies"记录了南京市各政府机构的信息。

CREATE TABLE "buslines" (
lineID TEXT PRIMARY KEY,
name TEXT UNIQUE,
type TEXT,
start_stop TEXT,
end_stop TEXT,
start_time TEXT,
end_time TEXT, 
Shape LINESTRING,
foreign key (start_stop) references busstops (name),
foreign key (end_stop) references busstops (name))

表"buslines"记录了南京市各公交线路的信息。

CREATE TABLE "busstops" (
stopID TEXT PRIMARY KEY,
name TEXT Unique,
X DOUBLE,
Y DOUBLE,
lineIDs TEXT, 
Location POINT)

表"busstops"记录了南京市各公交站点的信息。

CREATE TABLE "districts" (
name TEXT PRIMARY KEY,
administrative_division_code TEXT Unique,
ENG_NAME TEXT, 
Shape POLYGON)

表"districts"记录了南京市各区的信息。

CREATE TABLE "greenspaces" (
PK_UID INTEGER PRIMARY KEY AUTOINCREMENT,
NAME TEXT,
KIND TEXT,
Shape_Leng DOUBLE,
Shape POLYGON)

表"greenspaces"记录南京市各块绿地的信息；绿地包含公园、风景名胜、旅游景点等。

CREATE TABLE "hotels" (
NAME TEXT PRIMARY KEY,
KIND TEXT, 
Location POINT)

表"hotels"记录南京市内各个宾馆的信息。

CREATE TABLE "rails" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
fclass TEXT,
Shape MULTILINESTRING)

表"rails"记录南京市内各段铁路的信息。

CREATE TABLE "rivers" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
fclass TEXT,
Shape MULTIPOLYGON)

表"rivers"记录南京市各个水系的信息；水系包含湖泊、河流、水库等。

CREATE TABLE "roads" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
pyname TEXT,
kind_num INTEGER,
kind TEXT,
width INTEGER,
speedclass INTEGER, 
Shape LINESTRING)

表"roads"记录南京市内各段道路的信息。

CREATE TABLE "subways" (
Line TEXT PRIMARY KEY,
Shape LINESTRING)

表"subways"记录南京市内各条地铁线的信息。

CREATE TABLE "subwaystations" (
station TEXT,
Line TEXT,
address TEXT,
Location POINT,
primary key(station, Line),
foreign key(Line) references subways(Line))

表"subwaystations"记录南京市各个地铁站点的信息。


/* Answer the following with no explanation: 南京市绿地面积最大的区是哪一个？其绿地面积是多少？应计算绿地与各区交叠部分的面积。 */
SELECT 