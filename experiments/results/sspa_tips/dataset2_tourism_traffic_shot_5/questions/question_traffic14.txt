You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.

In SpatiLite,
	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.
	The function Area( s Surface , 1) returns the area of s, measured in meters.
	The function GLength( c Curve , 1) returns the length of c, measured in meters.
	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.

	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。
	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。

/* Some SQL examples are provided based on similar problems: */
/* Answer the following: 京广线方圆10千米内有哪些机场？ */
Select distinct airports.name from airports inner join rails On Distance(airports.Location, rails.Shape, 1) < 10 * 1000 where rails.name = '京广线'

/* Answer the following: 安庆机场方圆200千米内有哪些城市？ */
Select cities.name from cities inner join airports On Distance(Shape, Location, 1) < 200 * 1000 where airports.name = '安庆'

/* Answer the following: 京广线沿线各省份的人口各是多少？京广线是由名字相同的各铁路段组成。 */
Select name, Pop_Urban from provinces where name in (Select distinct provinces.name from provinces inner join rails On Intersects(provinces.Shape, rails.Shape) = 1 where rails.name = '京广线')

/* Answer the following: 湖北省内哪个机场距离省中心最近？ */
Select airports.name from provinces inner join airports On Within(airports.Location, provinces.Shape) = 1 where provinces.name = '湖北省'  order by Distance(Centroid(provinces.Shape), airports.Location, 1) asc limit 1

/* Answer the following: 距离北京大学3000米以内的其它985大学有哪些？ */
Select a.name from universities a inner join universities b on Distance(a.Location, b.Location, 1) < 3000 where a.project_985 = 1 and b.name = '北京大学' and a.name != '北京大学'

/* Given the following database schema: */
CREATE TABLE "agencies" (
NAME TEXT PRIMARY KEY,
KIND TEXT,
Location POINT)

表"agencies"记录了南京市各政府机构的信息。

CREATE TABLE "buslines" (
lineID TEXT PRIMARY KEY,
name TEXT UNIQUE,
type TEXT,
start_stop TEXT,
end_stop TEXT,
start_time TEXT,
end_time TEXT, 
Shape LINESTRING,
foreign key (start_stop) references busstops (name),
foreign key (end_stop) references busstops (name))

表"buslines"记录了南京市各公交线路的信息。

CREATE TABLE "busstops" (
stopID TEXT PRIMARY KEY,
name TEXT Unique,
X DOUBLE,
Y DOUBLE,
lineIDs TEXT, 
Location POINT)

表"busstops"记录了南京市各公交站点的信息。

CREATE TABLE "districts" (
name TEXT PRIMARY KEY,
administrative_division_code TEXT Unique,
ENG_NAME TEXT, 
Shape POLYGON)

表"districts"记录了南京市各区的信息。

CREATE TABLE "greenspaces" (
PK_UID INTEGER PRIMARY KEY AUTOINCREMENT,
NAME TEXT,
KIND TEXT,
Shape_Leng DOUBLE,
Shape POLYGON)

表"greenspaces"记录南京市各块绿地的信息；绿地包含公园、风景名胜、旅游景点等。

CREATE TABLE "hotels" (
NAME TEXT PRIMARY KEY,
KIND TEXT, 
Location POINT)

表"hotels"记录南京市内各个宾馆的信息。

CREATE TABLE "rails" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
fclass TEXT,
Shape MULTILINESTRING)

表"rails"记录南京市内各段铁路的信息。

CREATE TABLE "rivers" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
fclass TEXT,
Shape MULTIPOLYGON)

表"rivers"记录南京市各个水系的信息；水系包含湖泊、河流、水库等。

CREATE TABLE "roads" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
pyname TEXT,
kind_num INTEGER,
kind TEXT,
width INTEGER,
speedclass INTEGER, 
Shape LINESTRING)

表"roads"记录南京市内各段道路的信息。

CREATE TABLE "subways" (
Line TEXT PRIMARY KEY,
Shape LINESTRING)

表"subways"记录南京市内各条地铁线的信息。

CREATE TABLE "subwaystations" (
station TEXT,
Line TEXT,
address TEXT,
Location POINT,
primary key(station, Line),
foreign key(Line) references subways(Line))

表"subwaystations"记录南京市各个地铁站点的信息。


/* Answer the following with no explanation: 哪些公交线路的首班车在始发站于早上5点发车？早上5点钟以'0500'为名称表示。 */
SELECT 