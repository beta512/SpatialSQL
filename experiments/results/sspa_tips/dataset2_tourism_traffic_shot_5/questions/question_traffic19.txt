You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.

In SpatiLite,
	The function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.
	The function Area( s Surface , 1) returns the area of s, measured in meters.
	The function GLength( c Curve , 1) returns the length of c, measured in meters.
	The function Centroid( s Surface ) returns the centroid of s, which may lie outside s.

	函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。
	函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。

/* Some SQL examples are provided based on similar problems: */
/* Answer the following: 哪个省与其它省都不邻接？ */
Select name from provinces where name not in (Select distinct a.name from provinces a inner join provinces b on Touches(a.Shape, b.Shape) = 1 where a.name != b.name)

/* Answer the following: 哪些1级河流与铁路相交？一条河流是由名字相同的各河流段组成，一条铁路是由名字相同的各铁路段组成。 */
Select distinct rivers.name from rivers inner join rails On Intersects(rivers.Shape, rails.Shape) = 1 where rivers.level_river = 1

/* Answer the following: 流经湖北省的1级河流有哪些？一条河流由多个同名河段组成。 */
Select distinct rivers.name from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where provinces.name = '湖北省' and rivers.level_river = 1

/* Answer the following: 湖北省的中心位于哪座城市？ */
Select cities.name from provinces inner join cities On Within(Centroid(provinces.Shape), cities.Shape) = 1 where provinces.name = '湖北省'

/* Answer the following: 哪些城市有985高校或者211高校？ */
Select distinct cities.name from cities inner join universities on Contains(cities.Shape, universities.Location) = 1 where universities.project_985 = 1 or universities.project_211 = 1

/* Given the following database schema: */
CREATE TABLE "agencies" (
NAME TEXT PRIMARY KEY,
KIND TEXT,
Location POINT)

表"agencies"记录了南京市各政府机构的信息。

CREATE TABLE "buslines" (
lineID TEXT PRIMARY KEY,
name TEXT UNIQUE,
type TEXT,
start_stop TEXT,
end_stop TEXT,
start_time TEXT,
end_time TEXT, 
Shape LINESTRING,
foreign key (start_stop) references busstops (name),
foreign key (end_stop) references busstops (name))

表"buslines"记录了南京市各公交线路的信息。

CREATE TABLE "busstops" (
stopID TEXT PRIMARY KEY,
name TEXT Unique,
X DOUBLE,
Y DOUBLE,
lineIDs TEXT, 
Location POINT)

表"busstops"记录了南京市各公交站点的信息。

CREATE TABLE "districts" (
name TEXT PRIMARY KEY,
administrative_division_code TEXT Unique,
ENG_NAME TEXT, 
Shape POLYGON)

表"districts"记录了南京市各区的信息。

CREATE TABLE "greenspaces" (
PK_UID INTEGER PRIMARY KEY AUTOINCREMENT,
NAME TEXT,
KIND TEXT,
Shape_Leng DOUBLE,
Shape POLYGON)

表"greenspaces"记录南京市各块绿地的信息；绿地包含公园、风景名胜、旅游景点等。

CREATE TABLE "hotels" (
NAME TEXT PRIMARY KEY,
KIND TEXT, 
Location POINT)

表"hotels"记录南京市内各个宾馆的信息。

CREATE TABLE "rails" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
fclass TEXT,
Shape MULTILINESTRING)

表"rails"记录南京市内各段铁路的信息。

CREATE TABLE "rivers" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
fclass TEXT,
Shape MULTIPOLYGON)

表"rivers"记录南京市各个水系的信息；水系包含湖泊、河流、水库等。

CREATE TABLE "roads" (
gml_id TEXT PRIMARY KEY,
Name TEXT,
pyname TEXT,
kind_num INTEGER,
kind TEXT,
width INTEGER,
speedclass INTEGER, 
Shape LINESTRING)

表"roads"记录南京市内各段道路的信息。

CREATE TABLE "subways" (
Line TEXT PRIMARY KEY,
Shape LINESTRING)

表"subways"记录南京市内各条地铁线的信息。

CREATE TABLE "subwaystations" (
station TEXT,
Line TEXT,
address TEXT,
Location POINT,
primary key(station, Line),
foreign key(Line) references subways(Line))

表"subwaystations"记录南京市各个地铁站点的信息。


/* Answer the following with no explanation: 地铁十号线二期与哪些其它地铁线路有交汇？十号线二期表示为'line10二期'。 */
SELECT 