{
    "args": "vars(args)",
    "costs": {
        "prompt_tokens_per_prompt": 0.0,
        "gpt-4": 0.8,
        "gpt-3.5-turbo": 0.04,
        "text-davinci-003": 0.4,
        "example_quality": 0.26661486956065256,
        "pattern_similarity": 0.33835782340608617
    },
    "questions": [
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京各区的长江水域面积分别是多少？长江是由名字相同的多段河流组成。应该计算长江与各区交叠部分的面积。 */\nSelect districts.name,  Sum(Area(Intersection(rivers.Shape, districts.Shape), 1)) from rivers inner join districts On Intersects(rivers.Shape, districts.Shape) = 1 where rivers.name = '长江' group by districts.name\n\n/* Answer the following: 南京市每条道路的总长度是多少？一条道路由所有名字相同的路段构成。 */\nSelect name, Sum(length) from roads group by name\n\n/* Answer the following: 每个区内有多少个地铁站？ */\nSelect districts.name, count(*) from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 请问太湖的面积是多少？太湖是由多个名称相同的湖泊区域组成。只需给出面积。太湖以'太湖'为名称表示。 */\nSELECT ",
            "response": "Sum(Area) from lakes where name = '太湖'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada01"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 中国最南边的省是哪个？最南边的省是指包含最南部城市的省份。'最南边'指的是纬度最小的位置。 */\nSelect province from cities order by MbrMinY(Shape) asc limit 1\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 中国最南部的城市是哪座？'最南部'是指纬度最低的地点。 */\nSELECT ",
            "response": "name from cities order by MbrMinY(Shape) asc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada02"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 大行宫地铁站位于哪个区？ */\nSelect distinct districts.name from districts inner join subwaystations on Within(subwaystations.Location, districts.Shape) = 1 where subwaystations.station = '大行宫'\n\n/* Answer the following: 温宿机场位于哪个城市？ */\nSelect cities.name from cities inner join airports on Within(airports.Location, cities.Shape) = 1 where airports.name = '阿克苏/温宿'\n\n/* Answer the following: 与东风路相交的其它道路有哪些？一条道路由所有名字相同的路段构成。 */\nSelect distinct b.Name from roads a inner join roads b On Intersects(a.Shape, b.Shape) = 1 where a.Name = '东风路' and a.Name != b.Name\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 洞庭湖位于哪些省份？洞庭湖是由多个名称相同的湖泊区域组成。洞庭湖以'洞庭湖'为名称表示。 */\nSELECT ",
            "response": "distinct provinces.name from provinces inner join lakes On Intersects(provinces.Shape, lakes.Shape) = 1 where lakes.name = '洞庭湖'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada03"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 长江流经南京的哪些区？长江是由名字相同的多段河流组成。 */\nSelect distinct districts.name from rivers inner join districts On Intersects(rivers.Shape, districts.Shape) = 1 where rivers.name = '长江'\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Answer the following: 有哪些地铁线路穿越长江？长江是由名字相同的多段河流组成。 */\nSelect distinct subways.line from subways inner join rivers on Crosses(rivers.Shape, subways.Shape) = 1 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 长江流经哪些省份？长江是由名字相同的多段河流组成。长江以'长江'为名称表示。 */\nSELECT ",
            "response": "distinct provinces.name from rivers inner join provinces On Intersects(provinces.Shape, rivers.Shape) = 1 where rivers.name = '长江'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada04"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Answer the following: 南京市境内长江水域的面积有多大？长江是由名字相同的多段河流组成。 */\nSelect Sum(Area(Shape, 1)) from rivers where name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 长江在湖北省境内的长度是多少？只需给出长度。长江是由名字相同的多段河流组成，应计算长江在湖北省境内的交汇部分的长度。长江以'长江'为名称表示，湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1)) from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where provinces.name = '湖北省' and rivers.name = '长江'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada05"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 与东风路相交的其它道路有哪些？一条道路由所有名字相同的路段构成。 */\nSelect distinct b.Name from roads a inner join roads b On Intersects(a.Shape, b.Shape) = 1 where a.Name = '东风路' and a.Name != b.Name\n\n/* Answer the following: 我想了解每条地铁线路经过了多少个区。 */\nSelect distinct subways.line, count(*) from subways inner join districts on Intersects(subways.Shape, districts.Shape) = 1 group by subways.line\n\n/* Answer the following: 地铁十号线二期与哪些其它地铁线路有交汇？ */\nSelect distinct b.line from subways a inner join subways b on Intersects(a.Shape, b.Shape) = 1 where a.line = 'line10二期' and b.line != a.line\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 流经湖北省的1级河流有哪些？一条河流由多个同名河段组成。湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "distinct rivers.name from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where provinces.name = '湖北省' and rivers.level_river = 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada06"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 每个省的面积分别是多少？一个省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities group by province\n\n/* Answer the following: 南京市每条道路的总长度是多少？一条道路由所有名字相同的路段构成。 */\nSelect name, Sum(length) from roads group by name\n\n/* Answer the following: 我想了解每条地铁线路经过了多少个区。 */\nSelect distinct subways.line, count(*) from subways inner join districts on Intersects(subways.Shape, districts.Shape) = 1 group by subways.line\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 我想了解各省境内河流的总长度。应计算河流在各省境内交汇部分的长度。 */\nSELECT ",
            "response": "provinces.name, Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1)) from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 group by provinces.name",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada07"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市面积最大的区是哪一区？面积是多少？ */\nSelect name, Area(Shape, 1) as area from districts order by area desc limit 1\n\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 天台山位于哪个城市？ */\nSelect cities.name  from cities inner join ScenicSpots On Contains(cities.Shape, ScenicSpots.Location) = 1 where ScenicSpots.name = '天台山景区'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 中国面积最大的省份是哪一个？它的面积是多少？ */\nSELECT ",
            "response": "name, Area(Shape, 1) as area from provinces order by area desc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada08"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 每个区内有多少个地铁站？ */\nSelect districts.name, count(*) from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode\n\n/* Answer the following: 每条地铁线设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line order by line\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 每个省内有多少个城市？ */\nSELECT ",
            "response": "province, count(*) from cities group by province",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada09"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 与广东省接壤的省份有哪些？每个省的面积是多少？广东省以'广东省'为名称表示。 */\nSELECT ",
            "response": "b.name , Area(b.Shape, 1) from provinces a inner join provinces b On Touches(a.Shape, b.Shape) = 1 where a.name = '广东省'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市内铁路的总长度是多少？ */\nSelect Sum(GLength(Shape, 1)) from rails\n\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 南京市地铁的总长度是多少？ */\nSelect Sum(GLength(Shape, 1)) from subways\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 中国境内铁路的总长度是多少？ */\nSELECT ",
            "response": "Sum(Shape_Length) from rails",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 南京市最长的道路是哪一条？它的具体长度是多少？一条道路由所有名字相同的路段构成。 */\nSelect name, Sum(length) as length from roads group by name order by length desc  limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 京广线的总长度是多少？京广线由多个同名铁路段组成。只需给出长度。京广线以'京广线'为名称表示。 */\nSELECT ",
            "response": "Sum(Shape_Length) from rails where name = '京广线'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 有哪些地铁线路穿越长江？长江是由名字相同的多段河流组成。 */\nSelect distinct subways.line from subways inner join rivers on Crosses(rivers.Shape, subways.Shape) = 1 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 京广线经过河南省的哪些城市？一条铁路由多个同名铁路段组成。京广线以'京广线'为名称表示，河南省以'河南省'为名称表示。 */\nSELECT ",
            "response": "distinct cities.name from cities inner join rails On Intersects(cities.Shape, rails.Shape) = 1 where cities.province = '河南省' and rails.name = '京广线'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 南京市哪些区有铁路经过？ */\nSelect distinct districts.name from rails inner join districts On Intersects(rails.Shape, districts.Shape) = 1\n\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 全国有哪些城市有铁路经过？一条铁路由多个同名铁路段组成。 */\nSELECT ",
            "response": "distinct cities.name from cities inner join rails On Intersects(cities.Shape, rails.Shape) = 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市哪些区有铁路经过？ */\nSelect distinct districts.name from rails inner join districts On Intersects(rails.Shape, districts.Shape) = 1\n\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 全国有哪些城市没有铁路经过？一条铁路由多个同名铁路段组成。 */\nSELECT ",
            "response": "name from cities where name not in (Select distinct cities.name from cities inner join rails On Intersects(cities.Shape, rails.Shape) = 1 )",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Answer the following: 面积最大的省是哪个，面积多少？一个省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) as area from cities group by province order by area desc limit 1\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 人口最多的省份是哪一个？它的面积是多少？ */\nSELECT ",
            "response": "name, Area(Shape, 1) from provinces where name = (Select name from provinces order by POPU desc limit 1)",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市地铁的总长度是多少？ */\nSelect Sum(GLength(Shape, 1)) from subways\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Answer the following: 天台山位于哪个城市？ */\nSelect cities.name  from cities inner join ScenicSpots On Contains(cities.Shape, ScenicSpots.Location) = 1 where ScenicSpots.name = '天台山景区'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 全国1级湖泊的总面积是多少？ */\nSELECT ",
            "response": "Sum(Area) from lakes where level_lake = 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada17"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 2023年GDP最高的省份是哪一个？该省有多少座机场？一个省由多个城市构成。 */\nSelect cities.province, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 where cities.province = (Select province from GDPs order by year_2023 desc limit 1)\n\n/* Answer the following: 2023年GDP最高的省是哪个？ */\nSelect province from GDPs order by year_2023 desc limit 1\n\n/* Answer the following: 2011至2020年间，入境外国游客最多的城市是哪个？ */\nSelect city from tours where year >= 2011 and year <= 2020 group by city order by Sum(international_tourists_number_Wan) desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 与1994年相比，2000年GDP增幅最大的省份是哪个？ */\nSELECT ",
            "response": "name from provinces order by GDP_2000 - GDP_1994 desc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada18"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区的政府机构最多？有多少个？ */\nSelect districts.name, count(*) as count from agencies inner join districts On Within(agencies.Location, districts.Shape) = 1 group by districts.name order by count desc limit 1\n\n/* Answer the following: 哪个区的政府机构数量最多？具体有多少个？ */\nSelect districts.name, count(*) as count from districts inner join agencies on Contains(districts.Shape, agencies.Location) = 1 group by districts.name order by count desc limit 1\n\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 少数民族人口最多的省份是哪一个？它的面积是多少？ */\nSELECT ",
            "response": "name, Area(Shape, 1) from provinces where name = (Select name from provinces order by Pop_Minori desc limit 1)",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada19"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 与东风路相交的其它道路有哪些？一条道路由所有名字相同的路段构成。 */\nSelect distinct b.Name from roads a inner join roads b On Intersects(a.Shape, b.Shape) = 1 where a.Name = '东风路' and a.Name != b.Name\n\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 哪些1级河流与铁路相交？一条河流是由名字相同的各河流段组成，一条铁路是由名字相同的各铁路段组成。 */\nSELECT ",
            "response": "distinct rivers.name from rivers inner join rails On Intersects(rivers.Shape, rails.Shape) = 1 where rivers.level_river = 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada20"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 湖北省2020年的国际旅游收入是多少？ */\nSelect Sum(international_toursim_earnings_Wan_dollar) from cities inner join tours On cities.name = tours.city and cities.province = '湖北省' where tours.year = 2020\n\n/* Answer the following: 大行宫地铁站位于哪个区？ */\nSelect distinct districts.name from districts inner join subwaystations on Within(subwaystations.Location, districts.Shape) = 1 where subwaystations.station = '大行宫'\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 湖北省内哪个机场距离省中心最近？湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "airports.name from provinces inner join airports On Within(airports.Location, provinces.Shape) = 1 where provinces.name = '湖北省' order by Distance(Centroid(provinces.Shape), airports.Location, 1) asc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada21"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Answer the following: 南京市哪些区有铁路经过？ */\nSelect distinct districts.name from rails inner join districts On Intersects(rails.Shape, districts.Shape) = 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 我想知道与盘西铁路有交的其它铁路？一条铁路是由名字相同的各铁路段组成。盘西铁路以'盘西'为名称表示。 */\nSELECT ",
            "response": "distinct b.name from rails a inner join rails b On Intersects(a.Shape, b.Shape) = 1 where a.name = '盘西' and b.name != '盘西'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada22"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 有哪些地铁线路穿越长江？长江是由名字相同的多段河流组成。 */\nSelect distinct subways.line from subways inner join rivers on Crosses(rivers.Shape, subways.Shape) = 1 where rivers.name = '长江'\n\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 哪些河流流经新疆维吾尔自治区？一条河流是由名字相同的各河流段组成。新疆维吾尔自治区以'新疆维吾尔自治区'为名称表示。 */\nSELECT ",
            "response": "distinct rivers.name from rivers inner join provinces On Intersects(rivers.Shape, provinces.Shape) =1 where provinces.name = '新疆维吾尔自治区'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada23"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 东三省的总面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省')\n\n/* Answer the following: 南京市各区的地铁线路长度分别是多少？应该计算地铁线路与各区交叠部分的长度。 */\nSelect districts.name, Sum(GLength(Intersection(districts.Shape, subways.Shape), 1)) from districts inner join subways On Intersects(districts.Shape, subways.Shape) = 1 group by districts.name\n\n/* Answer the following: 新疆维吾尔自治区3A级及以上旅游景点有多少个？新疆维吾尔自治区是一个省，由多个城市构成。 */\nSelect count(*) from cities inner join ScenicSpots On Within(ScenicSpots.Location, cities.Shape) = 1 where cities.province = '新疆维吾尔自治区'  and ScenicSpots.level >= '3A'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 新疆维吾尔自治区境内河流的总长度是多少？应计算河流与新疆维吾尔自治区交集的长度。新疆维吾尔自治区以'新疆维吾尔自治区'为名称表示。 */\nSELECT ",
            "response": "Sum(GLength(Intersection(rivers.Shape, provinces.Shape), 1)) from rivers inner join provinces On Intersects(rivers.Shape, provinces.Shape) =1 where provinces.name = '新疆维吾尔自治区'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada24"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 东三省的总面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省')\n\n/* Answer the following: 东三省面积最大的省是哪个，面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省') group by province order by Sum(Area(Shape, 1)) desc limit 1\n\n/* Answer the following: 新疆维吾尔自治区3A级及以上旅游景点有多少个？新疆维吾尔自治区是一个省，由多个城市构成。 */\nSelect count(*) from cities inner join ScenicSpots On Within(ScenicSpots.Location, cities.Shape) = 1 where cities.province = '新疆维吾尔自治区'  and ScenicSpots.level >= '3A'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 中国五个自治区的总面积和总人口分别是多少？中国五个自治区是指西藏自治区、内蒙古自治区、新疆维吾尔自治区、广西壮族自治区和宁夏回族自治区。西藏自治区以'西藏自治区'为名称表示，内蒙古自治区以'内蒙古自治区'为名称表示，新疆维吾尔自治区以'新疆维吾尔自治区'为名称表示，广西壮族自治区以'广西壮族自治区'为名称表示，宁夏回族自治区以'宁夏回族自治区'为名称表示。 */\nSELECT ",
            "response": "Sum(Area(Shape,1)) , Sum(POPU) from provinces where name like '%自治区'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada25"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 中国最南边的省是哪个？最南边的省是指包含最南部城市的省份。'最南边'指的是纬度最小的位置。 */\nSelect province from cities order by MbrMinY(Shape) asc limit 1\n\n/* Answer the following: 东三省面积最大的省是哪个，面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省') group by province order by Sum(Area(Shape, 1)) desc limit 1\n\n/* Answer the following: 东三省的总面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省')\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 中国面积最小的自治区是哪一个？它的人口是多少？中国五个自治区是指西藏自治区、内蒙古自治区、新疆维吾尔自治区、广西壮族自治区和宁夏回族自治区。西藏自治区以'西藏自治区'为名称表示，内蒙古自治区以'内蒙古自治区'为名称表示，新疆维吾尔自治区以'新疆维吾尔自治区'为名称表示，广西壮族自治区以'广西壮族自治区'为名称表示，宁夏回族自治区以'宁夏回族自治区'为名称表示。 */\nSELECT ",
            "response": "name, POPU from provinces where name like '%自治区' and name = ( Select name from provinces where name like '%自治区' order by Area(Shape, 1) asc limit 1)",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada26"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 有哪些地铁线路穿越长江？长江是由名字相同的多段河流组成。 */\nSelect distinct subways.line from subways inner join rivers on Crosses(rivers.Shape, subways.Shape) = 1 where rivers.name = '长江'\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 哪些省份境内既有长江流经，又有黄河流经？一条河流是由名字相同的各河流段组成。长江以'长江'为名称表示，黄河以'黄河'为名称表示。 */\nSELECT ",
            "response": "distinct provinces.name from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where rivers.name = '长江' intersect Select distinct provinces.name from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where rivers.name = '黄河'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada27"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京各区的长江水域面积分别是多少？长江是由名字相同的多段河流组成。应该计算长江与各区交叠部分的面积。 */\nSelect districts.name,  Sum(Area(Intersection(rivers.Shape, districts.Shape), 1)) from rivers inner join districts On Intersects(rivers.Shape, districts.Shape) = 1 where rivers.name = '长江' group by districts.name\n\n/* Answer the following: 南京市境内长江水域的面积有多大？长江是由名字相同的多段河流组成。 */\nSelect Sum(Area(Shape, 1)) from rivers where name = '长江'\n\n/* Answer the following: 长江流经南京的哪些区？长江是由名字相同的多段河流组成。 */\nSelect distinct districts.name from rivers inner join districts On Intersects(rivers.Shape, districts.Shape) = 1 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 长江流域，65岁以上人口的总人口是多少？长江流域是指长江流经的省份。长江由名字相同的各河流段组成。长江以'长江'为名称表示。 */\nSELECT ",
            "response": "Sum(Pop_65Plus) from provinces where name in (Select distinct provinces.name from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where rivers.name = '长江')",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada28"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 有哪些公交线路经过长江？长江是由名字相同的多段河流组成。 */\nSelect buslines.name from buslines inner join rivers On Crosses(buslines.Shape, rivers.Shape) = 1 where rivers.name = '长江'\n\n/* Answer the following: 有哪些地铁线路穿越长江？长江是由名字相同的多段河流组成。 */\nSelect distinct subways.line from subways inner join rivers on Crosses(rivers.Shape, subways.Shape) = 1 where rivers.name = '长江'\n\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 长江与哪些铁路交汇？长江是由名字相同的各河流段组成，而一条铁路是由名字相同的各铁路段组成。长江以'长江'为名称表示。 */\nSELECT ",
            "response": "distinct rails.name from rivers inner join rails On Intersects(rails.Shape, rivers.Shape) = 1 where rivers.name = '长江'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada29"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市境内长江水域的面积有多大？长江是由名字相同的多段河流组成。 */\nSelect Sum(Area(Shape, 1)) from rivers where name = '长江'\n\n/* Answer the following: 南京各区的长江水域面积分别是多少？长江是由名字相同的多段河流组成。应该计算长江与各区交叠部分的面积。 */\nSelect districts.name,  Sum(Area(Intersection(rivers.Shape, districts.Shape), 1)) from rivers inner join districts On Intersects(rivers.Shape, districts.Shape) = 1 where rivers.name = '长江' group by districts.name\n\n/* Answer the following: 长江流经南京的哪些区？长江是由名字相同的多段河流组成。 */\nSelect distinct districts.name from rivers inner join districts On Intersects(rivers.Shape, districts.Shape) = 1 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 长江流域的总面积是多少？长江流域是指长江流经的省份。长江由名字相同的各河流段组成。长江以'长江'为名称表示。 */\nSELECT ",
            "response": "Sum(Area(provinces.Shape, 1)) from provinces where name in (Select distinct provinces.name from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where rivers.name = '长江')",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada30"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Answer the following: 南京市最长的道路是哪一条？它的具体长度是多少？一条道路由所有名字相同的路段构成。 */\nSelect name, Sum(length) as length from roads group by name order by length desc  limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 京广线沿线各省份的人口各是多少？京广线是由名字相同的各铁路段组成。京广线以'京广线'为名称表示。 */\nSELECT ",
            "response": "name, Pop_Urban from provinces where name in (Select distinct provinces.name from provinces inner join rails On Intersects(provinces.Shape, rails.Shape) = 1 where rails.name = '京广线')",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada31"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 最西边的省是哪个？最西边的省是指包含最西部城市的省份。'最西边'指的是经度最小的位置。 */\nSelect province from cities order by MbrMinX(Shape) asc limit 1\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 中国最南边的省是哪个？最南边的省是指包含最南部城市的省份。'最南边'指的是纬度最小的位置。 */\nSelect province from cities order by MbrMinY(Shape) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 中国最西部的城市是哪座？'最西部'是指经度最小的地方。 */\nSELECT ",
            "response": "name from cities order by MbrMinX(Shape) asc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada32"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 天台山位于哪个城市？ */\nSelect cities.name  from cities inner join ScenicSpots On Contains(cities.Shape, ScenicSpots.Location) = 1 where ScenicSpots.name = '天台山景区'\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 中国最东部的省份是哪一个？ */\nSELECT ",
            "response": "name from provinces order by MbrMaxX(Shape) desc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada33"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市每条道路的总长度是多少？一条道路由所有名字相同的路段构成。 */\nSelect name, Sum(length) from roads group by name\n\n/* Answer the following: 与东风路相交的其它道路有哪些？一条道路由所有名字相同的路段构成。 */\nSelect distinct b.Name from roads a inner join roads b On Intersects(a.Shape, b.Shape) = 1 where a.Name = '东风路' and a.Name != b.Name\n\n/* Answer the following: 每条地铁线设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line order by line\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 每个省内1级河流的总长度是多少？一条河流由多个同名河段组成，应计算其在各省境内的交汇部分长度。 */\nSELECT ",
            "response": "provinces.name, Sum(GLength(Intersection(provinces.Shape, rivers.Shape), 1)) from provinces inner join rivers On Intersects(provinces.Shape, rivers.Shape) = 1 where level_river = 1 group by provinces.name",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada34"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 每个区内有多少个地铁站？ */\nSelect districts.name, count(*) from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode\n\n/* Answer the following: 每条地铁线设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line order by line\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 每个省内有多少个机场？ */\nSELECT ",
            "response": "provinces.name, count(*) from provinces inner join airports On Within(Location, Shape) = 1 group by provinces.name",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada35"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 安庆机场方圆200千米内有哪些城市？安庆机场以'安庆'为名称表示。 */\nSELECT ",
            "response": "cities.name from cities inner join airports On Distance(Shape, Location, 1) < 200 * 1000 where airports.name = '安庆'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada36"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 东三省的总面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省')\n\n/* Answer the following: 我想知道玄武区的宾馆总数是多少？ */\nSelect count(*) from districts inner join hotels On Contains(districts.Shape, hotels.Location) = 1 where districts.name = '玄武区'\n\n/* Answer the following: 南京各区的长江水域面积分别是多少？长江是由名字相同的多段河流组成。应该计算长江与各区交叠部分的面积。 */\nSelect districts.name,  Sum(Area(Intersection(rivers.Shape, districts.Shape), 1)) from rivers inner join districts On Intersects(rivers.Shape, districts.Shape) = 1 where rivers.name = '长江' group by districts.name\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 京津冀地区共有多少座机场？京津冀地区是指河北省、天津市和北京市。河北省以'河北省'为名称表示，天津市以'天津市'为名称表示，北京市以'北京市'为名称表示。 */\nSELECT ",
            "response": "count(*) from provinces inner join airports On Within(Location, Shape) = 1 where provinces.name in ('北京市', '河北省', '天津市')",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada37"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 江宁区内距离南京南站地铁站最近的宾馆是哪一家？相距多远？ */\nSelect hotels.name, Distance(hotels.Location, subwaystations.Location, 1) as distance from hotels inner join districts on Within(hotels.Location, districts.Shape) = 1 and districts.name = '江宁区' inner join subwaystations on subwaystations.station = '南京南站' order by distance asc limit 1\n\n/* Answer the following: 郑和公园附近最近的地铁站是哪一站？相距多远？郑和公园由名字相同的多个区域组成。 */\nSelect subwaystations.station, Distance(greenspaces.Shape, subwaystations.Location, 1) as distance from greenspaces inner join subwaystations On greenspaces.name = '郑和公园' order by distance asc limit 1\n\n/* Answer the following: 三元巷公交站附近最近的5家宾馆分别是什么？距离各是多少？ */\nSelect hotels.name, Distance(busstops.Location, hotels.Location, 1) as d from busstops inner join hotels on busstops.name = '三元巷' order by d asc limit 5\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 苏州市最近的机场是哪座，距离有多远？苏州市以'苏州市'为名称表示。 */\nSELECT ",
            "response": "airports.name, min(Distance(cities.Shape, airports.Location, 1)) as distance from cities inner join airports where cities.name = '苏州市' order by distance limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada38"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Answer the following: 面积最大的省是哪个，面积多少？一个省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) as area from cities group by province order by area desc limit 1\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 人口最多的省份是哪一个？该省有多少个机场？ */\nSELECT ",
            "response": "provinces.name, count(*) from provinces inner join airports On Contains(provinces.Shape, airports.Location) = 1 where provinces.name = (Select name from provinces order by POPU desc limit 1)",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada39"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Answer the following: 岳阳东站100公里范围内有哪些5A级旅游景点？这些景点的距离分别是多少？ */\nSelect ScenicSpots.name,  Distance(stations.Location, ScenicSpots.Location, 1) from stations inner join ScenicSpots On Distance(stations.Location, ScenicSpots.Location, 1) < 100 * 1000 where stations.name = '岳阳东' and ScenicSpots.level = '5A'\n\n/* Answer the following: 南京市哪些区有铁路经过？ */\nSelect distinct districts.name from rails inner join districts On Intersects(rails.Shape, districts.Shape) = 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 京广线方圆10千米内有哪些机场？京广线以'京广线'为名称表示。 */\nSELECT ",
            "response": "distinct airports.name from airports inner join rails On Distance(airports.Location, rails.Shape, 1) < 10 * 1000 where rails.name = '京广线'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada40"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Answer the following: 郑和公园附近最近的地铁站是哪一站？相距多远？郑和公园由名字相同的多个区域组成。 */\nSelect subwaystations.station, Distance(greenspaces.Shape, subwaystations.Location, 1) as distance from greenspaces inner join subwaystations On greenspaces.name = '郑和公园' order by distance asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 江苏省内距离太湖最近的机场是哪座？一个湖泊是由多个名称相同的湖泊区域组成。只需要给出机场名字。太湖以'太湖'为名称表示，江苏省以'江苏省'为名称表示。 */\nSELECT ",
            "response": "airports.name from airports inner join provinces On Within(airports.Location, provinces.Shape) = 1 inner join lakes where provinces.name = '江苏省' and lakes.name = '太湖' order by Distance(airports.Location, lakes.Shape, 1) asc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada41"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Answer the following: 面积最大的省是哪个，面积多少？一个省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) as area from cities group by province order by area desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 女性人口最多的省份是哪个？该省的面积是多少？ */\nSELECT ",
            "response": "name, Area(Shape, 1) from provinces order by Pop_Female desc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada42"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 机场数量最多的城市是哪座？该城市共有多少个机场？ */\nSELECT ",
            "response": "cities.name, count(*) as count from cities inner join airports On Within(airports.Location, cities.Shape) = 1 group by cities.name order by count desc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada43"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 南京市最长的道路是哪一条？它的具体长度是多少？一条道路由所有名字相同的路段构成。 */\nSelect name, Sum(length) as length from roads group by name order by length desc  limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 哪条铁路线最长，长度是多少？一条铁路是由多个名称相同的铁路区段组成。 */\nSELECT ",
            "response": "name, Sum(Shape_Length) as length from rails group by name order by length desc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada44"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Answer the following: 哪个区的政府机构最多？有多少个？ */\nSelect districts.name, count(*) as count from agencies inner join districts On Within(agencies.Location, districts.Shape) = 1 group by districts.name order by count desc limit 1\n\n/* Answer the following: 哪个区的政府机构数量最多？具体有多少个？ */\nSelect districts.name, count(*) as count from districts inner join agencies on Contains(districts.Shape, agencies.Location) = 1 group by districts.name order by count desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 男女人数差距最大的省份是哪个？该省有多少个机场？ */\nSELECT ",
            "response": "provinces.name, count(*) from provinces inner join airports On Contains(provinces.Shape, airports.Location) =1 where provinces.name = (Select name from provinces order by abs(Pop_Male - Pop_Female) desc limit 1)",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada45"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 地铁4号线鼓楼站一公里范围内有哪些宾馆？它们各自的距离是多少？ */\nSelect hotels.name, Distance(subwaystations.Location, hotels.Location, 1) from subwaystations inner join hotels on Distance(subwaystations.Location, hotels.Location, 1) < 1000 where subwaystations.station = '鼓楼' and subwaystations.line = 'line4'\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Answer the following: 地铁S7号线周边500米范围内有多少家宾馆？ */\nSelect count(distinct hotels.name) from subways inner join hotels On Distance(subways.Shape, hotels.Location, 1) < 500 where subways.line = 'S7'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 太湖方圆200千米内有哪些机场？太湖以'太湖'为名称表示。 */\nSELECT ",
            "response": "distinct airports.name from lakes inner join airports On Distance(lakes.Shape, airports.Location, 1) < 200 * 1000 where lakes.name = '太湖'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada46"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 中国最南边的省是哪个？最南边的省是指包含最南部城市的省份。'最南边'指的是纬度最小的位置。 */\nSelect province from cities order by MbrMinY(Shape) asc limit 1\n\n/* Answer the following: 距离金龙大酒店最近的地铁站是哪一个，距离多远？ */\nSelect subwaystations.station, Distance(subwaystations.Location, hotels.Location, 1) as d from subwaystations inner join hotels where hotels.name = '金龙大酒店' order by d asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 吉林省最北部的城市是哪座？'最北部'指的是纬度最高的地方。吉林省以'吉林省'为名称表示。 */\nSELECT ",
            "response": "name from cities where province = '吉林省' order by MbrMaxY(Shape) desc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada47"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 有哪些地铁线路穿越长江？长江是由名字相同的多段河流组成。 */\nSelect distinct subways.line from subways inner join rivers on Crosses(rivers.Shape, subways.Shape) = 1 where rivers.name = '长江'\n\n/* Answer the following: 南京市内最长的铁路线是哪一条？长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1)) as length from rails group by name order by length desc limit 1\n\n/* Answer the following: 有哪些公交线路经过长江？长江是由名字相同的多段河流组成。 */\nSelect buslines.name from buslines inner join rivers On Crosses(buslines.Shape, rivers.Shape) = 1 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 湘桂线经过哪些城市？湘桂线是由名字相同的各铁路段组成。湘桂线以'湘桂线'为名称表示。 */\nSELECT ",
            "response": "distinct cities.name from rails inner join cities On Intersects(rails.Shape, cities.Shape) = 1 where rails.name = '湘桂线'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada48"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 天台山位于哪个城市？ */\nSelect cities.name  from cities inner join ScenicSpots On Contains(cities.Shape, ScenicSpots.Location) = 1 where ScenicSpots.name = '天台山景区'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 河南省与湖北省的交界线长度是多少？河南省以'河南省'为名称表示，湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "GLength(Intersection(a.Shape, b.Shape),1) from provinces a inner join provinces b On Intersects(a.Shape, b.Shape) = 1 where a.name = '河南省' and b.name = '湖北省'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada49"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 大行宫地铁站位于哪个区？ */\nSelect distinct districts.name from districts inner join subwaystations on Within(subwaystations.Location, districts.Shape) = 1 where subwaystations.station = '大行宫'\n\n/* Answer the following: 温宿机场位于哪个城市？ */\nSelect cities.name from cities inner join airports on Within(airports.Location, cities.Shape) = 1 where airports.name = '阿克苏/温宿'\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 湖北省的中心位于哪座城市？湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "cities.name from provinces inner join cities On Within(Centroid(provinces.Shape), cities.Shape) = 1 where provinces.name = '湖北省'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada50"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 河南省与哪个省的边界线最长？边界线的长度是多少？河南省以'河南省'为名称表示。 */\nSELECT ",
            "response": "b.name, GLength(Intersection(a.Shape, b.Shape),1) from provinces a inner join provinces b On Intersects(a.Shape, b.Shape) = 1 where a.name = '河南省'",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada51"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 距离河南省与湖北省交界最近的机场是哪座？距离有多远？河南省以'河南省'为名称表示，湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "airports.name, Distance(airports.Location, Intersection(a.Shape, b.Shape), 1) as d from provinces a inner join provinces b On a.name = '河南省' and b.name = '湖北省' and Intersects(a.Shape, b.Shape) = 1 inner join airports order by d asc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada52"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 地铁4号线鼓楼站一公里范围内有哪些宾馆？它们各自的距离是多少？ */\nSelect hotels.name, Distance(subwaystations.Location, hotels.Location, 1) from subwaystations inner join hotels on Distance(subwaystations.Location, hotels.Location, 1) < 1000 where subwaystations.station = '鼓楼' and subwaystations.line = 'line4'\n\n/* Answer the following: 最西边的省是哪个？最西边的省是指包含最西部城市的省份。'最西边'指的是经度最小的位置。 */\nSelect province from cities order by MbrMinX(Shape) asc limit 1\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 哪个省的中心坐标不位于本省境内？ */\nSELECT ",
            "response": "name from provinces where Within(Centroid(Shape), Shape) = 0",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada53"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 有哪些地铁线路穿越长江？长江是由名字相同的多段河流组成。 */\nSelect distinct subways.line from subways inner join rivers on Crosses(rivers.Shape, subways.Shape) = 1 where rivers.name = '长江'\n\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 长江和黄河的长度分别是多少？一条河流是由名字相同的各河流段组成。长江以'长江'为名称表示，黄河以'黄河'为名称表示。 */\nSELECT ",
            "response": "name, Sum(length) from rivers where name in ('长江', '黄河') group by name",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada54"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 拥有城市数量最多的省份是哪个？该省有多少座城市？ */\nSELECT ",
            "response": "province, count(*) from cities group by province order by count(*) desc limit 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada55"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 与东风路相交的其它道路有哪些？一条道路由所有名字相同的路段构成。 */\nSelect distinct b.Name from roads a inner join roads b On Intersects(a.Shape, b.Shape) = 1 where a.Name = '东风路' and a.Name != b.Name\n\n/* Answer the following: 南京市内每条铁路线的长度是多少？一条铁路由所有名称相同的路段组成。 */\nSelect name, Sum(GLength(Shape, 1))  from rails group by name\n\n/* Answer the following: 有哪些地铁线路穿越长江？长江是由名字相同的多段河流组成。 */\nSelect distinct subways.line from subways inner join rivers on Crosses(rivers.Shape, subways.Shape) = 1 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"airports\" (\nIATA TEXT  not null,\nrunway_number INTEGER  not null,\nairfield_area_class TEXT not null,\nname TEXT PRIMARY KEY, \nlocation POINT  not null)\n\n表\"airports\"记录中国各个机场的信息。\n\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY,\nprovince TEXT REFERENCES provinces (name),\nadministrative_division_code TEXT not null,\nadministrative_division_category TEXT  not null,\neng_name TEXT  not null,\nshape MULTIPOLYGON  not null)\n\n表\"cities\"记录中国各个城市的信息。\n\nCREATE TABLE \"lakes\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nPerimeter DOUBLE not null,\nArea DOUBLE,\nGBCODE TEXT  not null,\nname TEXT not null,\nlevel_lake INTEGER  not null, \nshape POLYGON  not null)\n\n表\"lakes\"记录中国各块湖泊的信息。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY,\nGDP_1994 DOUBLE not null,\nGDP_1997 DOUBLE not null,\nGDP_1998 DOUBLE not null,\nGDP_1999 DOUBLE not null,\nGDP_2000 DOUBLE not null,\npinyin_name TEXT not null,\nPop_0_14 DOUBLE not null,\nPop_15_64 DOUBLE not null,\nPop_65Plus DOUBLE not null,\nPop_Female DOUBLE not null,\nPop_Han DOUBLE not null,\nPop_Male DOUBLE not null,\nPop_Minori DOUBLE not null,\nPop_Rural DOUBLE not null,\nPop_Urban DOUBLE not null,\nPOPU DOUBLE not null,\nadministrative_divison_code TEXT not null,\nshape MULTIPOLYGON not null)\n\n表\"provinces\"记录中国各个省的GDP及人口等信息。\n\nCREATE TABLE \"rails\" (\nobjectID INTEGER PRIMARY KEY,\nShape_Length DOUBLE not null,\nentityID TEXT not null,\nname TEXT not null,\nclassID TEXT  not null, \nshape MULTILINESTRING not null)\n\n表\"rails\"记录中国各段铁路的信息。\n\nCREATE TABLE \"rivers\" (\nHYD1_4M_ID INTEGER PRIMARY KEY,\nlength DOUBLE not null,\nfnode INTEGER  not null ,\ntnode INTEGER not null ,\nlpoly INTEGER not null ,\nrpoly INTEGER not null ,\nGBCODE TEXT not null ,\nname TEXT not null,\nlevel_river INTEGER  not null, \nshape LINESTRING  not null)\n\n表\"rivers\"记录中国各段河流的信息。\n\n\n/* Answer the following with no explanation: 黄河与京广线在哪些省份交汇？一条河流是由名字相同的各河流段组成，一条铁路是由名字相同的各铁路段组成。黄河以'黄河'为名称表示，京广线以'京广线'为名称表示。 */\nSELECT ",
            "response": "distinct provinces.name from provinces inner join (Select Intersection(rails.Shape, rivers.Shape) as Location from rails inner join rivers On Intersects(rails.Shape, rivers.Shape) = 1 where rails.name = '京广线' and rivers.name = '黄河') As Inters On Within(Location, Shape) = 1",
            "n_examples": 3,
            "db_id": "ada",
            "id": "ada56"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 我想知道玄武区的宾馆总数是多少？ */\nSelect count(*) from districts inner join hotels On Contains(districts.Shape, hotels.Location) = 1 where districts.name = '玄武区'\n\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 南京市每条地铁线路设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想了解北京市高校的总数。北京市以'北京市'为名称表示。 */\nSELECT ",
            "response": "count(*) from universities where province = '北京市'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu01"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 每个区内有多少个地铁站？ */\nSelect districts.name, count(*) from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode\n\n/* Answer the following: 每条地铁线设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line order by line\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想了解各省高校的数量。 */\nSELECT ",
            "response": "province, count(*) from universities group by province",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu02"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Answer the following: 东三省的总面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省')\n\n/* Answer the following: 南京市各区的面积分别是多少？ */\nSelect districts.name, Area(Shape, 1) from districts\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想了解河北省各城市的面积。河北省以'河北省'为名称表示。 */\nSELECT ",
            "response": "name, Shape_Area from cities where province = '河北省'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu03"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Answer the following: 天台山位于哪个城市？ */\nSelect cities.name  from cities inner join ScenicSpots On Contains(cities.Shape, ScenicSpots.Location) = 1 where ScenicSpots.name = '天台山景区'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 北京市的邻省有哪些？北京市以'北京市'为名称表示。 */\nSELECT ",
            "response": "b.name from provinces a inner join provinces b on Touches(a.Shape, b.Shape) = 1 where a.name = '北京市'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu04"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 我想知道玄武区的宾馆总数是多少？ */\nSelect count(*) from districts inner join hotels On Contains(districts.Shape, hotels.Location) = 1 where districts.name = '玄武区'\n\n/* Answer the following: 南京市每条地铁线路设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想了解与北京市相邻的省份中，各省的高校数量。北京市以'北京市'为名称表示。 */\nSELECT ",
            "response": "province, count(*) from universities where province in (Select b.name from provinces a inner join provinces b on Touches(a.Shape, b.Shape) = 1 where a.name = '北京市') group by province",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu05"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 湖北省2020年的国际旅游收入是多少？ */\nSelect Sum(international_toursim_earnings_Wan_dollar) from cities inner join tours On cities.name = tours.city and cities.province = '湖北省' where tours.year = 2020\n\n/* Answer the following: 大行宫地铁站位于哪个区？ */\nSelect distinct districts.name from districts inner join subwaystations on Within(subwaystations.Location, districts.Shape) = 1 where subwaystations.station = '大行宫'\n\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想了解湖北省的面积。湖北省以'湖北省'为名称表示。只需给出面积。 */\nSELECT ",
            "response": "Area(Shape, 1) from provinces where name = '湖北省'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu06"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 湖北省2020年的国际旅游收入是多少？ */\nSelect Sum(international_toursim_earnings_Wan_dollar) from cities inner join tours On cities.name = tours.city and cities.province = '湖北省' where tours.year = 2020\n\n/* Answer the following: 湖北省2010年的星级酒店有多少个？ */\nSelect Sum(star_hotel_number) from cities inner join tours on cities.name = tours.city where year = 2010 and cities.province = '湖北省'\n\n/* Answer the following: 2023年GDP最高的省份是哪一个？该省有多少座机场？一个省由多个城市构成。 */\nSelect cities.province, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 where cities.province = (Select province from GDPs order by year_2023 desc limit 1)\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 湖北省2020年的人口是多少？湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "Sum(POP2020) from cities where province = '湖北省'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu07"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 最西边的省是哪个？最西边的省是指包含最西部城市的省份。'最西边'指的是经度最小的位置。 */\nSelect province from cities order by MbrMinX(Shape) asc limit 1\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 中国最南边的省是哪个？最南边的省是指包含最南部城市的省份。'最南边'指的是纬度最小的位置。 */\nSelect province from cities order by MbrMinY(Shape) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 中国最西部的211大学是哪所？最西部指经度最小的地点。 */\nSELECT ",
            "response": "name from universities where project_211 = 1 order by X(Location) asc limit 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu08"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 湖北省2020年的国际旅游收入是多少？ */\nSelect Sum(international_toursim_earnings_Wan_dollar) from cities inner join tours On cities.name = tours.city and cities.province = '湖北省' where tours.year = 2020\n\n/* Answer the following: 湖北省2010年的星级酒店有多少个？ */\nSelect Sum(star_hotel_number) from cities inner join tours on cities.name = tours.city where year = 2010 and cities.province = '湖北省'\n\n/* Answer the following: 2023年GDP最高的省份是哪一个？该省有多少座机场？一个省由多个城市构成。 */\nSelect cities.province, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 where cities.province = (Select province from GDPs order by year_2023 desc limit 1)\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 湖北省2020年的人口相比2000年增加了多少？湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "(Sum(POP2020) - Sum(POP2000)) from cities where province = '湖北省'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu09"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 大行宫地铁站位于哪个区？ */\nSelect distinct districts.name from districts inner join subwaystations on Within(subwaystations.Location, districts.Shape) = 1 where subwaystations.station = '大行宫'\n\n/* Answer the following: 温宿机场位于哪个城市？ */\nSelect cities.name from cities inner join airports on Within(airports.Location, cities.Shape) = 1 where airports.name = '阿克苏/温宿'\n\n/* Answer the following: 哈尔滨市有多少个机场？ */\nSelect count(*) from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '哈尔滨市'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 湖北省的重点高校有哪些？重点高校是指985大学和211大学湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "name from universities where province = '湖北省' and (universities.project_211 = 1 or universities.project_985 = 1)",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu10"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市面积最大的区是哪一区？面积是多少？ */\nSelect name, Area(Shape, 1) as area from districts order by area desc limit 1\n\n/* Answer the following: 东三省面积最大的省是哪个，面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省') group by province order by Sum(Area(Shape, 1)) desc limit 1\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 湖北省面积最大的城市是哪个？只需给出城市的名字。湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "name from cities where province = '湖北省' order by Shape_Area desc limit 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu11"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 西藏自治区的面积是多少？西藏自治区是一个省，由多个城市构成。 */\nSelect Sum(Area(Shape, 1)) from cities where province = '西藏自治区'\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 内蒙古自治区各城市的面积是多少？内蒙古自治区以'内蒙古自治区'为名称表示。 */\nSELECT ",
            "response": "name, Shape_Area from cities where province = '内蒙古自治区'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu12"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 地铁S7号线周边500米范围内有多少家宾馆？ */\nSelect count(distinct hotels.name) from subways inner join hotels On Distance(subways.Shape, hotels.Location, 1) < 500 where subways.line = 'S7'\n\n/* Answer the following: 南京市各区的地铁线路长度分别是多少？应该计算地铁线路与各区交叠部分的长度。 */\nSelect districts.name, Sum(GLength(Intersection(districts.Shape, subways.Shape), 1)) from districts inner join subways On Intersects(districts.Shape, subways.Shape) = 1 group by districts.name\n\n/* Answer the following: 2023年GDP最高的省份是哪一个？该省有多少座机场？一个省由多个城市构成。 */\nSelect cities.province, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 where cities.province = (Select province from GDPs order by year_2023 desc limit 1)\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想知道全国重点高校的分布情况。重点高校是指211和985大学；分布情况是指每个省重点高校的数量。 */\nSELECT ",
            "response": "province, count(*) from universities where project_211 = 1 or project_985 = 1 group by province",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu13"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 东三省的总面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省')\n\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Answer the following: 东三省面积最大的省是哪个，面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省') group by province order by Sum(Area(Shape, 1)) desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想了解京津冀地区的总面积是多少。 京津冀是指北京市、天津市和河北省。 */\nSELECT ",
            "response": "Sum(Shape_Area) from cities where province in ('北京市', '天津市', '河北省')",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu14"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 最西边的省是哪个？最西边的省是指包含最西部城市的省份。'最西边'指的是经度最小的位置。 */\nSelect province from cities order by MbrMinX(Shape) asc limit 1\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Answer the following: 中国最南边的省是哪个？最南边的省是指包含最南部城市的省份。'最南边'指的是纬度最小的位置。 */\nSelect province from cities order by MbrMinY(Shape) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 中国最西边的省是哪个？'最西边'是指经度最小的位置。 */\nSELECT ",
            "response": "name from provinces order by MbrMinX(Shape) asc limit 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu15"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 北海公园与恭王府的距离是多少？ */\nSelect Distance(a.Location, b.Location, 1)  from ScenicSpots a inner join ScenicSpots b where a.name = '北海公园' and b.name = '恭王府'\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Answer the following: 南京市各区的面积分别是多少？ */\nSelect districts.name, Area(Shape, 1) from districts\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 郑州市的中心与河南省的中心距离是多少米？郑州市以'郑州市'为名称表示，河南省以'河南省'为名称表示。 */\nSELECT ",
            "response": "Distance(Centroid(provinces.Shape), Centroid(cities.Shape), 1) from provinces inner join cities where provinces.name = '河南省' and cities.name = '郑州市'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu16"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 与安阳市相邻的城市有哪些？不包括河南省内的城市。安阳市以'安阳市'为名称表示，河南省以'河南省'为名称表示。 */\nSELECT ",
            "response": "b.name from cities a inner join cities b on Touches(a.Shape, b.Shape) = 1 where a.name = '安阳市' and b.province != '河南省'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu17"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区的政府机构数量最多？具体有多少个？ */\nSelect districts.name, count(*) as count from districts inner join agencies on Contains(districts.Shape, agencies.Location) = 1 group by districts.name order by count desc limit 1\n\n/* Answer the following: 哪个区的政府机构最多？有多少个？ */\nSelect districts.name, count(*) as count from agencies inner join districts On Within(agencies.Location, districts.Shape) = 1 group by districts.name order by count desc limit 1\n\n/* Answer the following: 2011至2020年间，入境外国游客最多的城市是哪个？ */\nSelect city from tours where year >= 2011 and year <= 2020 group by city order by Sum(international_tourists_number_Wan) desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 2020年人口最多的非直辖市是哪座城市？它的面积是多少？直辖市以'直辖市'为名称表示。 */\nSELECT ",
            "response": "name, Area(Shape, 1) from cities where name = (Select name from cities where administrative_division_category != '直辖市' order by POP2020 desc limit 1)",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu18"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 距离北京大学3000米以内的其它985大学有哪些？ */\nSELECT ",
            "response": "a.name from universities a inner join universities b on Distance(a.Location, b.Location, 1) < 3000 where a.project_985 = 1 and b.name = '北京大学' and a.name != '北京大学'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu19"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市地铁的总长度是多少？ */\nSelect Sum(GLength(Shape, 1)) from subways\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 我想知道玄武区的宾馆总数是多少？ */\nSelect count(*) from districts inner join hotels On Contains(districts.Shape, hotels.Location) = 1 where districts.name = '玄武区'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 京津冀2020年的总人口是多少？京津冀是指北京市、天津市和河北省。 */\nSELECT ",
            "response": "Sum(POP2020) from provinces inner join cities on Contains(provinces.Shape, cities.Shape) = 1 where provinces.name = '北京市' or provinces.name = '天津市' or provinces.name = '河北省'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu20"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 2023年GDP最高的省份是哪一个？该省有多少座机场？一个省由多个城市构成。 */\nSelect cities.province, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 where cities.province = (Select province from GDPs order by year_2023 desc limit 1)\n\n/* Answer the following: 哈尔滨市有多少个机场？ */\nSelect count(*) from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '哈尔滨市'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 内蒙古自治区各城市2020年的人口是多少？ */\nSELECT ",
            "response": "name, POP2020 from cities where province = '内蒙古自治区'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu21"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪些城市没有机场？ */\nSelect name from cities where name not in (Select distinct cities.name from cities inner join airports On Contains(cities.Shape, airports.Location) = 1)\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 没有985高校的省都有哪些？ */\nSELECT ",
            "response": "name from provinces where name not in (Select distinct province from universities where project_985 = 1)",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu22"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪些城市没有机场？ */\nSelect name from cities where name not in (Select distinct cities.name from cities inner join airports On Contains(cities.Shape, airports.Location) = 1)\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 哪些城市有985高校或者211高校？ */\nSELECT ",
            "response": "distinct city from universities where project_211 = 1 or project_985 = 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu23"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪些城市没有机场？ */\nSelect name from cities where name not in (Select distinct cities.name from cities inner join airports On Contains(cities.Shape, airports.Location) = 1)\n\n/* Answer the following: 哪条地铁线路的站点数量最多？共有多少个站点？ */\nSelect line, count(*) as count from subwaystations group by line order by count desc limit 1\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 哪些城市同时拥有985和211高校？ */\nSELECT ",
            "response": "distinct city from universities where project_211 = 1 and project_985 = 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu24"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 我想知道玄武区的宾馆总数是多少？ */\nSelect count(*) from districts inner join hotels On Contains(districts.Shape, hotels.Location) = 1 where districts.name = '玄武区'\n\n/* Answer the following: 南京市每条道路的总长度是多少？一条道路由所有名字相同的路段构成。 */\nSelect name, Sum(length) from roads group by name\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 哪些地级市没有985高校？地级市以'地级市'为名称表示。 */\nSELECT ",
            "response": "name from cities where name not in (Select distinct cities.name from cities inner join universities on universities.city = cities.name where universities.project_985 = 1) and administrative_division_category = '地级市'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu25"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪些城市没有机场？ */\nSelect name from cities where name not in (Select distinct cities.name from cities inner join airports On Contains(cities.Shape, airports.Location) = 1)\n\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 哪个省与其它省都不邻接？ */\nSELECT ",
            "response": "name from provinces where name not in (Select distinct a.name from provinces a inner join provinces b on Touches(a.Shape, b.Shape) = 1 where a.name != b.name)",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu26"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Answer the following: 每个区内有多少个地铁站？ */\nSelect districts.name, count(*) from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode\n\n/* Answer the following: 每条地铁线设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line order by line\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想了解各省与其它省接壤的数量。 */\nSELECT ",
            "response": "a.name, count(*) from provinces a inner join provinces b on Touches(a.Shape, b.Shape) = 1 where a.name != b.name group by a.Name",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu27"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 郑和公园附近最近的地铁站是哪一站？相距多远？郑和公园由名字相同的多个区域组成。 */\nSelect subwaystations.station, Distance(greenspaces.Shape, subwaystations.Location, 1) as distance from greenspaces inner join subwaystations On greenspaces.name = '郑和公园' order by distance asc limit 1\n\n/* Answer the following: 秦淮路与将军大道交汇处最近的地铁站是哪一站？相距多远？ */\nSelect subwaystations.station, Distance(Intersection(a.Shape, b.Shape), subwaystations.Location, 1) as distance from roads a inner join roads b on a.name = '秦淮路' and b.name = '将军大道' inner join subwaystations where Intersects(a.Shape, b.Shape) = 1 order by distance asc limit 1\n\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 北京市距离北京大学最近的985高校是哪所，距离是多少？北京大学除外。北京市以'北京市'为名称表示，北京大学以'北京大学'为名称表示。 */\nSELECT ",
            "response": "b.name, Distance(a.Location, b.Location, 1) from universities a inner join universities b where a.name = '北京大学' and b.province = '北京市' and b.name != '北京大学' order by Distance(a.Location, b.Location, 1) asc limit 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu28"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 长江边最近的酒店是哪家？长江是由名字相同的多段河流组成。 */\nSelect hotels.name from hotels inner join rivers On rivers.name = '长江' order by Distance(rivers.Shape, hotels.Location, 1) asc limit 1\n\n/* Answer the following: 请列出南京市文物局附近500米以内最近的5家宾馆及其距离。 */\nSelect hotels.name, Distance(agencies.Location, hotels.Location, 1) as d from agencies inner join hotels On d < 500 where agencies.NAME = '南京市文物局' order by Distance(agencies.Location, hotels.Location, 1) asc limit 5\n\n/* Answer the following: 距离长江1公里范围内有哪些地铁站？长江是由名字相同的多段河流组成。 */\nSelect distinct subwaystations.station from subwaystations inner join rivers On Distance(subwaystations.Location, rivers.Shape, 1) < 1000 where rivers.name = '长江'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 列出北京市与北京大学最近的5所重点高校，距离分别是多少？重点高校是指211或者985高校。北京大学除外。北京市以'北京市'为名称表示，北京大学以'北京大学'为名称表示。 */\nSELECT ",
            "response": "b.name, Distance(a.Location, b.Location, 1) from universities a inner join universities b where a.name = '北京大学' and b.province = '北京市' and b.name != '北京大学' and (b.project_211 = 1 or b.project_985 = 1) order by Distance(a.Location, b.Location, 1) asc limit 5",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu29"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哈尔滨市有多少个机场？ */\nSelect count(*) from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '哈尔滨市'\n\n/* Answer the following: 南京市每条地铁线路设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line\n\n/* Answer the following: 南京市地铁的总长度是多少？ */\nSelect Sum(GLength(Shape, 1)) from subways\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 湖北省内教育部属高校有多少？湖北省以'湖北省'为名称表示，教育部以'教育部'为名称表示。 */\nSELECT ",
            "response": "count(*) from universities where province = '湖北省' and affiliation = '教育部'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu30"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 河南省内最北边的城市是哪个？'最北边'指的是纬度最大的位置。 */\nSelect name from cities where province = '河南省' order by MbrMaxY(Shape) desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 河南省内哪些城市与外省没有接壤？河南省以'河南省'为名称表示。 */\nSELECT ",
            "response": "cities.name from provinces inner join cities on Contains(provinces.Shape, cities.Shape) = 1 where provinces.name = '河南省' and cities.name not in (Select distinct b.name from provinces a inner join cities b on Contains(a.Shape, b.Shape) = 1 inner join provinces c on Intersects(b.Shape, c.Shape) = 1 where a.name = '河南省' and c.name != '河南省')",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu31"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 我想了解玄武区和秦淮区的面积分别是多少？ */\nSelect name, Area(Shape, 1) from districts where name in ('玄武区', '秦淮区')\n\n/* Answer the following: 天台山位于哪个城市？ */\nSelect cities.name  from cities inner join ScenicSpots On Contains(cities.Shape, ScenicSpots.Location) = 1 where ScenicSpots.name = '天台山景区'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 河南省内哪些城市与外省有接壤？河南省以'河南省'为名称表示。 */\nSELECT ",
            "response": "distinct cities.name from cities inner join provinces On Intersects(cities.Shape, provinces.Shape) = 1 where cities.province = '河南省' and provinces.name != '河南省'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu32"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 南京市哪个区的地铁总长度最长？总长度是多少？应该计算地铁线路与各区交叠部分的长度。 */\nSelect districts.name, Sum(GLength(Intersection(districts.Shape, subways.Shape), 1)) as length  from districts inner join subways On Intersects(districts.Shape, subways.Shape) = 1 group by districts.name order by length desc limit 1\n\n/* Answer the following: 南京市面积最大的区是哪一区？面积是多少？ */\nSelect name, Area(Shape, 1) as area from districts order by area desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 与郑州市相邻接的城市中，2020年人口最多的城市是哪个？郑州市以'郑州市'为名称表示。 */\nSELECT ",
            "response": "b.name from cities a inner join cities b on Touches(a.Shape, b.Shape) = 1 where a.name = '郑州市' order by b.POP2020 desc limit 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu33"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市地铁的总长度是多少？ */\nSelect Sum(GLength(Shape, 1)) from subways\n\n/* Answer the following: 每条地铁线设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line order by line\n\n/* Answer the following: 874路公交线路的全程长度是多少？ */\nSelect distance from buslines where name = '874路'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 表universities使用的SRID是多少？ */\nSELECT ",
            "response": "distinct SRID(Location) from universities",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu34"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 每个区内有多少个地铁站？ */\nSelect districts.name, count(*) from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Answer the following: 每条地铁线设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line order by line\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想知道每个省的民办高校数量。民办以'民办'为名称表示。 */\nSELECT ",
            "response": "province, count(*) from universities where operation_type = '民办' group by province",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu35"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哈尔滨市有多少个机场？ */\nSelect count(*) from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '哈尔滨市'\n\n/* Answer the following: 我想知道玄武区的宾馆总数是多少？ */\nSelect count(*) from districts inner join hotels On Contains(districts.Shape, hotels.Location) = 1 where districts.name = '玄武区'\n\n/* Answer the following: 南京市每条地铁线路设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 河北省内名字含有'职业'的高校有多少所？河北省以'河北省'为名称表示。 */\nSELECT ",
            "response": "count(*) from universities where province = '河北省' and name like '%职业%'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu36"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 哪个区拥有最多的地铁站，数量是多少？ */\nSelect districts.name, count(*) as count from subwaystations inner join districts On subwaystations.adcode = districts.administrative_division_code group by subwaystations.adcode order by count desc limit 1\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 哪些省有以'中国'开头的大学？ */\nSELECT ",
            "response": "distinct province from universities where name like '中国%'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu37"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 北京市都有哪些机场？ */\nSelect airports.name from cities inner join airports On Within(airports.Location, cities.Shape) = 1 where cities.name = '北京市'\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 广州路一公里范围内有哪些宾馆？ */\nSelect distinct hotels.name from roads inner join hotels On Distance(roads.Shape, hotels.Location, 1) < 1000 where roads.name = '广州路'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 列出有以'中国'开头的大学的省及相应的大学。 */\nSELECT ",
            "response": "province, name from universities where name like '中国%'",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu38"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 2023年GDP最高的省是哪个？ */\nSelect province from GDPs order by year_2023 desc limit 1\n\n/* Answer the following: 2023年GDP最高的省份是哪一个？该省有多少座机场？一个省由多个城市构成。 */\nSelect cities.province, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 where cities.province = (Select province from GDPs order by year_2023 desc limit 1)\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 我想知道河北省2020年人口最多的城市是哪个。河北省以'河北省'为名称表示。 */\nSELECT ",
            "response": "name from cities where province = '河北省' order by POP2020 desc limit 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu39"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 湖北省2020年的国际旅游收入是多少？ */\nSelect Sum(international_toursim_earnings_Wan_dollar) from cities inner join tours On cities.name = tours.city and cities.province = '湖北省' where tours.year = 2020\n\n/* Answer the following: 南京市面积最大的区是哪一区？面积是多少？ */\nSelect name, Area(Shape, 1) as area from districts order by area desc limit 1\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 湖北省面积最大的城市，2020年的人口有多少？湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "name , POP2020 from cities where province = '湖北省' order by Area(Shape, 1) desc limit 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu40"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市面积最大的区是哪一区？面积是多少？ */\nSelect name, Area(Shape, 1) as area from districts order by area desc limit 1\n\n/* Answer the following: 湖北省2020年的国际旅游收入是多少？ */\nSelect Sum(international_toursim_earnings_Wan_dollar) from cities inner join tours On cities.name = tours.city and cities.province = '湖北省' where tours.year = 2020\n\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 湖北省面积最大的城市是哪座？这座城市有多少所高校？湖北省以'湖北省'为名称表示。 */\nSELECT ",
            "response": "city, count(*) from universities where city = (Select cities.name from provinces inner join cities on Contains(provinces.Shape, cities.Shape) = 1 where provinces.name = '湖北省' order by Area(cities.Shape, 1) desc limit 1)",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu41"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 南京市每条地铁线路设有多少个站点？ */\nSelect line, count(*) from subwaystations group by line\n\n/* Answer the following: 南京市各区的地铁线路长度分别是多少？应该计算地铁线路与各区交叠部分的长度。 */\nSelect districts.name, Sum(GLength(Intersection(districts.Shape, subways.Shape), 1)) from districts inner join subways On Intersects(districts.Shape, subways.Shape) = 1 group by districts.name\n\n/* Answer the following: 南京市哪个区的地铁总长度最长？总长度是多少？应该计算地铁线路与各区交叠部分的长度。 */\nSelect districts.name, Sum(GLength(Intersection(districts.Shape, subways.Shape), 1)) as length  from districts inner join subways On Intersects(districts.Shape, subways.Shape) = 1 group by districts.name order by length desc limit 1\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 江苏省重点高校最多的城市是哪个，高校数量有多少？重点高校是指211及985大学。江苏省以'江苏省'为名称表示。 */\nSELECT ",
            "response": "city, count(*) from universities where province = '江苏省' and (project_211 = 1 or project_985 = 1) group by city order by count(*) desc limit 1",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu42"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 2023年GDP高于浙江省的省份有哪些？这些省份的面积分别是多少？浙江省由多个城市构成。 */\nSelect province, Sum(Area(Shape, 1)) from cities where province in (Select b.province from GDPs a inner join GDPs b where a.province = '浙江省' and b.year_2023 > a.year_2023) group by province\n\n/* Answer the following: 东三省的总面积是多少？东三省指辽宁省、吉林省、黑龙江省。 */\nSelect Sum(Area(Shape, 1)) from cities where province in ('辽宁省', '吉林省', '黑龙江省')\n\n/* Answer the following: 西藏自治区的面积是多少？西藏自治区是一个省，由多个城市构成。 */\nSelect Sum(Area(Shape, 1)) from cities where province = '西藏自治区'\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 内蒙古自治区的面积比河北省大多少？内蒙古自治区以'内蒙古自治区'为名称表示，河北省以'河北省'为名称表示。 */\nSELECT ",
            "response": "(Select Area(Shape, 1) from provinces where name = '内蒙古自治区') - (Select Area(Shape, 1) from provinces where name = '河北省')",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu43"
        },
        {
            "prompt_tokens": 0,
            "prompt": "You are an expert in the SpatiLite spatial database and highly skilled in writing SQL queries.\n\nIn SpatiLite,\n\tThe function Distance(geom1 Geometry, geom2 Geometry, 1) returns the distance between geom1 and geom2, measured in meters.\n\tThe function Area( s Surface , 1) returns the area of s, measured in meters.\n\tThe function GLength( c Curve , 1) returns the length of c, measured in meters.\n\tThe function Centroid( s Surface ) returns the centroid of s, which may lie outside s.\n\n\t函数 Touches(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相邻（邻接）。\n\t函数 Intersects(geom1 Geometry, geom2 Geometry) 判断 geom1 和 geom2 是否相交。\n\n/* Some SQL examples are provided based on similar problems: */\n/* Answer the following: 哪个区的政府机构最多？有多少个？ */\nSelect districts.name, count(*) as count from agencies inner join districts On Within(agencies.Location, districts.Shape) = 1 group by districts.name order by count desc limit 1\n\n/* Answer the following: 哪个区的政府机构数量最多？具体有多少个？ */\nSelect districts.name, count(*) as count from districts inner join agencies on Contains(districts.Shape, agencies.Location) = 1 group by districts.name order by count desc limit 1\n\n/* Answer the following: 哪些城市有机场，数量分别多少？ */\nSelect cities.name, count(*) from cities inner join airports On Contains(cities.Shape, airports.Location) = 1 group by cities.name\n\n/* Given the following database schema: */\nCREATE TABLE \"cities\" (\nname TEXT PRIMARY KEY, \nadministrative_division_code TEXT NOT NULL, \nadministrative_division_category TEXT NOT NULL, \nPOP2020 INTEGER NOT NULL, \nPOP2010 INTEGER NOT NULL, \nPOP2000 INTEGER NOT NULL, \nshape MULTIPOLYGON NOT NULL, \nprovince TEXT REFERENCES provinces (name), \nShape_Area DOUBLE, \nShape_Length DOUBLE)\n\n表\"cities\"记录中国各个城市的位置及人口信息等。\n\nCREATE TABLE \"provinces\" (\nname TEXT PRIMARY KEY, \npinyin_name TEXT NOT NULL, \nadministrative_division_code TEXT NOT NULL, \nshape MULTIPOLYGON NOT NULL)\n\n表\"provinces\"记录中国各个省份的信息。\n\nCREATE TABLE \"universities\" (\nname TEXT PRIMARY KEY, \nacademic_discipline_category TEXT NOT NULL, \noperation_type TEXT NOT NULL, \neducational_level TEXT NOT NULL, \nproject_985 INTEGER NOT NULL, \nproject_211 INTEGER NOT NULL, \ndouble_tops INTEGER NOT NULL, \naffiliation TEXT, \naddress TEXT, \nlocation POINT NOT NULL, \nprovince TEXT REFERENCES provinces (name), \ncity TEXT REFERENCES cities (name), \nCONSTRAINT check_985 CHECK (project_985 = 1 or project_985 = 0), \nCONSTRAINT check_211 CHECK (project_211 = 1 or project_211 = 0), \nCONSTRAINT check_double CHECK (double_tops = 1 or double_tops = 0))\n\n表\"universities\"记录中国各个大学的信息。\n\n\n/* Answer the following with no explanation: 哪些省份有国家民委所属的高校？每个省份有多少所？国家民委以'国家民委'为名称表示。 */\nSELECT ",
            "response": "province, count(*) from universities where affiliation = '国家民委' group by province",
            "n_examples": 3,
            "db_id": "edu",
            "id": "edu44"
        }
    ]
}